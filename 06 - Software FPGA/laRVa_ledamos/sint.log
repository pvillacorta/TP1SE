
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\UART_CORE_NUMBITS'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:386: Warning: Range [0:0] select out of bounds on signal `\irqpen': Setting 1 LSB bits to undef.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:49: Warning: Identifier `\JY4' is implicitly declared.
main.v:80: Warning: Identifier `\XOE' is implicitly declared.
main.v:83: Warning: Identifier `\XD' is implicitly declared.
main.v:83: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:88: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:93: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:98: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:103: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:108: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:113: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:118: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:124: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:129: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:134: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:139: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:144: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:149: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:154: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:159: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: UART_CORE_NUMBITS   
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.4. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART_CORE_NUMBITS'.
Removing unused module `\UART_CORE'.
Removed 2 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:433$552'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:363$497 in module SYSTEM.
Marked 3 switch rules as full_case in process $proc$system.v:264$431 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:235$430 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:195$413 in module SYSTEM.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 58 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:64$558'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:362$527'.
  Set init value: \irqen = 8'00000000
Found init rule in `\SYSTEM.$proc$system.v:262$526'.
  Set init value: \TMF = 1'0
Found init rule in `\SYSTEM.$proc$system.v:261$525'.
  Set init value: \TMR = 15
Found init rule in `\SYSTEM.$proc$system.v:260$524'.
  Set init value: \tcount = 0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$731'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$730'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$729'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$728'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$727'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$726'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$725'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$724'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$723'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$722'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:363$497'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:64$558'.
Creating decoders for process `\main.$proc$main.v:67$554'.
Creating decoders for process `\ram32.$proc$system.v:429$545'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:422$532'.
     1/12: $0$memwr$\ram_array$system.v:423$528_EN[31:0]$535
     2/12: $0$memwr$\ram_array$system.v:423$528_DATA[31:0]$534
     3/12: $0$memwr$\ram_array$system.v:423$528_ADDR[10:0]$533
     4/12: $0$memwr$\ram_array$system.v:424$529_EN[31:0]$538
     5/12: $0$memwr$\ram_array$system.v:424$529_DATA[31:0]$537
     6/12: $0$memwr$\ram_array$system.v:424$529_ADDR[10:0]$536
     7/12: $0$memwr$\ram_array$system.v:425$530_EN[31:0]$541
     8/12: $0$memwr$\ram_array$system.v:425$530_DATA[31:0]$540
     9/12: $0$memwr$\ram_array$system.v:425$530_ADDR[10:0]$539
    10/12: $0$memwr$\ram_array$system.v:426$531_EN[31:0]$544
    11/12: $0$memwr$\ram_array$system.v:426$531_DATA[31:0]$543
    12/12: $0$memwr$\ram_array$system.v:426$531_ADDR[10:0]$542
Creating decoders for process `\SYSTEM.$proc$system.v:362$527'.
Creating decoders for process `\SYSTEM.$proc$system.v:262$526'.
Creating decoders for process `\SYSTEM.$proc$system.v:261$525'.
Creating decoders for process `\SYSTEM.$proc$system.v:260$524'.
Creating decoders for process `\SYSTEM.$proc$system.v:371$499'.
     1/3: $0$memwr$\irqvect$system.v:371$410_EN[29:0]$502
     2/3: $0$memwr$\irqvect$system.v:371$410_DATA[29:0]$501
     3/3: $0$memwr$\irqvect$system.v:371$410_ADDR[2:0]$500
Creating decoders for process `\SYSTEM.$proc$system.v:363$497'.
     1/1: $0\irqen[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:264$431'.
     1/5: $3\TMF[0:0]
     2/5: $2\TMF[0:0]
     3/5: $1\TMF[0:0]
     4/5: $0\tcount[31:0]
     5/5: $0\TMR[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:235$430'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:195$413'.
     1/1: $0\cdi[31:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$731'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$730'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$729'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$728'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$727'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$726'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$725'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$724'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$723'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$722'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$708'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$702'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$689'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$687'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:235$430'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:195$413'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:67$554'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:429$545'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:423$528_ADDR' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:423$528_DATA' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:423$528_EN' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:424$529_ADDR' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:424$529_DATA' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:424$529_EN' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:425$530_ADDR' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:425$530_DATA' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$873' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:425$530_EN' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:426$531_ADDR' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:426$531_DATA' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:426$531_EN' using process `\ram32.$proc$system.v:422$532'.
  created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:371$410_ADDR' using process `\SYSTEM.$proc$system.v:371$499'.
  created $dff cell `$procdff$878' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:371$410_DATA' using process `\SYSTEM.$proc$system.v:371$499'.
  created $dff cell `$procdff$879' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:371$410_EN' using process `\SYSTEM.$proc$system.v:371$499'.
  created $dff cell `$procdff$880' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:363$497'.
  created $adff cell `$procdff$881' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:264$431'.
  created $dff cell `$procdff$882' with positive edge clock.
Creating register for signal `\SYSTEM.\TMR' using process `\SYSTEM.$proc$system.v:264$431'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF' using process `\SYSTEM.$proc$system.v:264$431'.
  created $dff cell `$procdff$884' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$886' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$888' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
  created $dff cell `$procdff$891' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$708'.
  created $dff cell `$procdff$892' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$702'.
  created $dff cell `$procdff$893' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
  created $dff cell `$procdff$894' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
  created $dff cell `$procdff$895' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
  created $dff cell `$procdff$896' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
  created $dff cell `$procdff$897' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
  created $dff cell `$procdff$898' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$689'.
  created $dff cell `$procdff$899' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$687'.
  created $dff cell `$procdff$900' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$901' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$902' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$903' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$904' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$905' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$906' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$907' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$908' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$909' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$910' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:64$558'.
Removing empty process `main.$proc$main.v:67$554'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:429$545'.
Removing empty process `ram32.$proc$system.v:429$545'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:422$532'.
Removing empty process `ram32.$proc$system.v:422$532'.
Removing empty process `SYSTEM.$proc$system.v:362$527'.
Removing empty process `SYSTEM.$proc$system.v:262$526'.
Removing empty process `SYSTEM.$proc$system.v:261$525'.
Removing empty process `SYSTEM.$proc$system.v:260$524'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:371$499'.
Removing empty process `SYSTEM.$proc$system.v:371$499'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:363$497'.
Removing empty process `SYSTEM.$proc$system.v:363$497'.
Found and cleaned up 3 empty switches in `\SYSTEM.$proc$system.v:264$431'.
Removing empty process `SYSTEM.$proc$system.v:264$431'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:235$430'.
Removing empty process `SYSTEM.$proc$system.v:235$430'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:195$413'.
Removing empty process `SYSTEM.$proc$system.v:195$413'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$731'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$730'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$729'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$728'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$727'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$726'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$725'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$724'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$723'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$722'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$714'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$708'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$702'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$695'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$689'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$687'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$687'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 26 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 26 unused cells and 422 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\SCK is used but has no driver.
Warning: Wire main.\MOSI is used but has no driver.
Warning: Wire main.\FSS is used but has no driver.
found and reported 3 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 56 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $techmap\sys1.$procmux$770.
    dead port 1/2 on $mux $techmap\sys1.$procmux$776.
Removed 2 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$758:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:371$410_EN[29:0]$502 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$858:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$734:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$740:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$746:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$752:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:426$531_EN[31:0]$544 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 58 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 21 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:437$547 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:67$555 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:67$555 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:67$557 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$880 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$803_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$798_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$797_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$796_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$795_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$794_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$762 ($mux).
Removed cell main.$techmap\sys1.$procmux$760 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:393$512 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:281$436 ($add).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:227$422 ($eq).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$910 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$862 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$860 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:110$718 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:110$718 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:92$712 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:92$710 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:92$710 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart.v:89$706 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart.v:63$699 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart.v:63$699 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$694 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$693 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:42$691 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:42$691 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:110$718 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:110$718 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:92$712 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:92$710 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:92$710 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart1.$eq$uart.v:89$706 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$add$uart.v:63$699 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$add$uart.v:63$699 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$694 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$693 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:42$691 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:42$691 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$718 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$718 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$712 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$710 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$710 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$706 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$699 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$699 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$694 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$693 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$691 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$691 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$877 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$874 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$871 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$868 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$756 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$754 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$750 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$748 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$744 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$742 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$738 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$736 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:67$555 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$874 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$871 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$868 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:67$555_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_DATA[31:0]$534.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:423$528_EN[31:0]$535.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_DATA[31:0]$537.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:424$529_EN[31:0]$538.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_DATA[31:0]$540.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:425$530_EN[31:0]$541.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:423$528_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:424$529_EN.
Removed top 3 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:425$530_ADDR.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:425$530_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:426$531_ADDR.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$699_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:110$718_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$691_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart1.$add$uart.v:63$699_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart1.$sub$uart.v:42$691_Y.
Removed top 26 bits (of 32) from wire main.sys1.cpu.aluIn1.
Removed top 2 bits (of 32) from wire main.sys1.cpu.aluIn2.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 47 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:430$546 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$690_Y \sys1.uart1.wrtx \sys1.uart1.wrbaud \sys1.uart1.rd $techmap\sys1.uart1.$and$uart.v:42$690_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart.v:42$690_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs $techmap\sys1.$eq$system.v:227$422_Y $techmap\sys1.$eq$system.v:231$428_Y $techmap\sys1.$and$system.v:266$432_Y $techmap\sys1.$and$system.v:275$434_Y $techmap\sys1.$and$system.v:365$498_Y $techmap\sys1.$and$system.v:371$504_Y $techmap\sys1.$procmux$794_CMP $techmap\sys1.$procmux$795_CMP $techmap\sys1.$procmux$796_CMP $techmap\sys1.$procmux$797_CMP $techmap\sys1.$procmux$802_CMP $techmap\sys1.$procmux$798_CMP $techmap\sys1.$procmux$799_CMP $techmap\sys1.$procmux$803_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:394$520 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:67$555 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:281$436 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$699 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$718 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$691 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$710 ($sub).
  creating $macc model for $techmap\sys1.uart1.$add$uart.v:63$699 ($add).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:110$718 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:42$691 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:92$710 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart.v:63$699 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:110$718 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:42$691 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:92$710 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:42$691.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:110$718.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart.v:63$699.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:92$710.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:42$691.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:110$718.
  creating $alu model for $macc $techmap\sys1.uart1.$add$uart.v:63$699.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$710.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$691.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$718.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$699.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:92$710.
  creating $alu model for $macc $techmap\sys1.$add$system.v:281$436.
  creating $alu model for $macc $sub$main.v:67$555.
  creating $alu cell for $sub$main.v:67$555: $auto$alumacc.cc:485:replace_alu$936
  creating $alu cell for $techmap\sys1.$add$system.v:281$436: $auto$alumacc.cc:485:replace_alu$939
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:92$710: $auto$alumacc.cc:485:replace_alu$942
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$945
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$948
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$951
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$954
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$699: $auto$alumacc.cc:485:replace_alu$957
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$718: $auto$alumacc.cc:485:replace_alu$960
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$691: $auto$alumacc.cc:485:replace_alu$963
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$710: $auto$alumacc.cc:485:replace_alu$966
  creating $alu cell for $techmap\sys1.uart1.$add$uart.v:63$699: $auto$alumacc.cc:485:replace_alu$969
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:110$718: $auto$alumacc.cc:485:replace_alu$972
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:42$691: $auto$alumacc.cc:485:replace_alu$975
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:92$710: $auto$alumacc.cc:485:replace_alu$978
  creating $alu cell for $techmap\sys1.uart2.$add$uart.v:63$699: $auto$alumacc.cc:485:replace_alu$981
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:110$718: $auto$alumacc.cc:485:replace_alu$984
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:42$691: $auto$alumacc.cc:485:replace_alu$987
  created 18 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 4 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:371$523' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:423$548' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:424$549' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:425$550' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:426$551' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:394$520' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:430$546' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:423$548) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:424$549) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:425$550) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:426$551) has addr \sys1.cpu.addr [10:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:371$523 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:394$520 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:437$547 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:426$551 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:430$546 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=240 rports=1 wports=1 dbits=30 abits=3 words=8
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=248 dwaste=2 bwaste=3984 waste=3984 efficiency=2
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=504 dwaste=2 bwaste=4048 waste=4048 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1016 dwaste=2 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2040 dwaste=0 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$f93e392529d19d1a533b14f327cb659af897c411\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c17e4683bd194574ef7bc6efa660704103ba583b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d8c3e1154af9f256185da26a6fa44fc46ae0ff02\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$29817ab3399f40fcc64bc5feb18bdba9ecd47535\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3a52d2e38d3682949224ba24f05d8bcaf4208394\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e4fe12898377c3a5a6328aa8005556b2a156b277\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b193f9a8600dca7167e18891d7186981b0090c8b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$939dd271e6b4d5eeb04d8316f76316ea4c5d0784\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f8b3c1c8fd4307c3d0d027e09d9311023023feea\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43f41cf2e6026e5de4d750f691f62614cd841c05\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a45a42c7ec4b97e6b8cf18379c63804dc5e41b58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e466ed1f3e40805331d9f9ab1f2c582f676d791\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cf65bfad484cd60b4b9ff8b7b750b9cc0f5d51d0\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2652dfb00531fe8ad8b3544692822e2055035166\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cd0145e5d7af6ec938d7ebb9363da7c1f1d6c595\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bf1fbe0ee7ba5936e6ad74d9ca000a2b5f133a2a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$afad566358013dcdd84b2cde309ae2440d5c6fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0597e4e00822ab36a55a6b6cf4bdc686bc4c5f81\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64d175b95196cd4418d6d5dfbd4ceeec143b106c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a358555c9e5a42c956d1aab601aa10f35bc0e700\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1c47367636431629f56d1b2f12c2e5a535d65dc6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$72a58c1a6bbf83800bdf55461ab6a7b8067416f4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3986fa2de5c1de88113ed9f18ff2ac123fdeac56\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$85c039c0c30864ff5cc51a514aa57eb82f3cfd7f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c752fe598bb735aa918fa31e1601b5a4438a57af\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a78ddff81909dcf21efdeee403af81a53e1f350b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84d5cde021e30e0167e77428e32366febef5ae68\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e9c63b6edb049ea4d44e01845c6e1135a1e009a7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a8585776b6d144ace6b944995738c5ff95068ab4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cc9046da25a765416877ff33bddc725a3ff9b43a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$323124fc0a193934e2f604f093350f4895399ee7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8777093fa24e3b12efe51945e644d73b08e9e82d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 395 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 8 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:393$513:
      Old ports: A=3'111, B=3'110, Y=$techmap\sys1.$ternary$system.v:393$513_Y
      New ports: A=1'1, B=1'0, Y=$techmap\sys1.$ternary$system.v:393$513_Y [0]
      New connections: $techmap\sys1.$ternary$system.v:393$513_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:393$514:
      Old ports: A=$techmap\sys1.$ternary$system.v:393$513_Y, B=3'101, Y=$techmap\sys1.$ternary$system.v:393$514_Y
      New ports: A={ 1'1 $techmap\sys1.$ternary$system.v:393$513_Y [0] }, B=2'01, Y=$techmap\sys1.$ternary$system.v:393$514_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:393$514_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:393$515:
      Old ports: A=$techmap\sys1.$ternary$system.v:393$514_Y, B=3'100, Y=$techmap\sys1.$ternary$system.v:393$515_Y
      New ports: A=$techmap\sys1.$ternary$system.v:393$514_Y [1:0], B=2'00, Y=$techmap\sys1.$ternary$system.v:393$515_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:393$515_Y [2] = 1'1
  Optimizing cells in module \main.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 156 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 10 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 143 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 338 unused cells and 561 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$936.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$939.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$942.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$957.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$960.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$963.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$966.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$969.slice[0].carry: CO=\sys1.uart1.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$972.slice[0].carry: CO=\sys1.uart1.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$975.slice[0].carry: CO=\sys1.uart1.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$978.slice[0].carry: CO=\sys1.uart1.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$981.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$984.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$987.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1117.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1164.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$1491.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.18. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1707 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1708 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1709 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1710 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1711 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1712 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1713 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1714 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1715 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1716 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1717 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1718 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1719 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1720 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1721 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1722 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1723 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1724 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1725 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1726 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1727 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1728 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1729 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [0] -> \sys1.irqvect[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1730 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [1] -> \sys1.irqvect[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1731 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [2] -> \sys1.irqvect[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1732 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [3] -> \sys1.irqvect[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1733 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [4] -> \sys1.irqvect[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1734 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [5] -> \sys1.irqvect[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1735 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [6] -> \sys1.irqvect[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1736 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [7] -> \sys1.irqvect[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1737 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [8] -> \sys1.irqvect[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1738 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [9] -> \sys1.irqvect[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1739 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [10] -> \sys1.irqvect[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1740 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [11] -> \sys1.irqvect[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1741 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [12] -> \sys1.irqvect[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1742 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [13] -> \sys1.irqvect[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1743 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [14] -> \sys1.irqvect[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1744 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [15] -> \sys1.irqvect[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1745 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [16] -> \sys1.irqvect[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1746 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [17] -> \sys1.irqvect[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1747 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [18] -> \sys1.irqvect[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1748 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [19] -> \sys1.irqvect[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1749 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [20] -> \sys1.irqvect[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1750 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [21] -> \sys1.irqvect[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1751 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [22] -> \sys1.irqvect[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1752 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [23] -> \sys1.irqvect[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1753 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [24] -> \sys1.irqvect[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1754 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [25] -> \sys1.irqvect[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1755 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [26] -> \sys1.irqvect[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1756 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [27] -> \sys1.irqvect[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1757 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [28] -> \sys1.irqvect[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1758 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1609 [29] -> \sys1.irqvect[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1971 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1972 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1973 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1974 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1975 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1976 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1977 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1978 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1979 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1980 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1981 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1982 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1983 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1984 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1985 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1986 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1987 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1988 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1989 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1990 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1991 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1992 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1993 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1994 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1995 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1996 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1997 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1998 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1569 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1250 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2134 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2135 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2136 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2137 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2138 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2139 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2140 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2141 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2142 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2143 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2144 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2145 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2146 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2147 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2148 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2149 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2150 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2151 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2152 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2153 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2154 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2155 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2156 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2157 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2158 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2159 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2160 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2161 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2162 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2163 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2164 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2165 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1270 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2166 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2167 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2168 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2169 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2170 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2171 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2172 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2173 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2174 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2175 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2176 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2177 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2178 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2179 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2180 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2181 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2182 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2183 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2184 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2185 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2186 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2187 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2188 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2189 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2190 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2191 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2192 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2193 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2194 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2195 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2196 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2197 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1310 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2198 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2199 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2200 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2201 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2202 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2203 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2204 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2205 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2206 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2207 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2208 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2209 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2210 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2211 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2212 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2213 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2214 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2215 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2216 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2217 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2218 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2219 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2220 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2221 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2222 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2223 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2224 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2225 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2226 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2227 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2228 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2229 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1330 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2231 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2232 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2233 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2234 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2235 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2236 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2237 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2238 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2239 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2240 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2241 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2242 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2243 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2244 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2245 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2246 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2247 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2248 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2249 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2250 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2251 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2252 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2253 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2254 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2255 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2256 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2257 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2258 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2259 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2260 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1561 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2261 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2262 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2263 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2264 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2265 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2266 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2267 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2268 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2269 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2270 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2271 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2272 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2273 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2274 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2275 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2276 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2277 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2278 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2279 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2280 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2281 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2282 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2283 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2284 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2285 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2286 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2287 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2288 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2289 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2290 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2291 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2292 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1390 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2325 to $_DFFE_PP_ for $techmap\sys1.$0\TMF[0:0] -> \sys1.TMF.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2326 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [0] -> \sys1.TMR [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2327 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [1] -> \sys1.TMR [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2328 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [2] -> \sys1.TMR [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2329 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [3] -> \sys1.TMR [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2330 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [4] -> \sys1.TMR [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2331 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [5] -> \sys1.TMR [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2332 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [6] -> \sys1.TMR [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2333 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [7] -> \sys1.TMR [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2334 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [8] -> \sys1.TMR [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2335 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [9] -> \sys1.TMR [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2336 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [10] -> \sys1.TMR [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2337 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [11] -> \sys1.TMR [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2338 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [12] -> \sys1.TMR [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2339 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [13] -> \sys1.TMR [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2340 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [14] -> \sys1.TMR [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2341 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [15] -> \sys1.TMR [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2342 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [16] -> \sys1.TMR [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2343 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [17] -> \sys1.TMR [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2344 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [18] -> \sys1.TMR [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2345 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [19] -> \sys1.TMR [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2346 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [20] -> \sys1.TMR [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2347 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [21] -> \sys1.TMR [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2348 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [22] -> \sys1.TMR [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2349 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [23] -> \sys1.TMR [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2350 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [24] -> \sys1.TMR [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2351 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [25] -> \sys1.TMR [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2352 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [26] -> \sys1.TMR [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2353 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [27] -> \sys1.TMR [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2354 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [28] -> \sys1.TMR [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2355 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [29] -> \sys1.TMR [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2356 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [30] -> \sys1.TMR [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2357 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [31] -> \sys1.TMR [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2571 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [0] -> \sys1.irqvect[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2572 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [1] -> \sys1.irqvect[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2573 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [2] -> \sys1.irqvect[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2574 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [3] -> \sys1.irqvect[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2575 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [4] -> \sys1.irqvect[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2576 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [5] -> \sys1.irqvect[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2577 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [6] -> \sys1.irqvect[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2578 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [7] -> \sys1.irqvect[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2579 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [8] -> \sys1.irqvect[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2580 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [9] -> \sys1.irqvect[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2581 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [10] -> \sys1.irqvect[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2582 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [11] -> \sys1.irqvect[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2583 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [12] -> \sys1.irqvect[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2584 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [13] -> \sys1.irqvect[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2585 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [14] -> \sys1.irqvect[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2586 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [15] -> \sys1.irqvect[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2587 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [16] -> \sys1.irqvect[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2588 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [17] -> \sys1.irqvect[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2589 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [18] -> \sys1.irqvect[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2590 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [19] -> \sys1.irqvect[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2591 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [20] -> \sys1.irqvect[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2592 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [21] -> \sys1.irqvect[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2593 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [22] -> \sys1.irqvect[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2594 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [23] -> \sys1.irqvect[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2595 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [24] -> \sys1.irqvect[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2596 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [25] -> \sys1.irqvect[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2597 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [26] -> \sys1.irqvect[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2598 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [27] -> \sys1.irqvect[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2599 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [28] -> \sys1.irqvect[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2600 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1601 [29] -> \sys1.irqvect[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2811 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2812 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2813 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2814 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2815 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2816 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2817 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2818 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2819 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2820 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2821 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2822 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2823 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2824 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2825 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2826 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2827 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2828 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2829 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2830 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2831 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2832 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2833 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2834 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2835 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2836 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2837 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2838 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2839 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2840 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1585 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2849 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [0] -> \sys1.irqvect[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2850 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [1] -> \sys1.irqvect[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2851 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [2] -> \sys1.irqvect[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2852 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [3] -> \sys1.irqvect[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2853 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [4] -> \sys1.irqvect[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2854 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [5] -> \sys1.irqvect[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2855 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [6] -> \sys1.irqvect[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2856 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [7] -> \sys1.irqvect[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2857 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [8] -> \sys1.irqvect[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2858 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [9] -> \sys1.irqvect[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2859 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [10] -> \sys1.irqvect[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2860 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [11] -> \sys1.irqvect[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2861 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [12] -> \sys1.irqvect[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2862 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [13] -> \sys1.irqvect[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2863 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [14] -> \sys1.irqvect[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2864 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [15] -> \sys1.irqvect[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2865 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [16] -> \sys1.irqvect[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2866 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [17] -> \sys1.irqvect[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2867 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [18] -> \sys1.irqvect[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2868 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [19] -> \sys1.irqvect[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2869 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [20] -> \sys1.irqvect[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2870 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [21] -> \sys1.irqvect[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2871 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [22] -> \sys1.irqvect[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2872 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [23] -> \sys1.irqvect[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2873 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [24] -> \sys1.irqvect[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2874 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [25] -> \sys1.irqvect[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2875 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [26] -> \sys1.irqvect[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2876 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [27] -> \sys1.irqvect[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2877 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [28] -> \sys1.irqvect[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2878 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1595 [29] -> \sys1.irqvect[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3104 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3105 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1410 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3106 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3107 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3108 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3109 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3110 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3111 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3112 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3113 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3114 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3115 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3116 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3117 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3118 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3119 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3120 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3121 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3122 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3123 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3124 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3125 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3126 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3127 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3128 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3129 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3130 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3131 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3132 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3133 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3134 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3135 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3136 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3137 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1370 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3138 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3139 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3140 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3141 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3142 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3143 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3144 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3145 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3146 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3147 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3148 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3149 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3150 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3151 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3152 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3153 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3154 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3155 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3156 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3157 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3158 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3159 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3160 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3161 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3162 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3164 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3165 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3166 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3167 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3168 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3169 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1290 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3170 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3171 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3172 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3173 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3174 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3175 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3176 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3177 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3178 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3179 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3180 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3181 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3182 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3183 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3184 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3185 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3186 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3187 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3188 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3189 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3190 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3191 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3192 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3193 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3194 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3195 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3196 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3197 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3198 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3199 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3200 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3201 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1470 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3202 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3203 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3204 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3205 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3206 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3207 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3208 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3209 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3210 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3211 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3212 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3213 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3214 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3215 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3216 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3217 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3218 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3219 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3220 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3221 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3222 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3223 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3224 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3225 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3227 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3228 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3229 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3230 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3231 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3232 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3233 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1450 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3234 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3235 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3236 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3237 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3238 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3239 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3240 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3241 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3242 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3243 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3244 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3245 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3246 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3247 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3248 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3249 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3250 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3251 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3252 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3253 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3254 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3255 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3256 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3257 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3258 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3259 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3260 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3261 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3262 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3263 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3264 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3265 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1490 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3427 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3428 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3429 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3430 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3431 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3432 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3433 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3434 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3435 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3436 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3437 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3438 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3439 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3440 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3441 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3442 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3443 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3444 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3445 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3446 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3447 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3448 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3449 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3450 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3451 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3452 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3453 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3454 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3455 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3456 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3457 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3458 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1510 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3459 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3460 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3461 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3462 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3463 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3464 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3465 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3466 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3467 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3468 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3469 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3470 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3471 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3472 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3473 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3474 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3475 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3476 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3477 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3478 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3479 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3480 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3481 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3482 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3483 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3484 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3485 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3486 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3487 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3488 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3489 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3490 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1430 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6670 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6671 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6672 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6673 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6674 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6675 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6676 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6677 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6678 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6679 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6680 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6681 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6682 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6683 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6684 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6685 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6686 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6687 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6688 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6689 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6690 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6691 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6692 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6693 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6694 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6695 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6696 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6697 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6698 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6699 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1579 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6701 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [0] -> \sys1.uart2.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6702 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [1] -> \sys1.uart2.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6703 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [2] -> \sys1.uart2.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6704 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [3] -> \sys1.uart2.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6705 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [4] -> \sys1.uart2.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6706 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [5] -> \sys1.uart2.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6707 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [6] -> \sys1.uart2.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6708 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [7] -> \sys1.uart2.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6709 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [8] -> \sys1.uart2.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6710 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [9] -> \sys1.uart2.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6711 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [10] -> \sys1.uart2.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6712 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [11] -> \sys1.uart2.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6739 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [0] -> \sys1.uart2.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6740 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [1] -> \sys1.uart2.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6741 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [2] -> \sys1.uart2.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6742 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [3] -> \sys1.uart2.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6743 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [4] -> \sys1.uart2.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6744 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [5] -> \sys1.uart2.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6745 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [6] -> \sys1.uart2.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6746 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [7] -> \sys1.uart2.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6747 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6763 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6764 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6765 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6766 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6767 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6768 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6769 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6770 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6771 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6772 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6773 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6774 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6775 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6776 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6777 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6778 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6779 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6780 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6781 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6782 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6783 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6784 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6785 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6786 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7200 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [0] -> \sys1.uart1.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7201 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [1] -> \sys1.uart1.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7202 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [2] -> \sys1.uart1.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7203 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [3] -> \sys1.uart1.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7204 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [4] -> \sys1.uart1.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7205 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [5] -> \sys1.uart1.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7206 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [6] -> \sys1.uart1.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7207 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [7] -> \sys1.uart1.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7208 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [8] -> \sys1.uart1.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7209 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [9] -> \sys1.uart1.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7210 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [10] -> \sys1.uart1.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7211 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [11] -> \sys1.uart1.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7238 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [0] -> \sys1.uart1.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7239 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [1] -> \sys1.uart1.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7240 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [2] -> \sys1.uart1.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7241 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [3] -> \sys1.uart1.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7242 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [4] -> \sys1.uart1.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7243 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [5] -> \sys1.uart1.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7244 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [6] -> \sys1.uart1.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7245 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [7] -> \sys1.uart1.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7246 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thre[0:0] -> \sys1.uart1.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7262 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [0] -> \sys1.uart1.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7263 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [1] -> \sys1.uart1.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7264 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [2] -> \sys1.uart1.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7265 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [3] -> \sys1.uart1.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7266 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\stopb[0:0] -> \sys1.uart1.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7267 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [0] -> \sys1.uart1.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7268 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [1] -> \sys1.uart1.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7269 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [2] -> \sys1.uart1.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7270 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [3] -> \sys1.uart1.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7271 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [4] -> \sys1.uart1.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7272 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [5] -> \sys1.uart1.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7273 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [6] -> \sys1.uart1.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7274 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [7] -> \sys1.uart1.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7275 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [0] -> \sys1.uart1.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7276 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [1] -> \sys1.uart1.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7277 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [2] -> \sys1.uart1.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7278 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [3] -> \sys1.uart1.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7279 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [4] -> \sys1.uart1.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7280 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [5] -> \sys1.uart1.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7281 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [6] -> \sys1.uart1.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7282 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [7] -> \sys1.uart1.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7283 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [8] -> \sys1.uart1.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7284 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\ove[0:0] -> \sys1.uart1.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7285 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\dv[0:0] -> \sys1.uart1.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7516 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7517 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7518 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7519 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7520 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7521 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7522 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7523 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7524 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7525 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7526 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7527 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7528 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7529 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7530 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7531 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7532 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7533 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7534 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7535 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7536 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7537 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7538 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7539 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7540 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7541 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7542 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7543 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7544 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7545 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7546 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7547 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1350 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7612 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7613 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7614 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7615 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7616 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7617 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7618 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7619 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7620 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7621 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7622 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7623 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7650 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7651 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7652 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7653 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7654 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7655 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7656 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7657 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7658 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7674 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7675 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7676 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7677 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7678 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7679 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7680 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7681 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7682 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7683 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7684 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7685 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7686 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7687 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7688 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7689 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7690 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7691 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7692 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7693 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7694 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7695 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7696 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7697 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8102 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [0] -> \sys1.irqvect[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8103 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [1] -> \sys1.irqvect[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8104 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [2] -> \sys1.irqvect[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8105 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [3] -> \sys1.irqvect[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8106 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [4] -> \sys1.irqvect[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8107 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [5] -> \sys1.irqvect[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8108 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [6] -> \sys1.irqvect[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8109 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [7] -> \sys1.irqvect[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8110 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [8] -> \sys1.irqvect[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8111 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [9] -> \sys1.irqvect[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8112 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [10] -> \sys1.irqvect[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8113 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [11] -> \sys1.irqvect[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8114 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [12] -> \sys1.irqvect[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8115 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [13] -> \sys1.irqvect[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8116 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [14] -> \sys1.irqvect[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8117 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [15] -> \sys1.irqvect[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8118 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [16] -> \sys1.irqvect[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8119 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [17] -> \sys1.irqvect[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8120 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [18] -> \sys1.irqvect[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8121 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [19] -> \sys1.irqvect[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8122 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [20] -> \sys1.irqvect[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8123 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [21] -> \sys1.irqvect[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8124 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [22] -> \sys1.irqvect[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8125 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [23] -> \sys1.irqvect[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8126 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [24] -> \sys1.irqvect[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8127 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [25] -> \sys1.irqvect[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8128 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [26] -> \sys1.irqvect[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8129 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [27] -> \sys1.irqvect[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8130 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [28] -> \sys1.irqvect[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8131 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1615 [29] -> \sys1.irqvect[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8192 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8193 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8194 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8195 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8196 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8197 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8198 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8199 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8200 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8201 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8202 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8203 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8204 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8205 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8206 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8207 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8208 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8209 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8210 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8211 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8212 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8213 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8214 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8215 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8216 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8217 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8218 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8219 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8220 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8221 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8222 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8223 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1230 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2390 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2391 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2392 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [2] -> \sys1.irqen [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2393 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [3] -> \sys1.irqen [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2394 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [4] -> \sys1.irqen [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2395 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [5] -> \sys1.irqen [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2396 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [6] -> \sys1.irqen [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2397 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [7] -> \sys1.irqen [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4394 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4395 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4396 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4397 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4398 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4399 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4400 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4401 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4402 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4403 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4404 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4405 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4406 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4407 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4408 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4409 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4410 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4411 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4412 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4413 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4414 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4415 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4416 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4417 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4418 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4419 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4420 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4421 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4422 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4423 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$957.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$960.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$963.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$936.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$939.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$942.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$966.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$969.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$972.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$975.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$978.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$981.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$984.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$987.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1117.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1164.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$1491.$auto$alumacc.cc:485:replace_alu$1704.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1707 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1717 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1715 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7285 (SB_DFFE): \sys1.uart1.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1716 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1719 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1725 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1727 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4455 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1726 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1723 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1708 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1711 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1714 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7516 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3459 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1728 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1718 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1713 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7200 (SB_DFFE): \sys1.uart1.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6786 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1724 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3138 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2355 (SB_DFFE): \sys1.TMR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2356 (SB_DFFE): \sys1.TMR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2357 (SB_DFFE): \sys1.TMR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2359 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2360 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2361 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2369 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2375 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2376 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2377 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2378 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2379 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2380 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2381 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2382 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2383 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2384 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2200 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1710 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2262 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2263 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2264 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2265 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2266 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2267 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2268 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2269 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2270 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2271 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2272 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2273 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2274 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2275 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2276 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2277 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2278 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2279 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2280 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2281 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2282 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2283 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2284 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2285 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2286 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2287 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2288 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2289 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2290 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2291 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2292 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFFE): \sys1.TMR [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2261 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFFE): \sys1.TMF = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2328 (SB_DFFE): \sys1.TMR [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2329 (SB_DFFE): \sys1.TMR [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFFE): \sys1.TMR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFFE): \sys1.TMR [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFFE): \sys1.TMR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFFE): \sys1.TMR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2334 (SB_DFFE): \sys1.TMR [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2335 (SB_DFFE): \sys1.TMR [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2336 (SB_DFFE): \sys1.TMR [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2337 (SB_DFFE): \sys1.TMR [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2338 (SB_DFFE): \sys1.TMR [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2339 (SB_DFFE): \sys1.TMR [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2340 (SB_DFFE): \sys1.TMR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2341 (SB_DFFE): \sys1.TMR [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2342 (SB_DFFE): \sys1.TMR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2343 (SB_DFFE): \sys1.TMR [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2344 (SB_DFFE): \sys1.TMR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2345 (SB_DFFE): \sys1.TMR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2346 (SB_DFFE): \sys1.TMR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2347 (SB_DFFE): \sys1.TMR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2348 (SB_DFFE): \sys1.TMR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2349 (SB_DFFE): \sys1.TMR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2350 (SB_DFFE): \sys1.TMR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2351 (SB_DFFE): \sys1.TMR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2352 (SB_DFFE): \sys1.TMR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2353 (SB_DFFE): \sys1.TMR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2354 (SB_DFFE): \sys1.TMR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFFE): \sys1.TMR [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2385 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2386 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2387 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2388 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2389 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2391 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2390 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1722 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1721 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8192 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3075 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3076 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3077 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3078 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3079 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3080 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3081 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3082 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3083 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3084 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3085 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3086 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3087 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3088 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3089 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3090 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3091 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3092 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3093 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3094 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3095 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3096 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3097 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3098 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3099 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3100 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3101 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3102 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3103 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3104 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3074 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3105 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3107 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3108 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3109 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3110 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3111 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3112 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3113 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3114 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3115 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3116 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3117 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3118 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3119 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3120 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3121 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3122 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3123 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3124 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3125 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3126 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3127 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3128 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3129 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3130 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3131 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3132 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3133 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3134 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3135 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3136 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3106 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3137 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3139 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3140 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3141 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3142 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3143 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3144 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3145 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3146 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3147 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3148 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3149 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3150 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3151 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3152 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3153 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3154 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3155 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3156 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3157 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3158 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3159 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3160 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3161 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3162 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3163 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3164 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3165 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3166 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3167 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3168 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3169 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3171 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3172 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3173 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3174 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3175 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3176 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3177 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3178 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3179 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3180 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3181 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3182 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3183 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3184 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3185 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3186 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3187 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3188 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3189 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3190 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3191 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3192 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3193 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3194 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3195 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3196 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3197 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3170 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3228 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3229 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3230 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3231 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3232 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3233 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3235 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3236 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3237 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3238 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3239 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3240 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3241 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3242 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3243 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3244 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3245 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3246 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3247 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3248 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3249 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3250 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3251 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3252 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3253 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3254 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3255 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3256 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3257 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3258 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3259 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3260 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3261 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3262 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3263 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3264 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3234 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3265 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3428 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3429 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3430 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3431 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3432 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3433 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3434 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3435 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3436 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3437 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3438 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3439 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3440 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3441 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3442 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3443 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3444 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3445 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3446 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3447 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3448 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3449 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3450 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3451 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3452 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3453 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3454 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3455 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3456 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3457 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3427 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3458 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3460 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3461 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3462 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3463 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3464 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3465 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3466 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3467 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3468 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3469 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3470 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3471 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3472 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3473 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3474 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3475 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3476 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3477 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3478 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3479 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3480 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3481 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3482 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3483 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3484 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3485 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3486 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3487 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3488 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3489 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4331 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3490 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1709 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6702 (SB_DFFE): \sys1.uart2.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6703 (SB_DFFE): \sys1.uart2.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6704 (SB_DFFE): \sys1.uart2.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6705 (SB_DFFE): \sys1.uart2.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6706 (SB_DFFE): \sys1.uart2.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6707 (SB_DFFE): \sys1.uart2.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6708 (SB_DFFE): \sys1.uart2.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6709 (SB_DFFE): \sys1.uart2.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6710 (SB_DFFE): \sys1.uart2.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6711 (SB_DFFE): \sys1.uart2.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6701 (SB_DFFE): \sys1.uart2.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6712 (SB_DFFE): \sys1.uart2.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6714 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6715 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6716 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6717 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6718 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6719 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6720 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6721 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6722 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6723 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6713 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6725 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6724 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6731 (SB_DFF): \sys1.uart2.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6732 (SB_DFF): \sys1.uart2.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6733 (SB_DFF): \sys1.uart2.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6734 (SB_DFF): \sys1.uart2.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6735 (SB_DFF): \sys1.uart2.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6736 (SB_DFF): \sys1.uart2.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFF): \sys1.uart2.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6730 (SB_DFF): \sys1.uart2.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFF): \sys1.uart2.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6748 (SB_DFF): \sys1.uart2.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6749 (SB_DFF): \sys1.uart2.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6751 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6752 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6753 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6754 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6755 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6756 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6757 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6758 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6759 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6760 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6750 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6761 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6764 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6765 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6763 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6766 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6785 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1712 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7201 (SB_DFFE): \sys1.uart1.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7202 (SB_DFFE): \sys1.uart1.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7203 (SB_DFFE): \sys1.uart1.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7204 (SB_DFFE): \sys1.uart1.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7205 (SB_DFFE): \sys1.uart1.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7206 (SB_DFFE): \sys1.uart1.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7207 (SB_DFFE): \sys1.uart1.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7208 (SB_DFFE): \sys1.uart1.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7209 (SB_DFFE): \sys1.uart1.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7210 (SB_DFFE): \sys1.uart1.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7211 (SB_DFFE): \sys1.uart1.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7213 (SB_DFF): \sys1.uart1.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7214 (SB_DFF): \sys1.uart1.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7215 (SB_DFF): \sys1.uart1.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7216 (SB_DFF): \sys1.uart1.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7217 (SB_DFF): \sys1.uart1.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7218 (SB_DFF): \sys1.uart1.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7219 (SB_DFF): \sys1.uart1.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7220 (SB_DFF): \sys1.uart1.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7221 (SB_DFF): \sys1.uart1.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7222 (SB_DFF): \sys1.uart1.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7212 (SB_DFF): \sys1.uart1.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7224 (SB_DFF): \sys1.uart1.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7223 (SB_DFF): \sys1.uart1.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7230 (SB_DFF): \sys1.uart1.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7231 (SB_DFF): \sys1.uart1.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7232 (SB_DFF): \sys1.uart1.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7233 (SB_DFF): \sys1.uart1.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7234 (SB_DFF): \sys1.uart1.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7235 (SB_DFF): \sys1.uart1.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7236 (SB_DFF): \sys1.uart1.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7229 (SB_DFF): \sys1.uart1.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7237 (SB_DFF): \sys1.uart1.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7246 (SB_DFFE): \sys1.uart1.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7247 (SB_DFF): \sys1.uart1.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7248 (SB_DFF): \sys1.uart1.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7250 (SB_DFF): \sys1.uart1.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7251 (SB_DFF): \sys1.uart1.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7252 (SB_DFF): \sys1.uart1.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7253 (SB_DFF): \sys1.uart1.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7254 (SB_DFF): \sys1.uart1.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7255 (SB_DFF): \sys1.uart1.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7256 (SB_DFF): \sys1.uart1.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7257 (SB_DFF): \sys1.uart1.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7258 (SB_DFF): \sys1.uart1.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7259 (SB_DFF): \sys1.uart1.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7249 (SB_DFF): \sys1.uart1.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7260 (SB_DFF): \sys1.uart1.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7263 (SB_DFFE): \sys1.uart1.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7264 (SB_DFFE): \sys1.uart1.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7262 (SB_DFFE): \sys1.uart1.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7265 (SB_DFFE): \sys1.uart1.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7284 (SB_DFFE): \sys1.uart1.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7517 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7518 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7519 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7520 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7521 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7522 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7523 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7524 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7525 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7526 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7527 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7528 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7529 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7530 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7531 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7532 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7533 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7534 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7535 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7536 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7537 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7538 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7539 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7540 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7541 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7542 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7543 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7544 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7545 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7546 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7547 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1720 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7647 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7648 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7649 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7662 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7663 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7664 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7665 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7666 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7667 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7668 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7669 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7670 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7671 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7672 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7675 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7676 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7674 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7677 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7696 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7697 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8193 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8194 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8195 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8196 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8197 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8198 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8199 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8200 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8201 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8202 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8203 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8204 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8205 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8206 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8207 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8208 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8209 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8210 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8211 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8212 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8213 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8214 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8215 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8216 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2358 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2392 (SB_DFFER): \sys1.irqen [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2393 (SB_DFFER): \sys1.irqen [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2394 (SB_DFFER): \sys1.irqen [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2395 (SB_DFFER): \sys1.irqen [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2396 (SB_DFFER): \sys1.irqen [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2397 (SB_DFFER): \sys1.irqen [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4454 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2849 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1730 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2811 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1971 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2675 (A=$techmap\sys1.$procmux$782_Y [1], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2359 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2676 (A=$techmap\sys1.$procmux$782_Y [2], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2360 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2677 (A=$techmap\sys1.$procmux$782_Y [3], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2361 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2678 (A=$techmap\sys1.$procmux$782_Y [4], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2679 (A=$techmap\sys1.$procmux$782_Y [5], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=$techmap\sys1.$procmux$782_Y [6], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=$techmap\sys1.$procmux$782_Y [7], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=$techmap\sys1.$procmux$782_Y [8], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=$techmap\sys1.$procmux$782_Y [9], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=$techmap\sys1.$procmux$782_Y [10], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2685 (A=$techmap\sys1.$procmux$782_Y [11], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2369 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2686 (A=$techmap\sys1.$procmux$782_Y [12], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2687 (A=$techmap\sys1.$procmux$782_Y [13], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2688 (A=$techmap\sys1.$procmux$782_Y [14], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2689 (A=$techmap\sys1.$procmux$782_Y [15], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2690 (A=$techmap\sys1.$procmux$782_Y [16], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2691 (A=$techmap\sys1.$procmux$782_Y [17], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2375 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2692 (A=$techmap\sys1.$procmux$782_Y [18], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2376 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2693 (A=$techmap\sys1.$procmux$782_Y [19], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2377 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2694 (A=$techmap\sys1.$procmux$782_Y [20], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2378 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2695 (A=$techmap\sys1.$procmux$782_Y [21], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2696 (A=$techmap\sys1.$procmux$782_Y [22], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2380 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2697 (A=$techmap\sys1.$procmux$782_Y [23], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2381 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2698 (A=$techmap\sys1.$procmux$782_Y [24], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2382 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2699 (A=$techmap\sys1.$procmux$782_Y [25], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2383 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2700 (A=$techmap\sys1.$procmux$782_Y [26], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2384 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2738 (A=$techmap\sys1.$3\TMF[0:0], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1972 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1973 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1974 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1976 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2701 (A=$techmap\sys1.$procmux$782_Y [27], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2385 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=$techmap\sys1.$procmux$782_Y [28], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2386 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2703 (A=$techmap\sys1.$procmux$782_Y [29], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2704 (A=$techmap\sys1.$procmux$782_Y [30], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2388 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2705 (A=$techmap\sys1.$procmux$782_Y [31], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2389 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2812 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2813 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2814 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2815 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2816 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2851 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2854 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6976 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [1], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6714 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6977 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [2], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6715 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6978 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [3], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6716 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6979 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [4], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6980 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [5], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6718 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6981 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [6], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6719 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6982 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [7], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6720 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6983 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [8], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6721 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6984 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [9], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6722 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6985 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [10], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6723 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6975 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [0], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6713 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6986 (A=$techmap\sys1.uart2.$ternary$uart.v:42$693_Y [11], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$6724 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6854 (A=\sys1.uart2.dv, B=1'0, S=\sys1.uart2.rd) into $auto$simplemap.cc:420:simplemap_dff$6785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7472 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [1], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7473 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [2], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7474 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [3], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7475 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [4], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7476 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [5], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7477 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [6], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7478 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [7], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7479 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [8], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7480 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [9], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7481 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [10], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7471 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [0], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7482 (A=$techmap\sys1.uart1.$ternary$uart.v:42$693_Y [11], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7353 (A=\sys1.uart1.dv, B=1'0, S=\sys1.uart1.rd) into $auto$simplemap.cc:420:simplemap_dff$7284 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7884 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7885 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7886 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7887 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7888 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7889 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7890 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7891 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7892 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7893 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7883 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7894 (A=$techmap\sys1.uart0.$ternary$uart.v:42$693_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$690_Y) into $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6527 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6526 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7765 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$7696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6529 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6531 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6532 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6533 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6528 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8102 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2674 (A=$techmap\sys1.$procmux$782_Y [0], B=1'0, S=$techmap\sys1.$and$system.v:266$432_Y) into $auto$simplemap.cc:420:simplemap_dff$2358 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6530 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1731 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 178 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 74 unused cells and 6778 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 3932 gates and 5389 wires to a netlist network with 1455 inputs and 633 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1191.
ABC: Participating nodes from both networks       =    2519.
ABC: Participating nodes from the first network   =    1197. (  49.61 % of nodes)
ABC: Participating nodes from the second network  =    1322. (  54.79 % of nodes)
ABC: Node pairs (any polarity)                    =    1196. (  49.56 % of names can be moved)
ABC: Node pairs (same polarity)                   =     865. (  35.85 % of names can be moved)
ABC: Total runtime =     0.20 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2412
ABC RESULTS:        internal signals:     3301
ABC RESULTS:           input signals:     1455
ABC RESULTS:          output signals:      633
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 70 unused cells and 2352 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2663
  1-LUT               65
  2-LUT              256
  3-LUT             1136
  4-LUT             1206
  with \SB_CARRY     231

Eliminating LUTs.
Number of LUTs:     2663
  1-LUT               65
  2-LUT              256
  3-LUT             1136
  4-LUT             1206
  with \SB_CARRY     231

Combining LUTs.
Number of LUTs:     2588
  1-LUT               40
  2-LUT              201
  3-LUT             1099
  4-LUT             1248
  with \SB_CARRY     231

Eliminated 0 LUTs.
Combined 75 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\PROYEC~2\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5225 unused wires.

2.47. Executing AUTONAME pass.
Renamed 46514 objects in module main (84 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               2527
   Number of wire bits:           5102
   Number of public wires:        2527
   Number of public wire bits:    5102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4022
     SB_CARRY                      249
     SB_DFF                        149
     SB_DFFE                       782
     SB_DFFER                       38
     SB_DFFESR                      98
     SB_DFFR                        33
     SB_DFFSR                       68
     SB_LUT4                      2588
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                16

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 10 unique messages, 25 total
End of script. Logfile hash: eb672d18f6
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 22x opt_expr (0 sec), 1% 22x opt_clean (0 sec), ...
