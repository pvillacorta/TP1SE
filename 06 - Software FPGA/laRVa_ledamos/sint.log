
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\SPI_master'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:335: Warning: Identifier `\posedge_TMF' is implicitly declared.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:72: Warning: Identifier `\JY4' is implicitly declared.
main.v:107: Warning: Identifier `\XOE' is implicitly declared.
main.v:110: Warning: Identifier `\XD' is implicitly declared.
main.v:110: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:115: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:120: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:125: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:130: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:135: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:140: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:145: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:151: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:156: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:161: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:166: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:171: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:176: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:181: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:186: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: SPI_master          
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.4. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART_CORE'.
Removed 1 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:547$584'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:473$524 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:337$448 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:260$437 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:220$420 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$SPI.v:58$362 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:47$358 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:38$352 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:29$349 in module SPI_master.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 67 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:91$590'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:472$559'.
  Set init value: \irqen = 8'00000000
Found init rule in `\SYSTEM.$proc$system.v:426$558'.
  Set init value: \spi_ss = 2'11
Found init rule in `\SYSTEM.$proc$system.v:425$557'.
  Set init value: \spi_ctrl = 14'00000000000000
Found init rule in `\SYSTEM.$proc$system.v:317$556'.
  Set init value: \TMF1 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:316$555'.
  Set init value: \TMF0 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:315$554'.
  Set init value: \TMF = 1'0
Found init rule in `\SYSTEM.$proc$system.v:314$553'.
  Set init value: \TMR = 180000
Found init rule in `\SYSTEM.$proc$system.v:313$552'.
  Set init value: \tcount = 0
Found init rule in `\SYSTEM.$proc$system.v:290$551'.
  Set init value: \GPOUT = 8'00000000
Found init rule in `\SPI_master.$proc$SPI.v:54$416'.
  Set init value: \sin = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:44$415'.
  Set init value: \bitcnt = 6'000000
Found init rule in `\SPI_master.$proc$SPI.v:36$414'.
  Set init value: \sck = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:26$413'.
  Set init value: \divcnt = 8'00000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$763'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$762'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$761'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$760'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$759'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$758'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$757'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$756'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$755'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$754'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:473$524'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:91$590'.
Creating decoders for process `\main.$proc$main.v:94$586'.
Creating decoders for process `\ram32.$proc$system.v:543$577'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:536$564'.
     1/12: $0$memwr$\ram_array$system.v:537$560_EN[31:0]$567
     2/12: $0$memwr$\ram_array$system.v:537$560_DATA[31:0]$566
     3/12: $0$memwr$\ram_array$system.v:537$560_ADDR[10:0]$565
     4/12: $0$memwr$\ram_array$system.v:538$561_EN[31:0]$570
     5/12: $0$memwr$\ram_array$system.v:538$561_DATA[31:0]$569
     6/12: $0$memwr$\ram_array$system.v:538$561_ADDR[10:0]$568
     7/12: $0$memwr$\ram_array$system.v:539$562_EN[31:0]$573
     8/12: $0$memwr$\ram_array$system.v:539$562_DATA[31:0]$572
     9/12: $0$memwr$\ram_array$system.v:539$562_ADDR[10:0]$571
    10/12: $0$memwr$\ram_array$system.v:540$563_EN[31:0]$576
    11/12: $0$memwr$\ram_array$system.v:540$563_DATA[31:0]$575
    12/12: $0$memwr$\ram_array$system.v:540$563_ADDR[10:0]$574
Creating decoders for process `\SYSTEM.$proc$system.v:472$559'.
Creating decoders for process `\SYSTEM.$proc$system.v:426$558'.
Creating decoders for process `\SYSTEM.$proc$system.v:425$557'.
Creating decoders for process `\SYSTEM.$proc$system.v:317$556'.
Creating decoders for process `\SYSTEM.$proc$system.v:316$555'.
Creating decoders for process `\SYSTEM.$proc$system.v:315$554'.
Creating decoders for process `\SYSTEM.$proc$system.v:314$553'.
Creating decoders for process `\SYSTEM.$proc$system.v:313$552'.
Creating decoders for process `\SYSTEM.$proc$system.v:290$551'.
Creating decoders for process `\SYSTEM.$proc$system.v:485$526'.
     1/3: $0$memwr$\irqvect$system.v:485$417_EN[29:0]$529
     2/3: $0$memwr$\irqvect$system.v:485$417_DATA[29:0]$528
     3/3: $0$memwr$\irqvect$system.v:485$417_ADDR[2:0]$527
Creating decoders for process `\SYSTEM.$proc$system.v:473$524'.
     1/1: $0\irqen[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:447$523'.
     1/2: $0\spi_ss[1:0]
     2/2: $0\spi_ctrl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:337$448'.
     1/5: $0\tcount[31:0]
     2/5: $0\TMF1[0:0]
     3/5: $0\TMF0[0:0]
     4/5: $0\TMF[0:0]
     5/5: $0\TMR[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:295$440'.
     1/1: $0\GPOUT[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:260$437'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:220$420'.
     1/1: $0\cdi[31:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:54$416'.
Creating decoders for process `\SPI_master.$proc$SPI.v:44$415'.
Creating decoders for process `\SPI_master.$proc$SPI.v:36$414'.
Creating decoders for process `\SPI_master.$proc$SPI.v:26$413'.
Creating decoders for process `\SPI_master.$proc$SPI.v:58$362'.
     1/25: $0\shreg[31:0] [31]
     2/25: $0\shreg[31:0] [30]
     3/25: $0\shreg[31:0] [29]
     4/25: $0\shreg[31:0] [28]
     5/25: $0\shreg[31:0] [27]
     6/25: $0\shreg[31:0] [26]
     7/25: $0\shreg[31:0] [25]
     8/25: $0\shreg[31:0] [24]
     9/25: $0\shreg[31:0] [23]
    10/25: $0\shreg[31:0] [22]
    11/25: $0\shreg[31:0] [21]
    12/25: $0\shreg[31:0] [20]
    13/25: $0\shreg[31:0] [19]
    14/25: $0\shreg[31:0] [18]
    15/25: $0\shreg[31:0] [17]
    16/25: $0\shreg[31:0] [16]
    17/25: $0\shreg[31:0] [15]
    18/25: $0\shreg[31:0] [14]
    19/25: $0\shreg[31:0] [13]
    20/25: $0\shreg[31:0] [12]
    21/25: $0\shreg[31:0] [11]
    22/25: $0\shreg[31:0] [10]
    23/25: $0\shreg[31:0] [9]
    24/25: $0\shreg[31:0] [8]
    25/25: $0\shreg[31:0] [7:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:55$361'.
Creating decoders for process `\SPI_master.$proc$SPI.v:47$358'.
     1/1: $0\bitcnt[5:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:38$352'.
     1/1: $0\sck[0:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:29$349'.
     1/1: $0\divcnt[7:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$763'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$762'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$761'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$760'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$759'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$758'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$757'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$756'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$755'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$754'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$740'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$734'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$721'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$719'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:260$437'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:220$420'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:94$586'.
  created $dff cell `$procdff$1041' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:543$577'.
  created $dff cell `$procdff$1042' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:537$560_ADDR' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1043' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:537$560_DATA' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1044' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:537$560_EN' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1045' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:538$561_ADDR' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1046' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:538$561_DATA' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1047' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:538$561_EN' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1048' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:539$562_ADDR' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1049' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:539$562_DATA' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1050' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:539$562_EN' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1051' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:540$563_ADDR' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1052' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:540$563_DATA' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1053' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:540$563_EN' using process `\ram32.$proc$system.v:536$564'.
  created $dff cell `$procdff$1054' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:485$417_ADDR' using process `\SYSTEM.$proc$system.v:485$526'.
  created $dff cell `$procdff$1055' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:485$417_DATA' using process `\SYSTEM.$proc$system.v:485$526'.
  created $dff cell `$procdff$1056' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:485$417_EN' using process `\SYSTEM.$proc$system.v:485$526'.
  created $dff cell `$procdff$1057' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:473$524'.
  created $adff cell `$procdff$1058' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\spi_ctrl' using process `\SYSTEM.$proc$system.v:447$523'.
  created $dff cell `$procdff$1059' with positive edge clock.
Creating register for signal `\SYSTEM.\spi_ss' using process `\SYSTEM.$proc$system.v:447$523'.
  created $dff cell `$procdff$1060' with positive edge clock.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:337$448'.
  created $dff cell `$procdff$1061' with positive edge clock.
Creating register for signal `\SYSTEM.\TMR' using process `\SYSTEM.$proc$system.v:337$448'.
  created $dff cell `$procdff$1062' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF' using process `\SYSTEM.$proc$system.v:337$448'.
  created $dff cell `$procdff$1063' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF0' using process `\SYSTEM.$proc$system.v:337$448'.
  created $dff cell `$procdff$1064' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF1' using process `\SYSTEM.$proc$system.v:337$448'.
  created $dff cell `$procdff$1065' with positive edge clock.
Creating register for signal `\SYSTEM.\GPOUT' using process `\SYSTEM.$proc$system.v:295$440'.
  created $dff cell `$procdff$1066' with positive edge clock.
Creating register for signal `\SPI_master.\shreg' using process `\SPI_master.$proc$SPI.v:58$362'.
  created $dff cell `$procdff$1067' with positive edge clock.
Creating register for signal `\SPI_master.\sin' using process `\SPI_master.$proc$SPI.v:55$361'.
  created $dff cell `$procdff$1068' with positive edge clock.
Creating register for signal `\SPI_master.\bitcnt' using process `\SPI_master.$proc$SPI.v:47$358'.
  created $dff cell `$procdff$1069' with positive edge clock.
Creating register for signal `\SPI_master.\sck' using process `\SPI_master.$proc$SPI.v:38$352'.
  created $dff cell `$procdff$1070' with positive edge clock.
Creating register for signal `\SPI_master.\divcnt' using process `\SPI_master.$proc$SPI.v:29$349'.
  created $dff cell `$procdff$1071' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1072' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1073' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1074' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1075' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1076' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1077' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
  created $dff cell `$procdff$1078' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$740'.
  created $dff cell `$procdff$1079' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$734'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$721'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$719'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1088' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1089' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1091' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1092' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$1094' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1097' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:91$590'.
Removing empty process `main.$proc$main.v:94$586'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:543$577'.
Removing empty process `ram32.$proc$system.v:543$577'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:536$564'.
Removing empty process `ram32.$proc$system.v:536$564'.
Removing empty process `SYSTEM.$proc$system.v:472$559'.
Removing empty process `SYSTEM.$proc$system.v:426$558'.
Removing empty process `SYSTEM.$proc$system.v:425$557'.
Removing empty process `SYSTEM.$proc$system.v:317$556'.
Removing empty process `SYSTEM.$proc$system.v:316$555'.
Removing empty process `SYSTEM.$proc$system.v:315$554'.
Removing empty process `SYSTEM.$proc$system.v:314$553'.
Removing empty process `SYSTEM.$proc$system.v:313$552'.
Removing empty process `SYSTEM.$proc$system.v:290$551'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:485$526'.
Removing empty process `SYSTEM.$proc$system.v:485$526'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:473$524'.
Removing empty process `SYSTEM.$proc$system.v:473$524'.
Found and cleaned up 2 empty switches in `\SYSTEM.$proc$system.v:447$523'.
Removing empty process `SYSTEM.$proc$system.v:447$523'.
Found and cleaned up 3 empty switches in `\SYSTEM.$proc$system.v:337$448'.
Removing empty process `SYSTEM.$proc$system.v:337$448'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:295$440'.
Removing empty process `SYSTEM.$proc$system.v:295$440'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:260$437'.
Removing empty process `SYSTEM.$proc$system.v:260$437'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:220$420'.
Removing empty process `SYSTEM.$proc$system.v:220$420'.
Removing empty process `SPI_master.$proc$SPI.v:54$416'.
Removing empty process `SPI_master.$proc$SPI.v:44$415'.
Removing empty process `SPI_master.$proc$SPI.v:36$414'.
Removing empty process `SPI_master.$proc$SPI.v:26$413'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:55$361'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:47$358'.
Removing empty process `SPI_master.$proc$SPI.v:47$358'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:38$352'.
Removing empty process `SPI_master.$proc$SPI.v:38$352'.
Found and cleaned up 1 empty switch in `\SPI_master.$proc$SPI.v:29$349'.
Removing empty process `SPI_master.$proc$SPI.v:29$349'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$763'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$762'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$761'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$760'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$759'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$758'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$757'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$756'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$755'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$754'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$746'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$740'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$734'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$727'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$721'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$719'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$719'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 36 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template SPI_master for cells of type SPI_master.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module SPI_master.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 34 unused cells and 537 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\TXD2 is used but has no driver.
Warning: Wire main.\TXD1 is used but has no driver.
Warning: Wire main.\FSS is used but has no driver.
Warning: Wire main.\sys1.uart2.rxd is used but has no driver.
Warning: Wire main.\sys1.uart1.rxd is used but has no driver.
found and reported 5 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 63 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$790:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:485$417_EN[29:0]$529 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$1035:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$766:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$772:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$778:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$784:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:540$563_EN[31:0]$576 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \sys1.uart2.shtx = 9'111111111 to constant driver in module main.
Promoting init spec \sys1.uart1.shtx = 9'111111111 to constant driver in module main.
Promoted 2 init specs to constant drivers.

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 63 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 21 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:551$579 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:94$587 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:94$587 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:94$589 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$1057 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$842_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$837_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$836_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$835_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$834_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$833_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$832_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$831_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$794 ($mux).
Removed cell main.$techmap\sys1.$procmux$792 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:507$539 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:349$449 ($add).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:252$429 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:250$425 ($eq).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$1097 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$1039 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$1037 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:110$750 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:110$750 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:92$744 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:92$742 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:92$742 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart.v:89$738 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart.v:63$731 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart.v:63$731 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$726 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$725 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:42$723 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:42$723 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:110$750 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:110$750 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:92$744 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:92$742 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:92$742 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart1.$eq$uart.v:89$738 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$add$uart.v:63$731 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$add$uart.v:63$731 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$726 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$725 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:42$723 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:42$723 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$750 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$750 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$744 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$742 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$742 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$738 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$731 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$731 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$726 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$725 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$723 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$723 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1054 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1051 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1048 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1045 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$788 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$786 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$782 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$780 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$776 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$774 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$770 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$768 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:94$587 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$1051 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$1048 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$1045 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:94$587_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_DATA[31:0]$566.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:537$560_EN[31:0]$567.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_DATA[31:0]$569.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:538$561_EN[31:0]$570.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_DATA[31:0]$572.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:539$562_EN[31:0]$573.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:537$560_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:538$561_EN.
Removed top 3 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:539$562_ADDR.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:539$562_EN.
Removed top 3 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:540$563_ADDR.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:49$360_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$731_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$723_Y.
Removed top 30 bits (of 32) from wire main.sys1.cpu.aluIn1.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 46 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:544$578 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$722_Y \sys1.uart1.wrtx \sys1.uart1.wrbaud \sys1.uart1.rd $techmap\sys1.uart1.$and$uart.v:42$722_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart.v:42$722_Y \sys1.spi.wr $techmap\sys1.spi.$or$SPI.v:30$350_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs \sys1.rd_timer \sys1.wr_timer \sys1.spi_wr_ctrl \sys1.spi_wr_ss $techmap\sys1.$eq$system.v:252$429_Y $techmap\sys1.$eq$system.v:256$435_Y $techmap\sys1.$and$system.v:297$441_Y $techmap\sys1.$and$system.v:475$525_Y $techmap\sys1.$and$system.v:485$531_Y $techmap\sys1.$procmux$829_CMP $techmap\sys1.$procmux$830_CMP $techmap\sys1.$procmux$831_CMP $techmap\sys1.$procmux$832_CMP $techmap\sys1.$procmux$833_CMP $techmap\sys1.$procmux$834_CMP $techmap\sys1.$procmux$835_CMP $techmap\sys1.$procmux$836_CMP $techmap\sys1.$procmux$841_CMP $techmap\sys1.$procmux$837_CMP $techmap\sys1.$procmux$838_CMP $techmap\sys1.$procmux$842_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:508$547 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:94$587 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:349$449 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$731 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$750 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$723 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$742 ($sub).
  creating $macc model for $techmap\sys1.uart1.$add$uart.v:63$731 ($add).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:110$750 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:42$723 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:92$742 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart.v:63$731 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:110$750 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:42$723 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:92$742 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:42$723.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:110$750.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart.v:63$731.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:92$742.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:42$723.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:110$750.
  creating $alu model for $macc $techmap\sys1.uart1.$add$uart.v:63$731.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$742.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$723.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$750.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$731.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:88$411.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:49$360.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:31$351.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:92$742.
  creating $alu model for $macc $techmap\sys1.$add$system.v:349$449.
  creating $alu model for $macc $sub$main.v:94$587.
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:85$409 ($gt): new $alu
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:85$409: $auto$alumacc.cc:485:replace_alu$1145
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:84$407: $auto$alumacc.cc:485:replace_alu$1150
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:83$405: $auto$alumacc.cc:485:replace_alu$1155
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:82$403: $auto$alumacc.cc:485:replace_alu$1160
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:81$401: $auto$alumacc.cc:485:replace_alu$1165
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:80$399: $auto$alumacc.cc:485:replace_alu$1170
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:79$397: $auto$alumacc.cc:485:replace_alu$1175
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:78$395: $auto$alumacc.cc:485:replace_alu$1180
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:77$393: $auto$alumacc.cc:485:replace_alu$1185
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:76$391: $auto$alumacc.cc:485:replace_alu$1190
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:75$389: $auto$alumacc.cc:485:replace_alu$1195
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:74$387: $auto$alumacc.cc:485:replace_alu$1200
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:73$385: $auto$alumacc.cc:485:replace_alu$1205
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:72$383: $auto$alumacc.cc:485:replace_alu$1210
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:71$381: $auto$alumacc.cc:485:replace_alu$1215
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:70$379: $auto$alumacc.cc:485:replace_alu$1220
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:69$377: $auto$alumacc.cc:485:replace_alu$1225
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:68$375: $auto$alumacc.cc:485:replace_alu$1230
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:67$373: $auto$alumacc.cc:485:replace_alu$1235
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:66$371: $auto$alumacc.cc:485:replace_alu$1240
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:65$369: $auto$alumacc.cc:485:replace_alu$1245
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:64$367: $auto$alumacc.cc:485:replace_alu$1250
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:63$365: $auto$alumacc.cc:485:replace_alu$1255
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:62$363: $auto$alumacc.cc:485:replace_alu$1260
  creating $alu cell for $sub$main.v:94$587: $auto$alumacc.cc:485:replace_alu$1265
  creating $alu cell for $techmap\sys1.$add$system.v:349$449: $auto$alumacc.cc:485:replace_alu$1268
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:92$742: $auto$alumacc.cc:485:replace_alu$1271
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$1274
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$1277
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$1280
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$1283
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:31$351: $auto$alumacc.cc:485:replace_alu$1286
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:49$360: $auto$alumacc.cc:485:replace_alu$1289
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:88$411: $auto$alumacc.cc:485:replace_alu$1292
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$731: $auto$alumacc.cc:485:replace_alu$1295
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$750: $auto$alumacc.cc:485:replace_alu$1298
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$723: $auto$alumacc.cc:485:replace_alu$1301
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$742: $auto$alumacc.cc:485:replace_alu$1304
  creating $alu cell for $techmap\sys1.uart1.$add$uart.v:63$731: $auto$alumacc.cc:485:replace_alu$1307
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:110$750: $auto$alumacc.cc:485:replace_alu$1310
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:42$723: $auto$alumacc.cc:485:replace_alu$1313
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:92$742: $auto$alumacc.cc:485:replace_alu$1316
  creating $alu cell for $techmap\sys1.uart2.$add$uart.v:63$731: $auto$alumacc.cc:485:replace_alu$1319
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:110$750: $auto$alumacc.cc:485:replace_alu$1322
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:42$723: $auto$alumacc.cc:485:replace_alu$1325
  created 45 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 28 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:485$550' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:537$580' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:538$581' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:539$582' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:540$583' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:508$547' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:544$578' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:537$580) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:538$581) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:539$582) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:540$583) has addr \sys1.cpu.addr [10:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:485$550 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:508$547 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:551$579 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:540$583 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:544$578 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=240 rports=1 wports=1 dbits=30 abits=3 words=8
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=248 dwaste=2 bwaste=3984 waste=3984 efficiency=2
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=504 dwaste=2 bwaste=4048 waste=4048 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1016 dwaste=2 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2040 dwaste=0 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$f93e392529d19d1a533b14f327cb659af897c411\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c17e4683bd194574ef7bc6efa660704103ba583b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d8c3e1154af9f256185da26a6fa44fc46ae0ff02\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$29817ab3399f40fcc64bc5feb18bdba9ecd47535\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3a52d2e38d3682949224ba24f05d8bcaf4208394\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e4fe12898377c3a5a6328aa8005556b2a156b277\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b193f9a8600dca7167e18891d7186981b0090c8b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$939dd271e6b4d5eeb04d8316f76316ea4c5d0784\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f8b3c1c8fd4307c3d0d027e09d9311023023feea\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43f41cf2e6026e5de4d750f691f62614cd841c05\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a45a42c7ec4b97e6b8cf18379c63804dc5e41b58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e466ed1f3e40805331d9f9ab1f2c582f676d791\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cf65bfad484cd60b4b9ff8b7b750b9cc0f5d51d0\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2652dfb00531fe8ad8b3544692822e2055035166\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cd0145e5d7af6ec938d7ebb9363da7c1f1d6c595\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bf1fbe0ee7ba5936e6ad74d9ca000a2b5f133a2a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$72a58c1a6bbf83800bdf55461ab6a7b8067416f4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3986fa2de5c1de88113ed9f18ff2ac123fdeac56\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$85c039c0c30864ff5cc51a514aa57eb82f3cfd7f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c752fe598bb735aa918fa31e1601b5a4438a57af\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a78ddff81909dcf21efdeee403af81a53e1f350b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84d5cde021e30e0167e77428e32366febef5ae68\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e9c63b6edb049ea4d44e01845c6e1135a1e009a7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a8585776b6d144ace6b944995738c5ff95068ab4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cc9046da25a765416877ff33bddc725a3ff9b43a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$323124fc0a193934e2f604f093350f4895399ee7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8777093fa24e3b12efe51945e644d73b08e9e82d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0597e4e00822ab36a55a6b6cf4bdc686bc4c5f81\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1c47367636431629f56d1b2f12c2e5a535d65dc6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64d175b95196cd4418d6d5dfbd4ceeec143b106c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a358555c9e5a42c956d1aab601aa10f35bc0e700\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$afad566358013dcdd84b2cde309ae2440d5c6fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 395 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 8 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:507$540:
      Old ports: A=3'111, B=3'110, Y=$techmap\sys1.$ternary$system.v:507$540_Y
      New ports: A=1'1, B=1'0, Y=$techmap\sys1.$ternary$system.v:507$540_Y [0]
      New connections: $techmap\sys1.$ternary$system.v:507$540_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:507$541:
      Old ports: A=$techmap\sys1.$ternary$system.v:507$540_Y, B=3'101, Y=$techmap\sys1.$ternary$system.v:507$541_Y
      New ports: A={ 1'1 $techmap\sys1.$ternary$system.v:507$540_Y [0] }, B=2'01, Y=$techmap\sys1.$ternary$system.v:507$541_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:507$541_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:507$542:
      Old ports: A=$techmap\sys1.$ternary$system.v:507$541_Y, B=3'100, Y=$techmap\sys1.$ternary$system.v:507$542_Y
      New ports: A=$techmap\sys1.$ternary$system.v:507$541_Y [1:0], B=2'00, Y=$techmap\sys1.$ternary$system.v:507$542_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:507$542_Y [2] = 1'1
  Optimizing cells in module \main.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 156 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 10 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=11 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:f73fd5ba4618feeb57a105b7870e98bc61f18d66$paramod$350e5b3c77f745285d3c3768fb71530b920a3cff\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 549 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$8143 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 600 unused cells and 1020 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1150.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1155.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1160.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1165.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1170.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1175.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1180.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1185.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1190.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1195.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1200.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1205.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1210.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1215.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1220.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1225.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1230.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1235.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1240.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1245.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1250.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1255.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1260.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1265.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1268.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1271.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1286.slice[0].carry: CO=\sys1.spi.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1289.slice[0].carry: CO=\sys1.spi.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1292.slice[0].carry: CO=\sys1.spi_ctrl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1292.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1292.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1295.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1298.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1301.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1304.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1307.slice[0].carry: CO=\sys1.uart1.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1310.slice[0].carry: CO=\sys1.uart1.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1313.slice[0].carry: CO=\sys1.uart1.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1316.slice[0].carry: CO=\sys1.uart1.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1319.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1322.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1325.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1455.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1502.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$1829.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 22 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$8144 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 3 unused cells and 2 unused wires.

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1155.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1165.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1175.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1185.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1195.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1205.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1215.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1225.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1235.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1245.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1255.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [1]

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 10 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 8 unused wires.

2.32.18. Rerunning OPT passes. (Removed registers in this run.)

2.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1165.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1185.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1205.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1225.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1245.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [2]

2.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 4 cells.

2.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 0 unused wires.

2.32.24. Rerunning OPT passes. (Removed registers in this run.)

2.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1185.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1225.slice[3].carry: CO=1'1

2.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 0 unused wires.

2.32.30. Rerunning OPT passes. (Removed registers in this run.)

2.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1225.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [4]

2.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 2 unused wires.

2.32.36. Rerunning OPT passes. (Removed registers in this run.)

2.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1145.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1145.BB [5]

2.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 3 unused wires.

2.32.42. Rerunning OPT passes. (Removed registers in this run.)

2.32.43. Running ICE40 specific optimizations.

2.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.48. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2258 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2259 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2260 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2261 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2262 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2263 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2264 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2265 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2266 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2267 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2268 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2269 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2270 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2271 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2272 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2273 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2274 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2275 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2276 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2277 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2278 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2279 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2280 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2281 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2282 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2283 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2284 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2285 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2286 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2287 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2288 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2289 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1588 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2320 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2321 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2322 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2323 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2324 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2325 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2326 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2327 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2328 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2329 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2330 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2331 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2332 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2333 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2334 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2335 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2336 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2337 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2338 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2339 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2340 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2341 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2342 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2343 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2344 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2345 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2346 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2347 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2348 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2349 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1899 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2350 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2351 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2352 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2353 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2354 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2355 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2356 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2357 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2358 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2359 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2360 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2361 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2362 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2363 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2364 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2365 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2366 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2367 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2368 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2369 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2370 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2371 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2372 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2373 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2374 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2375 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2376 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2377 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2378 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2379 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2380 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2381 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1608 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2382 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2383 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2384 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2385 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2386 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2387 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2388 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2389 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2390 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2391 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2392 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2393 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2394 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2395 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2396 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2397 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2398 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2399 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2400 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2401 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2402 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2403 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2404 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2405 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2406 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2407 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2408 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2409 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2410 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2411 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2412 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2413 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1648 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2414 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2415 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2416 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2417 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2418 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2419 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2420 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2421 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2422 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2423 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2424 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2425 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2426 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2427 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2428 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2429 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2430 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2431 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2432 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2433 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2434 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2435 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2436 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2437 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2438 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2439 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2440 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2441 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2442 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2443 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2444 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2445 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1668 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2447 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2448 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2449 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2450 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2451 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2452 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2453 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2454 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2455 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2456 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2457 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2458 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2459 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2460 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2461 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2462 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2463 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2464 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2465 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2466 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2467 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2468 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2469 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2470 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2471 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2472 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2473 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2474 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2475 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2476 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2477 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2478 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1728 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2480 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2481 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2482 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2483 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2484 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2485 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2486 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2487 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2488 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2489 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2490 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2491 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2492 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2493 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2494 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2495 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2496 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2497 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2498 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2499 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2500 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2501 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2502 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2503 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2504 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2505 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2506 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2507 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2508 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2509 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2510 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2511 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1748 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2512 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2513 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2514 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2515 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2516 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2517 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2518 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2519 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2520 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2521 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2522 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2523 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2524 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2525 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2526 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2527 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2528 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2529 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2530 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2531 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2532 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2533 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2534 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2535 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2536 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2537 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2538 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2539 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2540 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2541 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2542 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2543 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1708 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2544 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [0] -> \sys1.GPOUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2545 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [1] -> \sys1.GPOUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2546 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [2] -> \sys1.GPOUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2547 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [3] -> \sys1.GPOUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2548 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [4] -> \sys1.GPOUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2549 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [5] -> \sys1.GPOUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2550 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [6] -> \sys1.GPOUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2551 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [7] -> \sys1.GPOUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2552 to $_DFFE_PP_ for $techmap\sys1.$0\TMF1[0:0] -> \sys1.TMF1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2553 to $_DFFE_PP_ for $techmap\sys1.$0\TMF0[0:0] -> \sys1.TMF0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2554 to $_DFFE_PP_ for $techmap\sys1.$0\TMF[0:0] -> \sys1.TMF.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2555 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [0] -> \sys1.TMR [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2556 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [1] -> \sys1.TMR [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2557 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [2] -> \sys1.TMR [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2558 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [3] -> \sys1.TMR [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2559 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [4] -> \sys1.TMR [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2560 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [5] -> \sys1.TMR [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2561 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [6] -> \sys1.TMR [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2562 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [7] -> \sys1.TMR [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2563 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [8] -> \sys1.TMR [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2564 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [9] -> \sys1.TMR [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2565 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [10] -> \sys1.TMR [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2566 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [11] -> \sys1.TMR [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2567 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [12] -> \sys1.TMR [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2568 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [13] -> \sys1.TMR [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2569 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [14] -> \sys1.TMR [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2570 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [15] -> \sys1.TMR [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2571 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [16] -> \sys1.TMR [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2572 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [17] -> \sys1.TMR [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2573 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [18] -> \sys1.TMR [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2574 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [19] -> \sys1.TMR [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2575 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [20] -> \sys1.TMR [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2576 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [21] -> \sys1.TMR [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2577 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [22] -> \sys1.TMR [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2578 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [23] -> \sys1.TMR [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2579 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [24] -> \sys1.TMR [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2580 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [25] -> \sys1.TMR [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2581 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [26] -> \sys1.TMR [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2582 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [27] -> \sys1.TMR [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2583 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [28] -> \sys1.TMR [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2584 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [29] -> \sys1.TMR [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2585 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [30] -> \sys1.TMR [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2586 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [31] -> \sys1.TMR [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2619 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [0] -> \sys1.spi_ss [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2620 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [1] -> \sys1.spi_ss [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2621 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [0] -> \sys1.spi_ctrl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2622 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [1] -> \sys1.spi_ctrl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2623 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [2] -> \sys1.spi_ctrl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2624 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [3] -> \sys1.spi_ctrl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2625 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [4] -> \sys1.spi_ctrl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2626 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [5] -> \sys1.spi_ctrl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2627 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [6] -> \sys1.spi_ctrl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2628 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [7] -> \sys1.spi_ctrl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2629 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [8] -> \sys1.spi_ctrl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2630 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [9] -> \sys1.spi_ctrl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2631 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [10] -> \sys1.spi_ctrl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2632 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [11] -> \sys1.spi_ctrl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2633 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [12] -> \sys1.spi_ctrl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2634 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [13] -> \sys1.spi_ctrl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3106 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [0] -> \sys1.irqvect[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3107 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [1] -> \sys1.irqvect[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3108 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [2] -> \sys1.irqvect[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3109 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [3] -> \sys1.irqvect[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3110 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [4] -> \sys1.irqvect[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3111 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [5] -> \sys1.irqvect[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3112 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [6] -> \sys1.irqvect[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3113 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [7] -> \sys1.irqvect[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3114 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [8] -> \sys1.irqvect[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3115 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [9] -> \sys1.irqvect[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3116 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [10] -> \sys1.irqvect[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3117 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [11] -> \sys1.irqvect[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3118 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [12] -> \sys1.irqvect[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3119 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [13] -> \sys1.irqvect[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3120 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [14] -> \sys1.irqvect[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3121 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [15] -> \sys1.irqvect[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3122 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [16] -> \sys1.irqvect[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3123 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [17] -> \sys1.irqvect[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3124 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [18] -> \sys1.irqvect[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3125 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [19] -> \sys1.irqvect[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3126 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [20] -> \sys1.irqvect[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3127 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [21] -> \sys1.irqvect[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3128 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [22] -> \sys1.irqvect[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3129 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [23] -> \sys1.irqvect[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3130 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [24] -> \sys1.irqvect[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3131 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [25] -> \sys1.irqvect[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3132 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [26] -> \sys1.irqvect[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3133 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [27] -> \sys1.irqvect[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3134 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [28] -> \sys1.irqvect[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3135 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1947 [29] -> \sys1.irqvect[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3348 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3349 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3350 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3363 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3364 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3365 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3366 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3367 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3368 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3369 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3372 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3373 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3374 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3375 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3376 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3377 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3378 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3379 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1628 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3380 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3381 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3382 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3383 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3384 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3385 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3386 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3387 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3388 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3389 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3390 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3391 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3392 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3393 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3394 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3395 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3396 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3397 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3398 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3399 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3400 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3401 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3402 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3403 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3404 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3405 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3406 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3407 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3408 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3409 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3410 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3411 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1808 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3412 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3413 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3414 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3415 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3416 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3417 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3418 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3419 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3420 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3421 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3422 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3423 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3424 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3425 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3426 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3427 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3428 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3429 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3430 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3431 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3432 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3433 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3434 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3435 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3436 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3437 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3438 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3439 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3440 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3441 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3442 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3443 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1788 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3444 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3445 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3446 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3447 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3448 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3449 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3450 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3451 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3452 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3453 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3454 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3455 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3456 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3457 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3458 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3459 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3460 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3461 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3462 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3463 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3464 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3465 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3466 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3467 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3468 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3469 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3470 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3471 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3472 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3473 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3474 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3475 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1828 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3638 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3639 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3640 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3641 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3642 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3643 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3644 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3645 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3646 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3647 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3648 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3649 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3650 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3651 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3652 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3653 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3654 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3655 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3656 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3657 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3658 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3659 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3660 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3661 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3662 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3663 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3664 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3665 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3666 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3667 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3668 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3669 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1848 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3670 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3671 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3672 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3673 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3674 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3675 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3676 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3677 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3678 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3679 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3680 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3681 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3682 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3683 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3684 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3685 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3686 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3687 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3688 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3689 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3690 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3691 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3692 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3693 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3694 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3695 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3696 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3697 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3698 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3701 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1768 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6785 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6786 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6787 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6788 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6789 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6790 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6791 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6792 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6793 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6794 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6795 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6796 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6797 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6798 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6799 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6800 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6801 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6802 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6803 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6804 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6805 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6806 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6807 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6808 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6809 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6810 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6811 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6812 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6813 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6814 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1907 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6884 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6885 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6886 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6887 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6888 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6889 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6890 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6891 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6892 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6893 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6894 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6895 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6896 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6897 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6898 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6899 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6900 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6901 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6902 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6903 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6904 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6905 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6906 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6907 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6908 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6909 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6910 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6911 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6912 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6913 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1917 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7070 to $_DFFE_PP_ for $techmap\sys1.spi.$0\sck[0:0] -> \sys1.spi.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7071 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [0] -> \sys1.spi.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7072 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [1] -> \sys1.spi.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7073 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [2] -> \sys1.spi.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7074 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [3] -> \sys1.spi.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7075 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [4] -> \sys1.spi.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7076 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [5] -> \sys1.spi.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7078 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [0] -> \sys1.spi.shreg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7079 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [1] -> \sys1.spi.shreg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7080 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [2] -> \sys1.spi.shreg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7081 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [3] -> \sys1.spi.shreg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7082 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [4] -> \sys1.spi.shreg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7083 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [5] -> \sys1.spi.shreg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7084 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [6] -> \sys1.spi.shreg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7085 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [7] -> \sys1.spi.shreg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7086 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [8] -> \sys1.spi.shreg [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7087 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [9] -> \sys1.spi.shreg [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7088 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [10] -> \sys1.spi.shreg [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7089 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [11] -> \sys1.spi.shreg [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7090 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [12] -> \sys1.spi.shreg [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7091 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [13] -> \sys1.spi.shreg [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7092 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [14] -> \sys1.spi.shreg [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7093 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [15] -> \sys1.spi.shreg [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7094 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [16] -> \sys1.spi.shreg [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7095 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [17] -> \sys1.spi.shreg [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7096 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [18] -> \sys1.spi.shreg [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7097 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [19] -> \sys1.spi.shreg [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7098 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [20] -> \sys1.spi.shreg [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7099 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [21] -> \sys1.spi.shreg [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7100 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [22] -> \sys1.spi.shreg [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7101 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [23] -> \sys1.spi.shreg [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7102 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [24] -> \sys1.spi.shreg [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7103 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [25] -> \sys1.spi.shreg [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7104 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [26] -> \sys1.spi.shreg [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7105 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [27] -> \sys1.spi.shreg [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7106 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [28] -> \sys1.spi.shreg [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7107 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [29] -> \sys1.spi.shreg [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7108 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [30] -> \sys1.spi.shreg [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7109 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [31] -> \sys1.spi.shreg [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7585 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7586 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7587 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7588 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7589 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7590 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7591 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7592 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7593 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7594 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7595 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7596 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7597 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7598 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7599 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7600 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7601 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7602 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7603 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7604 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7605 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7606 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7607 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7608 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7609 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7610 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7611 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7612 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7613 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7614 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1923 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7621 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [0] -> \sys1.uart2.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7622 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [1] -> \sys1.uart2.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7623 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [2] -> \sys1.uart2.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7624 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [3] -> \sys1.uart2.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7625 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [4] -> \sys1.uart2.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7626 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [5] -> \sys1.uart2.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7627 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [6] -> \sys1.uart2.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7628 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [7] -> \sys1.uart2.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7629 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [8] -> \sys1.uart2.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7630 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [9] -> \sys1.uart2.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7631 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [10] -> \sys1.uart2.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7632 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [11] -> \sys1.uart2.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7650 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7666 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7667 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7668 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7669 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7670 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7671 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7672 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7673 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7674 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7675 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7676 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7677 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7678 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7679 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7680 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7681 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7682 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7683 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7684 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7685 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7686 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7687 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7688 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7689 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7917 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [0] -> \sys1.irqvect[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7918 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [1] -> \sys1.irqvect[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7919 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [2] -> \sys1.irqvect[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7920 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [3] -> \sys1.irqvect[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7921 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [4] -> \sys1.irqvect[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7922 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [5] -> \sys1.irqvect[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7923 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [6] -> \sys1.irqvect[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7924 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [7] -> \sys1.irqvect[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7925 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [8] -> \sys1.irqvect[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7926 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [9] -> \sys1.irqvect[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7927 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [10] -> \sys1.irqvect[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7928 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [11] -> \sys1.irqvect[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7929 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [12] -> \sys1.irqvect[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7930 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [13] -> \sys1.irqvect[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7931 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [14] -> \sys1.irqvect[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7932 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [15] -> \sys1.irqvect[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7933 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [16] -> \sys1.irqvect[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7934 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [17] -> \sys1.irqvect[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7935 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [18] -> \sys1.irqvect[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7936 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [19] -> \sys1.irqvect[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7937 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [20] -> \sys1.irqvect[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7938 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [21] -> \sys1.irqvect[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7939 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [22] -> \sys1.irqvect[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7940 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [23] -> \sys1.irqvect[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7941 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [24] -> \sys1.irqvect[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7942 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [25] -> \sys1.irqvect[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7943 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [26] -> \sys1.irqvect[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7944 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [27] -> \sys1.irqvect[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7945 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [28] -> \sys1.irqvect[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7946 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1933 [29] -> \sys1.irqvect[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8113 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [0] -> \sys1.uart1.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8114 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [1] -> \sys1.uart1.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8115 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [2] -> \sys1.uart1.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8116 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [3] -> \sys1.uart1.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8117 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [4] -> \sys1.uart1.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8118 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [5] -> \sys1.uart1.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8119 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [6] -> \sys1.uart1.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8120 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [7] -> \sys1.uart1.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8121 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [8] -> \sys1.uart1.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8122 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [9] -> \sys1.uart1.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8123 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [10] -> \sys1.uart1.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8124 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [11] -> \sys1.uart1.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8142 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thre[0:0] -> \sys1.uart1.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8158 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [0] -> \sys1.uart1.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8159 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [1] -> \sys1.uart1.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8160 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [2] -> \sys1.uart1.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8161 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [3] -> \sys1.uart1.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8162 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\stopb[0:0] -> \sys1.uart1.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8163 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [0] -> \sys1.uart1.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8164 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [1] -> \sys1.uart1.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8165 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [2] -> \sys1.uart1.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8166 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [3] -> \sys1.uart1.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8167 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [4] -> \sys1.uart1.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8168 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [5] -> \sys1.uart1.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8169 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [6] -> \sys1.uart1.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8170 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [7] -> \sys1.uart1.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8171 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [0] -> \sys1.uart1.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8172 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [1] -> \sys1.uart1.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8173 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [2] -> \sys1.uart1.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8174 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [3] -> \sys1.uart1.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8175 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [4] -> \sys1.uart1.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8176 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [5] -> \sys1.uart1.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8177 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [6] -> \sys1.uart1.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8178 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [7] -> \sys1.uart1.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8179 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [8] -> \sys1.uart1.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8180 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\ove[0:0] -> \sys1.uart1.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8181 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\dv[0:0] -> \sys1.uart1.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8373 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [0] -> \sys1.irqvect[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8374 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [1] -> \sys1.irqvect[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8375 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [2] -> \sys1.irqvect[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8376 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [3] -> \sys1.irqvect[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8377 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [4] -> \sys1.irqvect[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8378 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [5] -> \sys1.irqvect[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8379 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [6] -> \sys1.irqvect[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8380 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [7] -> \sys1.irqvect[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8381 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [8] -> \sys1.irqvect[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8382 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [9] -> \sys1.irqvect[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8383 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [10] -> \sys1.irqvect[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8384 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [11] -> \sys1.irqvect[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8385 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [12] -> \sys1.irqvect[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8386 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [13] -> \sys1.irqvect[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8387 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [14] -> \sys1.irqvect[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8388 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [15] -> \sys1.irqvect[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8389 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [16] -> \sys1.irqvect[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8390 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [17] -> \sys1.irqvect[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8391 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [18] -> \sys1.irqvect[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8392 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [19] -> \sys1.irqvect[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8393 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [20] -> \sys1.irqvect[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8394 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [21] -> \sys1.irqvect[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8395 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [22] -> \sys1.irqvect[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8396 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [23] -> \sys1.irqvect[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8397 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [24] -> \sys1.irqvect[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8398 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [25] -> \sys1.irqvect[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8399 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [26] -> \sys1.irqvect[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8400 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [27] -> \sys1.irqvect[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8401 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [28] -> \sys1.irqvect[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8402 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1939 [29] -> \sys1.irqvect[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8409 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8410 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8411 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8412 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8413 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8414 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8415 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8416 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8417 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8418 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8419 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8420 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8421 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8422 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8423 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8424 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8425 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8426 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8427 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8428 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8429 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8430 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8431 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8432 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8433 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8434 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8435 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8436 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8437 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8438 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8439 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8440 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1688 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8543 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8544 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8545 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8546 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8547 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8548 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8549 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8550 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8551 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8552 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8553 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8554 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8581 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8582 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8583 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8584 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8585 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8586 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8587 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8588 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8589 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8605 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8606 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8607 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8608 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8609 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8610 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8611 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8612 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8613 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8614 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8615 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8616 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8617 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8618 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8619 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8620 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8621 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8622 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8623 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8624 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8625 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8626 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8627 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8628 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8888 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8889 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8890 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8891 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8892 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8893 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8894 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8895 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8896 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8897 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8898 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8899 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8900 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8901 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8902 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8903 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8904 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8905 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8906 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8907 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8908 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8909 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8910 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8911 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8912 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8913 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8914 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8915 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8916 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8917 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8918 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8919 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1568 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8969 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [0] -> \sys1.irqvect[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8970 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [1] -> \sys1.irqvect[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8971 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [2] -> \sys1.irqvect[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8972 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [3] -> \sys1.irqvect[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8973 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [4] -> \sys1.irqvect[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8974 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [5] -> \sys1.irqvect[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8975 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [6] -> \sys1.irqvect[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8976 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [7] -> \sys1.irqvect[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8977 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [8] -> \sys1.irqvect[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8978 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [9] -> \sys1.irqvect[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8979 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [10] -> \sys1.irqvect[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8980 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [11] -> \sys1.irqvect[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8981 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [12] -> \sys1.irqvect[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8982 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [13] -> \sys1.irqvect[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8983 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [14] -> \sys1.irqvect[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8984 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [15] -> \sys1.irqvect[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8985 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [16] -> \sys1.irqvect[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8986 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [17] -> \sys1.irqvect[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8987 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [18] -> \sys1.irqvect[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8988 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [19] -> \sys1.irqvect[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8989 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [20] -> \sys1.irqvect[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8990 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [21] -> \sys1.irqvect[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8991 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [22] -> \sys1.irqvect[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8992 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [23] -> \sys1.irqvect[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8993 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [24] -> \sys1.irqvect[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8994 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [25] -> \sys1.irqvect[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8995 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [26] -> \sys1.irqvect[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8996 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [27] -> \sys1.irqvect[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8997 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [28] -> \sys1.irqvect[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8998 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1953 [29] -> \sys1.irqvect[7] [29].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2635 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2636 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2637 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [2] -> \sys1.irqen [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2638 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [3] -> \sys1.irqen [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2639 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [4] -> \sys1.irqen [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2640 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [5] -> \sys1.irqen [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2641 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [6] -> \sys1.irqen [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2642 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [7] -> \sys1.irqen [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4514 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4515 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4516 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4517 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4518 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4519 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4520 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4521 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4522 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4523 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4524 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4525 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4526 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4527 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4528 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4529 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4530 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4531 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4532 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4533 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4534 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4535 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4536 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4537 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4538 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4539 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4540 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4541 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4542 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4543 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$1295.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1268.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1322.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1304.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1289.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1292.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1319.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1325.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1298.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1301.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1307.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1310.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1313.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1316.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1265.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1271.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1286.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1455.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1502.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$1829.$auto$alumacc.cc:485:replace_alu$2042.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7689 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4575 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3349 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFFE): \sys1.TMR [5] = 1
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2639 (SB_DFFER): \sys1.irqen [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2640 (SB_DFFER): \sys1.irqen [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2641 (SB_DFFER): \sys1.irqen [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2642 (SB_DFFER): \sys1.irqen [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2264 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2265 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2266 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2267 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2268 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2269 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2270 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2271 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2272 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2273 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2274 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2275 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2276 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2277 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2278 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2279 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2280 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2281 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2282 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2283 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2284 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2285 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2286 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2287 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2288 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2289 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2258 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2351 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2352 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2353 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2354 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2355 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2356 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2357 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2358 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2359 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2360 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2361 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2369 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2375 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2376 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2377 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2378 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2379 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2380 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2381 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2383 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2350 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2384 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2385 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2386 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2387 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2388 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2389 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2390 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2391 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2392 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2393 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2394 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2395 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2396 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2397 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2398 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2399 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2400 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2401 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2402 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2403 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2404 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2405 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2406 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2407 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2408 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2409 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2410 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2411 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2412 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2413 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2415 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2382 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2416 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2417 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2418 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2419 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2420 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2421 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2422 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2423 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2424 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2425 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2426 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2427 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2428 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2429 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2430 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2431 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2432 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2433 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2434 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2435 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2436 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2437 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2438 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2439 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2440 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2441 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2442 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2443 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2444 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2445 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2448 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2414 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2449 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2450 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2451 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2452 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2453 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2454 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2455 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2456 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2457 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2458 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2459 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2460 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2461 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2462 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2463 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2464 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2465 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2466 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2471 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2472 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2473 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2474 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2475 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2476 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2477 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2478 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2447 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2480 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFFE): \sys1.GPOUT [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFFE): \sys1.GPOUT [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFFE): \sys1.GPOUT [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFFE): \sys1.GPOUT [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFFE): \sys1.GPOUT [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFFE): \sys1.GPOUT [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFFE): \sys1.GPOUT [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFFE): \sys1.TMR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFFE): \sys1.GPOUT [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFFE): \sys1.TMF1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFFE): \sys1.TMF0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFFE): \sys1.TMF = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFFE): \sys1.TMR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFFE): \sys1.TMR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFFE): \sys1.TMR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFFE): \sys1.TMR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFFE): \sys1.TMR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFFE): \sys1.TMR [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFFE): \sys1.TMR [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFFE): \sys1.TMR [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFFE): \sys1.TMR [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFFE): \sys1.TMR [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFFE): \sys1.TMR [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFFE): \sys1.TMR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFFE): \sys1.TMR [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFFE): \sys1.TMR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFFE): \sys1.TMR [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFFE): \sys1.TMR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFFE): \sys1.TMR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFFE): \sys1.TMR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFFE): \sys1.TMR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFFE): \sys1.TMR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFFE): \sys1.TMR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFFE): \sys1.TMR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFFE): \sys1.TMR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFFE): \sys1.TMR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFFE): \sys1.TMR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFFE): \sys1.TMR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFFE): \sys1.TMR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFFE): \sys1.TMR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFFE): \sys1.TMR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2616 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2617 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFFE): \sys1.spi_ss [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFFE): \sys1.spi_ctrl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE): \sys1.spi_ss [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFFE): \sys1.spi_ctrl [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFFE): \sys1.spi_ctrl [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFFE): \sys1.spi_ctrl [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFFE): \sys1.spi_ctrl [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFFE): \sys1.spi_ctrl [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFFE): \sys1.spi_ctrl [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFFE): \sys1.spi_ctrl [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFFE): \sys1.spi_ctrl [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2631 (SB_DFFE): \sys1.spi_ctrl [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2632 (SB_DFFE): \sys1.spi_ctrl [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2633 (SB_DFFE): \sys1.spi_ctrl [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2634 (SB_DFFE): \sys1.spi_ctrl [13] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2636 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2635 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3350 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3351 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3352 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3353 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3354 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3355 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3356 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3357 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3358 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3359 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3360 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3639 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3640 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3641 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3642 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3643 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3644 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3645 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3646 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3647 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3648 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3649 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3651 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3652 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3653 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3654 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3655 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3656 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3657 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3658 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3659 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3348 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3660 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3661 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3662 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3663 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3664 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3665 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3666 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3667 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3668 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3669 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3671 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3672 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3673 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3674 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3675 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3397 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3398 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3399 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3400 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3401 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3676 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3677 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3404 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3678 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3679 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3680 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3681 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3682 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3410 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3683 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3684 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3380 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3414 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3685 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3686 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3687 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3688 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3689 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3690 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3691 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3692 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3693 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3694 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3695 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3696 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3697 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3698 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3699 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3700 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3431 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3432 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3433 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3434 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3435 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3436 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3437 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3438 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3439 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3440 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3441 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3442 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3443 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3445 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3412 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3446 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3447 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3448 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3449 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3450 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3451 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3452 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3453 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3454 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3455 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3456 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3457 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3458 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3459 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3460 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3461 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3462 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3463 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3464 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3465 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3466 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3467 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3468 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3469 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3470 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3471 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3472 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3473 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3474 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3475 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFFE): \sys1.TMR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3444 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3361 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3362 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3363 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3364 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3365 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3366 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3367 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3368 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3369 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3370 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3650 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3371 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3372 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3373 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3374 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3375 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3376 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3377 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3378 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3379 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3381 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3382 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3383 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3384 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3385 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3386 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3387 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3388 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3389 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3390 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3391 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3638 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3392 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3393 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3394 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3395 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3396 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3402 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3403 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3405 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3406 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3407 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3408 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3409 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3411 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3413 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3415 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3416 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3417 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3418 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3419 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3420 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3421 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3422 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3423 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3424 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3425 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3426 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3427 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3428 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3429 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3430 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4451 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7063 (SB_DFF): \sys1.spi.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7064 (SB_DFF): \sys1.spi.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7065 (SB_DFF): \sys1.spi.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7066 (SB_DFF): \sys1.spi.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7067 (SB_DFF): \sys1.spi.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7068 (SB_DFF): \sys1.spi.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7062 (SB_DFF): \sys1.spi.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7070 (SB_DFFE): \sys1.spi.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7069 (SB_DFF): \sys1.spi.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7072 (SB_DFFE): \sys1.spi.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7073 (SB_DFFE): \sys1.spi.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7074 (SB_DFFE): \sys1.spi.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7075 (SB_DFFE): \sys1.spi.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7071 (SB_DFFE): \sys1.spi.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7077 (SB_DFF): \sys1.spi.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7076 (SB_DFFE): \sys1.spi.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFFE): \sys1.uart2.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFFE): \sys1.uart2.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFFE): \sys1.uart2.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFFE): \sys1.uart2.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFFE): \sys1.uart2.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFFE): \sys1.uart2.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFFE): \sys1.uart2.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFFE): \sys1.uart2.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFFE): \sys1.uart2.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFFE): \sys1.uart2.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFFE): \sys1.uart2.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFFE): \sys1.uart2.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7654 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7655 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7656 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7657 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7662 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7663 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7653 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7664 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7667 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7668 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7666 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7669 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7688 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8114 (SB_DFFE): \sys1.uart1.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8115 (SB_DFFE): \sys1.uart1.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8116 (SB_DFFE): \sys1.uart1.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8117 (SB_DFFE): \sys1.uart1.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8118 (SB_DFFE): \sys1.uart1.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8119 (SB_DFFE): \sys1.uart1.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8120 (SB_DFFE): \sys1.uart1.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8121 (SB_DFFE): \sys1.uart1.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8122 (SB_DFFE): \sys1.uart1.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8123 (SB_DFFE): \sys1.uart1.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8113 (SB_DFFE): \sys1.uart1.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8124 (SB_DFFE): \sys1.uart1.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8126 (SB_DFF): \sys1.uart1.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8127 (SB_DFF): \sys1.uart1.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8128 (SB_DFF): \sys1.uart1.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8129 (SB_DFF): \sys1.uart1.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8130 (SB_DFF): \sys1.uart1.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8131 (SB_DFF): \sys1.uart1.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8132 (SB_DFF): \sys1.uart1.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8133 (SB_DFF): \sys1.uart1.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8134 (SB_DFF): \sys1.uart1.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8135 (SB_DFF): \sys1.uart1.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8125 (SB_DFF): \sys1.uart1.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8137 (SB_DFF): \sys1.uart1.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8136 (SB_DFF): \sys1.uart1.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8142 (SB_DFFE): \sys1.uart1.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8146 (SB_DFF): \sys1.uart1.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8147 (SB_DFF): \sys1.uart1.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8148 (SB_DFF): \sys1.uart1.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8149 (SB_DFF): \sys1.uart1.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8150 (SB_DFF): \sys1.uart1.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8151 (SB_DFF): \sys1.uart1.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8152 (SB_DFF): \sys1.uart1.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8153 (SB_DFF): \sys1.uart1.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8154 (SB_DFF): \sys1.uart1.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8155 (SB_DFF): \sys1.uart1.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8145 (SB_DFF): \sys1.uart1.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8156 (SB_DFF): \sys1.uart1.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8159 (SB_DFFE): \sys1.uart1.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8160 (SB_DFFE): \sys1.uart1.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8158 (SB_DFFE): \sys1.uart1.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8161 (SB_DFFE): \sys1.uart1.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8180 (SB_DFFE): \sys1.uart1.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8181 (SB_DFFE): \sys1.uart1.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8428 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8429 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8432 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8433 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8434 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8435 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8436 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8437 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8438 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8439 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8440 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8544 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8545 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8546 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8547 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8548 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8549 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8550 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8551 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8552 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8553 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8543 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8554 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8556 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8557 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8558 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8559 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8560 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8561 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8562 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8563 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8564 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8565 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8555 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8567 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8566 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8573 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8574 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8575 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8576 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8577 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8578 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8579 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8572 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8580 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8589 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8590 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8591 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8593 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8594 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8595 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8596 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8597 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8598 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8599 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8600 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8601 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8602 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8592 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8603 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8606 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8607 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8605 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8608 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8627 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8628 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8889 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8890 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8891 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8892 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8893 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8894 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8895 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8896 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8897 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8898 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8899 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8900 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8901 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8902 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8903 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8904 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8905 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8906 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8907 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8908 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8909 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8910 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8911 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8912 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8913 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8914 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8915 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8916 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8917 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8918 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8888 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8919 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE): \sys1.spi_ctrl [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2637 (SB_DFFER): \sys1.irqen [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2638 (SB_DFFER): \sys1.irqen [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2259 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2260 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2261 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2262 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2263 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3670 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4574 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2951 (A=$techmap\sys1.$procmux$815_Y, B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2957 (A=$techmap\sys1.$procmux$802_Y [1], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2958 (A=$techmap\sys1.$procmux$802_Y [2], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2959 (A=$techmap\sys1.$procmux$802_Y [3], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2960 (A=$techmap\sys1.$procmux$802_Y [4], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2961 (A=$techmap\sys1.$procmux$802_Y [5], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2962 (A=$techmap\sys1.$procmux$802_Y [6], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2963 (A=$techmap\sys1.$procmux$802_Y [7], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2964 (A=$techmap\sys1.$procmux$802_Y [8], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2965 (A=$techmap\sys1.$procmux$802_Y [9], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2966 (A=$techmap\sys1.$procmux$802_Y [10], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2967 (A=$techmap\sys1.$procmux$802_Y [11], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2968 (A=$techmap\sys1.$procmux$802_Y [12], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2969 (A=$techmap\sys1.$procmux$802_Y [13], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2970 (A=$techmap\sys1.$procmux$802_Y [14], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2971 (A=$techmap\sys1.$procmux$802_Y [15], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2972 (A=$techmap\sys1.$procmux$802_Y [16], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2973 (A=$techmap\sys1.$procmux$802_Y [17], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2974 (A=$techmap\sys1.$procmux$802_Y [18], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2975 (A=$techmap\sys1.$procmux$802_Y [19], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2976 (A=$techmap\sys1.$procmux$802_Y [20], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2977 (A=$techmap\sys1.$procmux$802_Y [21], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2978 (A=$techmap\sys1.$procmux$802_Y [22], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2979 (A=$techmap\sys1.$procmux$802_Y [23], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2980 (A=$techmap\sys1.$procmux$802_Y [24], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2981 (A=$techmap\sys1.$procmux$802_Y [25], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2982 (A=$techmap\sys1.$procmux$802_Y [26], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2983 (A=$techmap\sys1.$procmux$802_Y [27], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2984 (A=$techmap\sys1.$procmux$802_Y [28], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2985 (A=$techmap\sys1.$procmux$802_Y [29], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2986 (A=$techmap\sys1.$procmux$802_Y [30], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2987 (A=$techmap\sys1.$procmux$802_Y [31], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2956 (A=$techmap\sys1.$procmux$802_Y [0], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8969 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6786 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6787 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6788 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6789 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6790 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6885 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6886 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6887 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6888 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6889 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6884 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7118 (A=$techmap\sys1.spi.$not$SPI.v:38$354_Y, B=1'0, S=\sys1.spi.wr) into $auto$simplemap.cc:420:simplemap_dff$7070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7844 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [1], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7845 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [2], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7846 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [3], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7847 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [4], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7848 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [5], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7849 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [6], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7850 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [7], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7851 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [8], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7852 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [9], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7853 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [10], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7843 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [0], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7854 (A=$techmap\sys1.uart2.$ternary$uart.v:42$725_Y [11], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7722 (A=\sys1.uart2.dv, B=1'0, S=\sys1.uart2.rd) into $auto$simplemap.cc:420:simplemap_dff$7688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7918 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7919 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7920 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7921 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7922 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8333 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [1], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8126 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8334 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [2], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8127 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8335 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [3], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8128 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8336 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [4], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8129 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8337 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [5], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8130 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8338 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [6], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8131 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8339 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [7], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8132 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8340 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [8], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8133 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8341 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [9], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8134 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8342 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [10], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8135 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8332 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [0], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8125 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8343 (A=$techmap\sys1.uart1.$ternary$uart.v:42$725_Y [11], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8136 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8214 (A=\sys1.uart1.dv, B=1'0, S=\sys1.uart1.rd) into $auto$simplemap.cc:420:simplemap_dff$8180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8374 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8375 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8377 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8378 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8373 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8544 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8545 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8546 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8547 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8548 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8549 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8550 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8543 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8815 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8816 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8817 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8818 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8819 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8820 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8821 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8822 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8823 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8824 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8814 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8825 (A=$techmap\sys1.uart0.$ternary$uart.v:42$725_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$722_Y) into $auto$simplemap.cc:420:simplemap_dff$8566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6614 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8582 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6615 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8583 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8584 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8585 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8586 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8581 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8696 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$8627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8970 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6617 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8971 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6618 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8972 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6619 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8973 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6620 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8974 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6613 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 215 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 75 unused cells and 7107 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 4122 gates and 5661 wires to a netlist network with 1537 inputs and 678 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1215.
ABC: Participating nodes from both networks       =    2581.
ABC: Participating nodes from the first network   =    1225. (  48.23 % of nodes)
ABC: Participating nodes from the second network  =    1356. (  53.39 % of nodes)
ABC: Node pairs (any polarity)                    =    1225. (  48.23 % of names can be moved)
ABC: Node pairs (same polarity)                   =     881. (  34.69 % of names can be moved)
ABC: Total runtime =     0.21 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2539
ABC RESULTS:        internal signals:     3446
ABC RESULTS:           input signals:     1537
ABC RESULTS:          output signals:      678
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 140 unused cells and 2553 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2807
  1-LUT               86
  2-LUT              246
  3-LUT             1228
  4-LUT             1247
  with \SB_CARRY     244

Eliminating LUTs.
Number of LUTs:     2807
  1-LUT               86
  2-LUT              246
  3-LUT             1228
  4-LUT             1247
  with \SB_CARRY     244

Combining LUTs.
Number of LUTs:     2730
  1-LUT               55
  2-LUT              197
  3-LUT             1191
  4-LUT             1287
  with \SB_CARRY     244

Eliminated 0 LUTs.
Combined 77 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5511 unused wires.

2.47. Executing AUTONAME pass.
Renamed 56569 objects in module main (84 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               2767
   Number of wire bits:           5662
   Number of public wires:        2767
   Number of public wire bits:    5662
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4339
     SB_CARRY                      358
     SB_DFF                        136
     SB_DFFE                       851
     SB_DFFER                       38
     SB_DFFESR                     108
     SB_DFFR                        33
     SB_DFFSR                       68
     SB_LUT4                      2730
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                16

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 12 unique messages, 27 total
End of script. Logfile hash: 1b8ec95367
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 28x opt_expr (0 sec), 1% 27x opt_clean (0 sec), ...
