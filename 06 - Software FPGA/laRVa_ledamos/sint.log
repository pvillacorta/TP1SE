
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:282: Warning: Identifier `\posedge_TMF' is implicitly declared.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:49: Warning: Identifier `\JY4' is implicitly declared.
main.v:80: Warning: Identifier `\XOE' is implicitly declared.
main.v:83: Warning: Identifier `\XD' is implicitly declared.
main.v:83: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:88: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:93: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:98: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:103: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:108: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:113: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:118: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:124: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:129: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:134: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:139: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:144: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:149: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:154: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:159: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.4. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART_CORE'.
Removed 1 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:459$495'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:385$438 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:284$375 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:235$368 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:195$351 in module SYSTEM.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 59 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:64$501'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:384$470'.
  Set init value: \irqen = 8'00000000
Found init rule in `\SYSTEM.$proc$system.v:264$469'.
  Set init value: \TMF1 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:263$468'.
  Set init value: \TMF0 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:262$467'.
  Set init value: \TMF = 1'0
Found init rule in `\SYSTEM.$proc$system.v:261$466'.
  Set init value: \TMR = 180000
Found init rule in `\SYSTEM.$proc$system.v:260$465'.
  Set init value: \tcount = 0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$674'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$673'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$672'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$671'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$670'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$669'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$668'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$667'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$666'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$665'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:385$438'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:64$501'.
Creating decoders for process `\main.$proc$main.v:67$497'.
Creating decoders for process `\ram32.$proc$system.v:455$488'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:448$475'.
     1/12: $0$memwr$\ram_array$system.v:449$471_EN[31:0]$478
     2/12: $0$memwr$\ram_array$system.v:449$471_DATA[31:0]$477
     3/12: $0$memwr$\ram_array$system.v:449$471_ADDR[10:0]$476
     4/12: $0$memwr$\ram_array$system.v:450$472_EN[31:0]$481
     5/12: $0$memwr$\ram_array$system.v:450$472_DATA[31:0]$480
     6/12: $0$memwr$\ram_array$system.v:450$472_ADDR[10:0]$479
     7/12: $0$memwr$\ram_array$system.v:451$473_EN[31:0]$484
     8/12: $0$memwr$\ram_array$system.v:451$473_DATA[31:0]$483
     9/12: $0$memwr$\ram_array$system.v:451$473_ADDR[10:0]$482
    10/12: $0$memwr$\ram_array$system.v:452$474_EN[31:0]$487
    11/12: $0$memwr$\ram_array$system.v:452$474_DATA[31:0]$486
    12/12: $0$memwr$\ram_array$system.v:452$474_ADDR[10:0]$485
Creating decoders for process `\SYSTEM.$proc$system.v:384$470'.
Creating decoders for process `\SYSTEM.$proc$system.v:264$469'.
Creating decoders for process `\SYSTEM.$proc$system.v:263$468'.
Creating decoders for process `\SYSTEM.$proc$system.v:262$467'.
Creating decoders for process `\SYSTEM.$proc$system.v:261$466'.
Creating decoders for process `\SYSTEM.$proc$system.v:260$465'.
Creating decoders for process `\SYSTEM.$proc$system.v:397$440'.
     1/3: $0$memwr$\irqvect$system.v:397$348_EN[29:0]$443
     2/3: $0$memwr$\irqvect$system.v:397$348_DATA[29:0]$442
     3/3: $0$memwr$\irqvect$system.v:397$348_ADDR[2:0]$441
Creating decoders for process `\SYSTEM.$proc$system.v:385$438'.
     1/1: $0\irqen[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:284$375'.
     1/5: $0\tcount[31:0]
     2/5: $0\TMF1[0:0]
     3/5: $0\TMF0[0:0]
     4/5: $0\TMF[0:0]
     5/5: $0\TMR[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:235$368'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:195$351'.
     1/1: $0\cdi[31:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$674'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$673'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$672'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$671'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$670'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$669'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$668'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$667'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$666'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$665'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$651'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$645'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$632'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$630'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:235$368'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:195$351'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:67$497'.
  created $dff cell `$procdff$804' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:455$488'.
  created $dff cell `$procdff$805' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:449$471_ADDR' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$806' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:449$471_DATA' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$807' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:449$471_EN' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$808' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:450$472_ADDR' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$809' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:450$472_DATA' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$810' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:450$472_EN' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$811' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:451$473_ADDR' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$812' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:451$473_DATA' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$813' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:451$473_EN' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$814' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:452$474_ADDR' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$815' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:452$474_DATA' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$816' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:452$474_EN' using process `\ram32.$proc$system.v:448$475'.
  created $dff cell `$procdff$817' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:397$348_ADDR' using process `\SYSTEM.$proc$system.v:397$440'.
  created $dff cell `$procdff$818' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:397$348_DATA' using process `\SYSTEM.$proc$system.v:397$440'.
  created $dff cell `$procdff$819' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:397$348_EN' using process `\SYSTEM.$proc$system.v:397$440'.
  created $dff cell `$procdff$820' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:385$438'.
  created $adff cell `$procdff$821' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:284$375'.
  created $dff cell `$procdff$822' with positive edge clock.
Creating register for signal `\SYSTEM.\TMR' using process `\SYSTEM.$proc$system.v:284$375'.
  created $dff cell `$procdff$823' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF' using process `\SYSTEM.$proc$system.v:284$375'.
  created $dff cell `$procdff$824' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF0' using process `\SYSTEM.$proc$system.v:284$375'.
  created $dff cell `$procdff$825' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF1' using process `\SYSTEM.$proc$system.v:284$375'.
  created $dff cell `$procdff$826' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$827' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$828' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$829' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$830' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$831' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
  created $dff cell `$procdff$833' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$651'.
  created $dff cell `$procdff$834' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$645'.
  created $dff cell `$procdff$835' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
  created $dff cell `$procdff$836' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
  created $dff cell `$procdff$837' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
  created $dff cell `$procdff$838' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
  created $dff cell `$procdff$839' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
  created $dff cell `$procdff$840' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$632'.
  created $dff cell `$procdff$841' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$630'.
  created $dff cell `$procdff$842' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$843' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$844' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$845' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$846' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$847' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$848' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$849' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$850' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$851' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$852' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:64$501'.
Removing empty process `main.$proc$main.v:67$497'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:455$488'.
Removing empty process `ram32.$proc$system.v:455$488'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:448$475'.
Removing empty process `ram32.$proc$system.v:448$475'.
Removing empty process `SYSTEM.$proc$system.v:384$470'.
Removing empty process `SYSTEM.$proc$system.v:264$469'.
Removing empty process `SYSTEM.$proc$system.v:263$468'.
Removing empty process `SYSTEM.$proc$system.v:262$467'.
Removing empty process `SYSTEM.$proc$system.v:261$466'.
Removing empty process `SYSTEM.$proc$system.v:260$465'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:397$440'.
Removing empty process `SYSTEM.$proc$system.v:397$440'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:385$438'.
Removing empty process `SYSTEM.$proc$system.v:385$438'.
Found and cleaned up 3 empty switches in `\SYSTEM.$proc$system.v:284$375'.
Removing empty process `SYSTEM.$proc$system.v:284$375'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:235$368'.
Removing empty process `SYSTEM.$proc$system.v:235$368'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:195$351'.
Removing empty process `SYSTEM.$proc$system.v:195$351'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$674'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$673'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$672'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$671'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$670'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$669'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$668'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$667'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$666'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$665'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$657'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$651'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$645'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$638'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$632'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$630'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$630'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 26 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 26 unused cells and 426 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\SCK is used but has no driver.
Warning: Wire main.\MOSI is used but has no driver.
Warning: Wire main.\FSS is used but has no driver.
found and reported 3 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 57 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$701:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:397$348_EN[29:0]$443 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$798:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$677:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$683:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$689:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$695:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:452$474_EN[31:0]$487 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 57 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 21 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:463$490 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:67$498 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:67$498 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:67$500 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$820 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$743_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$738_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$737_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$736_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$735_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$734_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$705 ($mux).
Removed cell main.$techmap\sys1.$procmux$703 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:419$453 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:295$376 ($add).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:227$360 ($eq).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$852 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$802 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$800 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:110$661 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:110$661 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:92$655 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:92$653 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:92$653 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart.v:89$649 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart.v:63$642 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart.v:63$642 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$637 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$636 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:42$634 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:42$634 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:110$661 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:110$661 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:92$655 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:92$653 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:92$653 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart1.$eq$uart.v:89$649 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$add$uart.v:63$642 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$add$uart.v:63$642 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$637 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$636 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:42$634 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:42$634 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$661 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$661 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$655 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$653 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$653 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$649 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$642 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$642 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$637 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$636 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$634 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$634 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$817 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$814 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$811 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$808 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$699 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$697 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$693 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$691 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$687 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$685 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$681 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$679 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:67$498 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$814 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$811 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$808 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:67$498_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_DATA[31:0]$477.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:449$471_EN[31:0]$478.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_DATA[31:0]$480.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:450$472_EN[31:0]$481.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_DATA[31:0]$483.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:451$473_EN[31:0]$484.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:449$471_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:450$472_EN.
Removed top 3 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:451$473_ADDR.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:451$473_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:452$474_ADDR.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$642_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:110$661_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$634_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart1.$add$uart.v:63$642_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart1.$sub$uart.v:42$634_Y.
Removed top 26 bits (of 32) from wire main.sys1.cpu.aluIn1.
Removed top 2 bits (of 32) from wire main.sys1.cpu.aluIn2.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 47 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:456$489 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$633_Y \sys1.uart1.wrtx \sys1.uart1.wrbaud \sys1.uart1.rd $techmap\sys1.uart1.$and$uart.v:42$633_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart.v:42$633_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs \sys1.rd_timer \sys1.wr_timer $techmap\sys1.$eq$system.v:227$360_Y $techmap\sys1.$eq$system.v:231$366_Y $techmap\sys1.$and$system.v:387$439_Y $techmap\sys1.$and$system.v:397$445_Y $techmap\sys1.$procmux$734_CMP $techmap\sys1.$procmux$735_CMP $techmap\sys1.$procmux$736_CMP $techmap\sys1.$procmux$737_CMP $techmap\sys1.$procmux$742_CMP $techmap\sys1.$procmux$738_CMP $techmap\sys1.$procmux$739_CMP $techmap\sys1.$procmux$743_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:420$461 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:67$498 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:295$376 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$642 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$661 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$634 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$653 ($sub).
  creating $macc model for $techmap\sys1.uart1.$add$uart.v:63$642 ($add).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:110$661 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:42$634 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:92$653 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart.v:63$642 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:110$661 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:42$634 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:92$653 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:42$634.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:110$661.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart.v:63$642.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:92$653.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:42$634.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:110$661.
  creating $alu model for $macc $techmap\sys1.uart1.$add$uart.v:63$642.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$653.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$634.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$661.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$642.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:92$653.
  creating $alu model for $macc $techmap\sys1.$add$system.v:295$376.
  creating $alu model for $macc $sub$main.v:67$498.
  creating $alu cell for $sub$main.v:67$498: $auto$alumacc.cc:485:replace_alu$878
  creating $alu cell for $techmap\sys1.$add$system.v:295$376: $auto$alumacc.cc:485:replace_alu$881
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:92$653: $auto$alumacc.cc:485:replace_alu$884
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$887
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$890
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$893
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$896
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$642: $auto$alumacc.cc:485:replace_alu$899
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$661: $auto$alumacc.cc:485:replace_alu$902
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$634: $auto$alumacc.cc:485:replace_alu$905
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$653: $auto$alumacc.cc:485:replace_alu$908
  creating $alu cell for $techmap\sys1.uart1.$add$uart.v:63$642: $auto$alumacc.cc:485:replace_alu$911
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:110$661: $auto$alumacc.cc:485:replace_alu$914
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:42$634: $auto$alumacc.cc:485:replace_alu$917
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:92$653: $auto$alumacc.cc:485:replace_alu$920
  creating $alu cell for $techmap\sys1.uart2.$add$uart.v:63$642: $auto$alumacc.cc:485:replace_alu$923
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:110$661: $auto$alumacc.cc:485:replace_alu$926
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:42$634: $auto$alumacc.cc:485:replace_alu$929
  created 18 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 4 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:397$464' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:449$491' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:450$492' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:451$493' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:452$494' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:420$461' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:456$489' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:449$491) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:450$492) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:451$493) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:452$494) has addr \sys1.cpu.addr [10:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:397$464 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:420$461 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:463$490 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:452$494 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:456$489 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=240 rports=1 wports=1 dbits=30 abits=3 words=8
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=248 dwaste=2 bwaste=3984 waste=3984 efficiency=2
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=504 dwaste=2 bwaste=4048 waste=4048 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1016 dwaste=2 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2040 dwaste=0 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$f93e392529d19d1a533b14f327cb659af897c411\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c17e4683bd194574ef7bc6efa660704103ba583b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d8c3e1154af9f256185da26a6fa44fc46ae0ff02\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$29817ab3399f40fcc64bc5feb18bdba9ecd47535\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3a52d2e38d3682949224ba24f05d8bcaf4208394\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e4fe12898377c3a5a6328aa8005556b2a156b277\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b193f9a8600dca7167e18891d7186981b0090c8b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$939dd271e6b4d5eeb04d8316f76316ea4c5d0784\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f8b3c1c8fd4307c3d0d027e09d9311023023feea\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43f41cf2e6026e5de4d750f691f62614cd841c05\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a45a42c7ec4b97e6b8cf18379c63804dc5e41b58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e466ed1f3e40805331d9f9ab1f2c582f676d791\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cf65bfad484cd60b4b9ff8b7b750b9cc0f5d51d0\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2652dfb00531fe8ad8b3544692822e2055035166\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cd0145e5d7af6ec938d7ebb9363da7c1f1d6c595\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bf1fbe0ee7ba5936e6ad74d9ca000a2b5f133a2a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$afad566358013dcdd84b2cde309ae2440d5c6fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0597e4e00822ab36a55a6b6cf4bdc686bc4c5f81\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64d175b95196cd4418d6d5dfbd4ceeec143b106c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a358555c9e5a42c956d1aab601aa10f35bc0e700\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1c47367636431629f56d1b2f12c2e5a535d65dc6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$72a58c1a6bbf83800bdf55461ab6a7b8067416f4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3986fa2de5c1de88113ed9f18ff2ac123fdeac56\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$85c039c0c30864ff5cc51a514aa57eb82f3cfd7f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c752fe598bb735aa918fa31e1601b5a4438a57af\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a78ddff81909dcf21efdeee403af81a53e1f350b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84d5cde021e30e0167e77428e32366febef5ae68\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e9c63b6edb049ea4d44e01845c6e1135a1e009a7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a8585776b6d144ace6b944995738c5ff95068ab4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cc9046da25a765416877ff33bddc725a3ff9b43a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$323124fc0a193934e2f604f093350f4895399ee7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8777093fa24e3b12efe51945e644d73b08e9e82d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 395 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 8 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:419$454:
      Old ports: A=3'111, B=3'110, Y=$techmap\sys1.$ternary$system.v:419$454_Y
      New ports: A=1'1, B=1'0, Y=$techmap\sys1.$ternary$system.v:419$454_Y [0]
      New connections: $techmap\sys1.$ternary$system.v:419$454_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:419$455:
      Old ports: A=$techmap\sys1.$ternary$system.v:419$454_Y, B=3'101, Y=$techmap\sys1.$ternary$system.v:419$455_Y
      New ports: A={ 1'1 $techmap\sys1.$ternary$system.v:419$454_Y [0] }, B=2'01, Y=$techmap\sys1.$ternary$system.v:419$455_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:419$455_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:419$456:
      Old ports: A=$techmap\sys1.$ternary$system.v:419$455_Y, B=3'100, Y=$techmap\sys1.$ternary$system.v:419$456_Y
      New ports: A=$techmap\sys1.$ternary$system.v:419$455_Y [1:0], B=2'00, Y=$techmap\sys1.$ternary$system.v:419$456_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:419$456_Y [2] = 1'1
  Optimizing cells in module \main.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 156 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 10 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=7 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 143 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 339 unused cells and 562 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$878.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$881.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$884.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$899.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$902.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$905.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$908.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$911.slice[0].carry: CO=\sys1.uart1.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$914.slice[0].carry: CO=\sys1.uart1.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$917.slice[0].carry: CO=\sys1.uart1.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$920.slice[0].carry: CO=\sys1.uart1.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$923.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$926.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$929.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1059.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1106.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$1433.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.18. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1731 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [0] -> \sys1.irqvect[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1732 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [1] -> \sys1.irqvect[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1733 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [2] -> \sys1.irqvect[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1734 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [3] -> \sys1.irqvect[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1735 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [4] -> \sys1.irqvect[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1736 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [5] -> \sys1.irqvect[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1737 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [6] -> \sys1.irqvect[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1738 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [7] -> \sys1.irqvect[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1739 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [8] -> \sys1.irqvect[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1740 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [9] -> \sys1.irqvect[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1741 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [10] -> \sys1.irqvect[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1742 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [11] -> \sys1.irqvect[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1743 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [12] -> \sys1.irqvect[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1744 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [13] -> \sys1.irqvect[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1745 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [14] -> \sys1.irqvect[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1746 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [15] -> \sys1.irqvect[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1747 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [16] -> \sys1.irqvect[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1748 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [17] -> \sys1.irqvect[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1749 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [18] -> \sys1.irqvect[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1750 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [19] -> \sys1.irqvect[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1751 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [20] -> \sys1.irqvect[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1752 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [21] -> \sys1.irqvect[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1753 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [22] -> \sys1.irqvect[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1754 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [23] -> \sys1.irqvect[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1755 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [24] -> \sys1.irqvect[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1756 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [25] -> \sys1.irqvect[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1757 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [26] -> \sys1.irqvect[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1758 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [27] -> \sys1.irqvect[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1759 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [28] -> \sys1.irqvect[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1760 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$1551 [29] -> \sys1.irqvect[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1761 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1762 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1763 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1764 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1765 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1766 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1767 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1768 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1769 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1770 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1771 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1772 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1773 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1774 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1775 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1776 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1777 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1778 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1779 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1780 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1781 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1782 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1850 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1851 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1852 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1853 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1854 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1855 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1856 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1857 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1858 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1859 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1860 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1861 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1862 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1863 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1864 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1865 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1866 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1867 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1868 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1869 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1870 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1871 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1872 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1873 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1874 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1875 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1876 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1877 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1878 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1879 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$1511 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1981 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1982 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1983 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1984 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1985 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1986 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1987 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1988 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1989 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1990 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1991 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1992 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1993 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1994 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1995 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1996 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1997 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1998 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2002 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2003 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2004 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2005 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2006 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2007 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2008 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2009 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2010 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2011 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2012 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1192 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2043 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2044 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2045 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2046 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2047 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1212 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1252 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2119 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2120 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2121 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2122 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2123 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2124 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2125 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2126 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2127 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2128 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2129 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2130 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2131 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2132 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2133 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2134 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2135 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2136 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2137 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2138 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1272 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2140 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2141 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2142 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2143 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2144 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2145 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2146 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2147 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2148 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2149 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2150 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2151 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2152 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2153 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2154 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2155 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2156 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2157 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2158 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2159 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2160 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2161 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2162 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2163 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2164 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2165 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2166 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2167 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2168 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2169 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$1503 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2170 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2171 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2172 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2173 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2174 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2175 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2176 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2177 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2178 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2179 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2180 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2181 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2182 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2183 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2184 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2185 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2186 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2187 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2188 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2189 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2190 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2191 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2192 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2193 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2194 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2195 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2196 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2197 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2198 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2199 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2200 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2201 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1332 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2204 to $_DFFE_PP_ for $techmap\sys1.$0\TMF1[0:0] -> \sys1.TMF1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2205 to $_DFFE_PP_ for $techmap\sys1.$0\TMF0[0:0] -> \sys1.TMF0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2206 to $_DFFE_PP_ for $techmap\sys1.$0\TMF[0:0] -> \sys1.TMF.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2207 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [0] -> \sys1.TMR [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2208 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [1] -> \sys1.TMR [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2209 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [2] -> \sys1.TMR [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2210 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [3] -> \sys1.TMR [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2211 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [4] -> \sys1.TMR [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2212 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [5] -> \sys1.TMR [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2213 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [6] -> \sys1.TMR [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2214 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [7] -> \sys1.TMR [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2215 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [8] -> \sys1.TMR [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2216 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [9] -> \sys1.TMR [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2217 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [10] -> \sys1.TMR [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2218 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [11] -> \sys1.TMR [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2219 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [12] -> \sys1.TMR [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2220 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [13] -> \sys1.TMR [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2221 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [14] -> \sys1.TMR [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2222 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [15] -> \sys1.TMR [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2223 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [16] -> \sys1.TMR [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2224 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [17] -> \sys1.TMR [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2225 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [18] -> \sys1.TMR [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2226 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [19] -> \sys1.TMR [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2227 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [20] -> \sys1.TMR [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2228 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [21] -> \sys1.TMR [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2229 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [22] -> \sys1.TMR [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2230 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [23] -> \sys1.TMR [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2231 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [24] -> \sys1.TMR [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2232 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [25] -> \sys1.TMR [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2233 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [26] -> \sys1.TMR [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2234 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [27] -> \sys1.TMR [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2235 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [28] -> \sys1.TMR [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2236 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [29] -> \sys1.TMR [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2237 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [30] -> \sys1.TMR [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2238 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [31] -> \sys1.TMR [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2465 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [0] -> \sys1.irqvect[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2466 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [1] -> \sys1.irqvect[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2467 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [2] -> \sys1.irqvect[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2468 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [3] -> \sys1.irqvect[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2469 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [4] -> \sys1.irqvect[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2470 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [5] -> \sys1.irqvect[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2471 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [6] -> \sys1.irqvect[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2472 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [7] -> \sys1.irqvect[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2473 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [8] -> \sys1.irqvect[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2474 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [9] -> \sys1.irqvect[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2475 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [10] -> \sys1.irqvect[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2476 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [11] -> \sys1.irqvect[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2477 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [12] -> \sys1.irqvect[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2478 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [13] -> \sys1.irqvect[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2479 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [14] -> \sys1.irqvect[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2480 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [15] -> \sys1.irqvect[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2481 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [16] -> \sys1.irqvect[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2482 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [17] -> \sys1.irqvect[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2483 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [18] -> \sys1.irqvect[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2484 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [19] -> \sys1.irqvect[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2485 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [20] -> \sys1.irqvect[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2486 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [21] -> \sys1.irqvect[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2487 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [22] -> \sys1.irqvect[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2488 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [23] -> \sys1.irqvect[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2489 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [24] -> \sys1.irqvect[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2490 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [25] -> \sys1.irqvect[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2491 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [26] -> \sys1.irqvect[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2492 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [27] -> \sys1.irqvect[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2493 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [28] -> \sys1.irqvect[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2494 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$1543 [29] -> \sys1.irqvect[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2604 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2605 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2606 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2607 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2608 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2609 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2610 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2611 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2612 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2613 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2614 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2615 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2616 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2617 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2618 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2619 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2620 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2621 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2622 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2623 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2624 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2625 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2626 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2627 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2628 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2629 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2630 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2631 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2632 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2633 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2634 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2635 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1172 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2715 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2716 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2717 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2718 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2719 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2720 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2721 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2722 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2723 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2724 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2725 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2726 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2727 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2728 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2729 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2730 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2731 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2732 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2733 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2734 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2735 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2736 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2737 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2738 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2739 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2740 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2741 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2742 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2743 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2744 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$1527 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2755 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [0] -> \sys1.irqvect[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2756 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [1] -> \sys1.irqvect[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2757 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [2] -> \sys1.irqvect[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2758 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [3] -> \sys1.irqvect[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2759 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [4] -> \sys1.irqvect[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2760 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [5] -> \sys1.irqvect[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2761 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [6] -> \sys1.irqvect[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2762 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [7] -> \sys1.irqvect[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2763 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [8] -> \sys1.irqvect[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2764 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [9] -> \sys1.irqvect[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2765 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [10] -> \sys1.irqvect[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2766 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [11] -> \sys1.irqvect[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2767 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [12] -> \sys1.irqvect[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2768 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [13] -> \sys1.irqvect[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2769 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [14] -> \sys1.irqvect[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2770 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [15] -> \sys1.irqvect[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2771 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [16] -> \sys1.irqvect[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2772 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [17] -> \sys1.irqvect[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2773 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [18] -> \sys1.irqvect[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2774 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [19] -> \sys1.irqvect[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2775 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [20] -> \sys1.irqvect[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2776 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [21] -> \sys1.irqvect[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2777 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [22] -> \sys1.irqvect[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2778 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [23] -> \sys1.irqvect[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2779 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [24] -> \sys1.irqvect[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2780 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [25] -> \sys1.irqvect[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2781 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [26] -> \sys1.irqvect[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2782 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [27] -> \sys1.irqvect[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2783 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [28] -> \sys1.irqvect[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2784 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$1537 [29] -> \sys1.irqvect[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2996 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2997 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2998 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2999 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3000 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3001 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3002 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3003 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3004 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3005 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3006 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3007 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3008 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3009 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3010 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3011 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3012 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3013 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3014 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3015 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3016 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3017 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3018 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3019 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3020 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3021 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3022 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3023 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3024 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3025 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3026 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3027 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1352 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3028 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3029 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3030 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3031 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3032 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3033 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3034 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3035 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3036 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3037 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3038 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3039 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3040 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3041 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3042 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3043 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3044 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3045 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3046 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3047 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1312 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3069 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1232 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3104 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3105 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3106 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3107 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3108 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3109 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3110 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3111 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3112 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3113 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3114 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3115 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3116 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3117 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3118 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3119 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3120 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3121 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3122 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3123 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$1412 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3124 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3125 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3126 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3127 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3128 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3129 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3130 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3131 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3132 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3133 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3134 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3135 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3136 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3137 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3138 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3139 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3140 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3141 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3142 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3143 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3144 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3145 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3146 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3147 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3148 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3149 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3150 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3151 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3152 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3153 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3154 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3155 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1392 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3156 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3157 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3158 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3159 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3160 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3161 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3162 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3164 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3165 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3166 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3167 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3168 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3169 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3170 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3171 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3172 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3173 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3174 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3175 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3176 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3177 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3178 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3179 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3180 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3181 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3182 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3183 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3184 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3185 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3186 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3187 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$1432 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3349 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3350 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3363 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3364 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3365 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3366 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3367 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3368 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3369 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3372 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3373 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3374 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3375 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3376 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3377 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3378 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3379 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3380 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$1452 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3381 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3382 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3383 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3384 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3385 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3386 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3387 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3388 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3389 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3390 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3391 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3392 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3393 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3394 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3395 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3396 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3397 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3398 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3399 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3400 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3401 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3402 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3403 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3404 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3405 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3406 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3407 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3408 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3409 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3410 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3411 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3412 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1372 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6622 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6623 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6624 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6625 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6626 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6627 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6628 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6629 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6630 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6631 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6632 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6633 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6634 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6635 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6636 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6637 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6638 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6639 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6640 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6641 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6642 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6643 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6644 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6645 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6646 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6647 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6648 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6649 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6650 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6651 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$1521 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6673 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [0] -> \sys1.uart2.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6674 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [1] -> \sys1.uart2.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6675 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [2] -> \sys1.uart2.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6676 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [3] -> \sys1.uart2.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6677 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [4] -> \sys1.uart2.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6678 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [5] -> \sys1.uart2.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6679 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [6] -> \sys1.uart2.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6680 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [7] -> \sys1.uart2.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6681 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [8] -> \sys1.uart2.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6682 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [9] -> \sys1.uart2.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6683 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [10] -> \sys1.uart2.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6684 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [11] -> \sys1.uart2.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6711 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [0] -> \sys1.uart2.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6712 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [1] -> \sys1.uart2.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6713 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [2] -> \sys1.uart2.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6714 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [3] -> \sys1.uart2.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6715 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [4] -> \sys1.uart2.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6716 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [5] -> \sys1.uart2.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6717 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [6] -> \sys1.uart2.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6718 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thr[7:0] [7] -> \sys1.uart2.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6719 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6735 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6736 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6737 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6738 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6739 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6740 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6741 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6742 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6743 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6744 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6745 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6746 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6747 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6748 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6749 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6750 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6751 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6752 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6753 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6754 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6755 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6756 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6757 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6758 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7152 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [0] -> \sys1.uart1.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7153 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [1] -> \sys1.uart1.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7154 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [2] -> \sys1.uart1.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7155 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [3] -> \sys1.uart1.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7156 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [4] -> \sys1.uart1.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7157 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [5] -> \sys1.uart1.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7158 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [6] -> \sys1.uart1.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7159 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [7] -> \sys1.uart1.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7160 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [8] -> \sys1.uart1.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7161 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [9] -> \sys1.uart1.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7162 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [10] -> \sys1.uart1.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7163 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [11] -> \sys1.uart1.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7190 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [0] -> \sys1.uart1.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7191 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [1] -> \sys1.uart1.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7192 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [2] -> \sys1.uart1.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7193 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [3] -> \sys1.uart1.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7194 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [4] -> \sys1.uart1.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7195 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [5] -> \sys1.uart1.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7196 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [6] -> \sys1.uart1.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7197 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thr[7:0] [7] -> \sys1.uart1.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7198 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thre[0:0] -> \sys1.uart1.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7214 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [0] -> \sys1.uart1.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7215 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [1] -> \sys1.uart1.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7216 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [2] -> \sys1.uart1.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7217 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [3] -> \sys1.uart1.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7218 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\stopb[0:0] -> \sys1.uart1.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7219 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [0] -> \sys1.uart1.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7220 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [1] -> \sys1.uart1.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7221 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [2] -> \sys1.uart1.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7222 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [3] -> \sys1.uart1.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7223 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [4] -> \sys1.uart1.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7224 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [5] -> \sys1.uart1.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7225 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [6] -> \sys1.uart1.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7226 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [7] -> \sys1.uart1.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7227 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [0] -> \sys1.uart1.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7228 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [1] -> \sys1.uart1.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7229 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [2] -> \sys1.uart1.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7230 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [3] -> \sys1.uart1.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7231 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [4] -> \sys1.uart1.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7232 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [5] -> \sys1.uart1.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7233 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [6] -> \sys1.uart1.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7234 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [7] -> \sys1.uart1.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7235 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [8] -> \sys1.uart1.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7236 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\ove[0:0] -> \sys1.uart1.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7237 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\dv[0:0] -> \sys1.uart1.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7468 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7469 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7470 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7471 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7472 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7473 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7474 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7475 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7476 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7477 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7478 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7479 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7480 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7481 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7482 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7483 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7484 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7485 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7486 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7487 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7488 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7489 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7490 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7491 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7492 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7493 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7494 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7495 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7496 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7497 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7498 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7499 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1292 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7596 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7597 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7598 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7599 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7600 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7601 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7602 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7603 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7604 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7605 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7606 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7607 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7634 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7635 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7636 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7637 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7638 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7639 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7640 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7641 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7642 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7658 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7659 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7660 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7661 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7662 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7663 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7664 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7665 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7666 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7667 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7668 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7669 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7670 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7671 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7672 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7673 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7674 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7675 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7676 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7677 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7678 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7679 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7680 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7681 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8087 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [0] -> \sys1.irqvect[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8088 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [1] -> \sys1.irqvect[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8089 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [2] -> \sys1.irqvect[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8090 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [3] -> \sys1.irqvect[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8091 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [4] -> \sys1.irqvect[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8092 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [5] -> \sys1.irqvect[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8093 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [6] -> \sys1.irqvect[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8094 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [7] -> \sys1.irqvect[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8095 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [8] -> \sys1.irqvect[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8096 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [9] -> \sys1.irqvect[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8097 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [10] -> \sys1.irqvect[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8098 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [11] -> \sys1.irqvect[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8099 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [12] -> \sys1.irqvect[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8100 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [13] -> \sys1.irqvect[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8101 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [14] -> \sys1.irqvect[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8102 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [15] -> \sys1.irqvect[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8103 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [16] -> \sys1.irqvect[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8104 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [17] -> \sys1.irqvect[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8105 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [18] -> \sys1.irqvect[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8106 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [19] -> \sys1.irqvect[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8107 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [20] -> \sys1.irqvect[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8108 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [21] -> \sys1.irqvect[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8109 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [22] -> \sys1.irqvect[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8110 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [23] -> \sys1.irqvect[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8111 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [24] -> \sys1.irqvect[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8112 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [25] -> \sys1.irqvect[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8113 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [26] -> \sys1.irqvect[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8114 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [27] -> \sys1.irqvect[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8115 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [28] -> \sys1.irqvect[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8116 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$1557 [29] -> \sys1.irqvect[7] [29].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2271 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2272 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2273 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [2] -> \sys1.irqen [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2274 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [3] -> \sys1.irqen [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2275 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [4] -> \sys1.irqen [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2276 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [5] -> \sys1.irqen [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2277 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [6] -> \sys1.irqen [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2278 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [7] -> \sys1.irqen [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4346 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4347 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4348 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4349 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4350 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4351 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4352 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4353 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4354 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4355 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4356 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4357 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4358 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4359 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4360 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4361 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4362 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4363 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4364 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4365 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4366 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4367 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4368 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4369 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4370 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4371 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4372 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4373 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4374 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4375 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$884.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$902.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$908.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$899.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$905.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$878.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$881.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$911.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$914.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$917.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$920.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$923.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$926.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$929.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1059.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1106.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$1433.$auto$alumacc.cc:485:replace_alu$1646.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1762 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1763 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1774 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1775 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1779 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2238 (SB_DFFE): \sys1.TMR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2240 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2241 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2242 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2243 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2244 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2245 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2246 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2247 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2248 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2249 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2250 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2251 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2252 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2253 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2254 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2255 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2256 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2257 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2258 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2259 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2260 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2261 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2262 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2263 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2264 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2265 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2266 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2267 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1983 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1984 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1985 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1986 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1987 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1988 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1989 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1990 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1991 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1992 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1993 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1994 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1995 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1996 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1997 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1998 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1999 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2000 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2001 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2002 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2003 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2004 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2005 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2006 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2007 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2008 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2009 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2010 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2011 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2012 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2044 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1981 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2045 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2046 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2054 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2055 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2056 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2057 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2058 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2059 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2060 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2061 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2062 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2063 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2064 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2069 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2070 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2043 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2129 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2130 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2131 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1764 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1765 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1766 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1767 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1768 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1769 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1770 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1771 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1772 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1773 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1776 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1777 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1778 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1780 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1781 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1782 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2200 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE): \sys1.TMR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE): \sys1.TMF1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE): \sys1.TMF0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE): \sys1.TMF = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE): \sys1.TMR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE): \sys1.TMR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE): \sys1.TMR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE): \sys1.TMR [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE): \sys1.TMR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE): \sys1.TMR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE): \sys1.TMR [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE): \sys1.TMR [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE): \sys1.TMR [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE): \sys1.TMR [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE): \sys1.TMR [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE): \sys1.TMR [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFFE): \sys1.TMR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFFE): \sys1.TMR [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFFE): \sys1.TMR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFFE): \sys1.TMR [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFFE): \sys1.TMR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFFE): \sys1.TMR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFFE): \sys1.TMR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFFE): \sys1.TMR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFFE): \sys1.TMR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFFE): \sys1.TMR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFFE): \sys1.TMR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFFE): \sys1.TMR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2233 (SB_DFFE): \sys1.TMR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2234 (SB_DFFE): \sys1.TMR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2235 (SB_DFFE): \sys1.TMR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2236 (SB_DFFE): \sys1.TMR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2237 (SB_DFFE): \sys1.TMR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE): \sys1.TMR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2268 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2269 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2270 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2272 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1761 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2271 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2616 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2617 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2631 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2632 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2633 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2634 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2635 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2997 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2998 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2999 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3000 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3001 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3002 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3003 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3004 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3005 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3006 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3007 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3008 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3009 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3010 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3011 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3012 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3013 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3014 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3015 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3016 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3017 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3018 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3019 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3020 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3021 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3022 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3023 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3024 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3025 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3026 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2996 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3027 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3029 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3030 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3031 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3032 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3033 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3034 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3035 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3036 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3037 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3038 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3039 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3040 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3041 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3042 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3043 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3044 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3045 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3046 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3047 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3048 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3049 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3050 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3051 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3052 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3053 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3054 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3055 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3056 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3057 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3058 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3028 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3059 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3061 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3062 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3063 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3064 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3065 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3066 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3067 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3068 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3069 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3070 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3071 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3072 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3073 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3074 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3075 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3076 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3077 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3078 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3079 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3080 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3081 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3082 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3083 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3084 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3085 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3086 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3087 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3088 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3089 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3090 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3060 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3091 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3093 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3094 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3095 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3096 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3097 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3098 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3099 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3100 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3101 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3102 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3103 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3104 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3105 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3106 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3107 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3108 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3109 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3110 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3111 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3112 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3113 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3114 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3115 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3116 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3117 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3118 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3119 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3120 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3121 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3122 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3092 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3123 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3125 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3126 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3127 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3128 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3129 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3130 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3131 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3132 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3133 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3134 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3135 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3136 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3137 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3138 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3139 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3140 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3141 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3142 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3143 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3144 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3145 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3146 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3147 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3148 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3149 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3150 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3151 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3152 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3153 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3154 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3124 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3155 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3157 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3158 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3159 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3160 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3161 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3162 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3163 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3164 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3165 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3166 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3167 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3168 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3169 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3170 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3171 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3172 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3173 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3174 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3175 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3176 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3177 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3178 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3179 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3180 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3181 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3182 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3183 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3184 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3185 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3186 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3156 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3187 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3350 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3351 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3352 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3353 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3354 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3355 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3356 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3357 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3358 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3359 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3360 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3361 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3362 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3363 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3364 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3365 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3366 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3367 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3368 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3369 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3370 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3371 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3372 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3373 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3374 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3375 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3376 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3377 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3378 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3379 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3349 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3380 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3382 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3383 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3384 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3385 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3386 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3387 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3388 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3389 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3390 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3391 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3392 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3393 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3394 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3395 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3396 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3397 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3398 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3399 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3400 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3401 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3402 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3403 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3404 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3405 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3406 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3407 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3408 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3409 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3410 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3411 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4283 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3412 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4407 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6674 (SB_DFFE): \sys1.uart2.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6675 (SB_DFFE): \sys1.uart2.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6676 (SB_DFFE): \sys1.uart2.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6677 (SB_DFFE): \sys1.uart2.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6678 (SB_DFFE): \sys1.uart2.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6679 (SB_DFFE): \sys1.uart2.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6680 (SB_DFFE): \sys1.uart2.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6681 (SB_DFFE): \sys1.uart2.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6682 (SB_DFFE): \sys1.uart2.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6683 (SB_DFFE): \sys1.uart2.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6673 (SB_DFFE): \sys1.uart2.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6684 (SB_DFFE): \sys1.uart2.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6686 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6687 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6688 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6689 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6690 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6691 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6692 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6693 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6694 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6695 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6685 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6697 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6696 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6703 (SB_DFF): \sys1.uart2.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6704 (SB_DFF): \sys1.uart2.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6705 (SB_DFF): \sys1.uart2.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6706 (SB_DFF): \sys1.uart2.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6707 (SB_DFF): \sys1.uart2.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6708 (SB_DFF): \sys1.uart2.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6709 (SB_DFF): \sys1.uart2.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6702 (SB_DFF): \sys1.uart2.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6710 (SB_DFF): \sys1.uart2.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6719 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6720 (SB_DFF): \sys1.uart2.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6721 (SB_DFF): \sys1.uart2.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6723 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6724 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6725 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6726 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6727 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6728 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6729 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6730 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6731 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6732 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6722 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6733 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6736 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6735 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6757 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6758 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7153 (SB_DFFE): \sys1.uart1.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7154 (SB_DFFE): \sys1.uart1.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7155 (SB_DFFE): \sys1.uart1.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7156 (SB_DFFE): \sys1.uart1.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7157 (SB_DFFE): \sys1.uart1.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7158 (SB_DFFE): \sys1.uart1.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7159 (SB_DFFE): \sys1.uart1.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7160 (SB_DFFE): \sys1.uart1.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7161 (SB_DFFE): \sys1.uart1.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7162 (SB_DFFE): \sys1.uart1.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7152 (SB_DFFE): \sys1.uart1.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7163 (SB_DFFE): \sys1.uart1.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7165 (SB_DFF): \sys1.uart1.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7166 (SB_DFF): \sys1.uart1.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7167 (SB_DFF): \sys1.uart1.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7168 (SB_DFF): \sys1.uart1.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7169 (SB_DFF): \sys1.uart1.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7170 (SB_DFF): \sys1.uart1.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7171 (SB_DFF): \sys1.uart1.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7172 (SB_DFF): \sys1.uart1.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7173 (SB_DFF): \sys1.uart1.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7174 (SB_DFF): \sys1.uart1.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7164 (SB_DFF): \sys1.uart1.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7176 (SB_DFF): \sys1.uart1.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7175 (SB_DFF): \sys1.uart1.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7182 (SB_DFF): \sys1.uart1.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7183 (SB_DFF): \sys1.uart1.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7184 (SB_DFF): \sys1.uart1.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7185 (SB_DFF): \sys1.uart1.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7186 (SB_DFF): \sys1.uart1.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7187 (SB_DFF): \sys1.uart1.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7188 (SB_DFF): \sys1.uart1.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7181 (SB_DFF): \sys1.uart1.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7189 (SB_DFF): \sys1.uart1.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7198 (SB_DFFE): \sys1.uart1.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7199 (SB_DFF): \sys1.uart1.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7200 (SB_DFF): \sys1.uart1.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7202 (SB_DFF): \sys1.uart1.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7203 (SB_DFF): \sys1.uart1.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7204 (SB_DFF): \sys1.uart1.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7205 (SB_DFF): \sys1.uart1.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7206 (SB_DFF): \sys1.uart1.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7207 (SB_DFF): \sys1.uart1.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7208 (SB_DFF): \sys1.uart1.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7209 (SB_DFF): \sys1.uart1.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7210 (SB_DFF): \sys1.uart1.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7211 (SB_DFF): \sys1.uart1.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7201 (SB_DFF): \sys1.uart1.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7212 (SB_DFF): \sys1.uart1.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7215 (SB_DFFE): \sys1.uart1.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7216 (SB_DFFE): \sys1.uart1.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7214 (SB_DFFE): \sys1.uart1.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7217 (SB_DFFE): \sys1.uart1.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7236 (SB_DFFE): \sys1.uart1.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7237 (SB_DFFE): \sys1.uart1.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7469 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7470 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7471 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7472 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7473 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7474 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7475 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7476 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7477 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7478 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7479 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7480 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7481 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7482 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7483 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7484 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7485 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7486 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7487 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7488 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7489 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7490 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7491 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7492 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7493 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7494 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7495 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7496 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7497 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7498 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7468 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7499 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7597 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7598 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7599 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7600 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7601 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7602 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7603 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7604 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7605 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7606 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7596 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7607 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7609 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7610 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7611 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7608 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7647 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7648 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7649 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7651 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7652 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7653 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7654 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7655 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7656 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7680 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7681 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2239 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2273 (SB_DFFER): \sys1.irqen [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2274 (SB_DFFER): \sys1.irqen [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2275 (SB_DFFER): \sys1.irqen [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2276 (SB_DFFER): \sys1.irqen [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2277 (SB_DFFER): \sys1.irqen [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2278 (SB_DFFER): \sys1.irqen [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1982 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3381 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4406 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1731 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2533 (A=$techmap\sys1.$procmux$709_Y [1], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2534 (A=$techmap\sys1.$procmux$709_Y [2], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2535 (A=$techmap\sys1.$procmux$709_Y [3], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2242 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2536 (A=$techmap\sys1.$procmux$709_Y [4], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2243 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2537 (A=$techmap\sys1.$procmux$709_Y [5], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2538 (A=$techmap\sys1.$procmux$709_Y [6], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2245 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2539 (A=$techmap\sys1.$procmux$709_Y [7], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2246 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2540 (A=$techmap\sys1.$procmux$709_Y [8], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2247 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2541 (A=$techmap\sys1.$procmux$709_Y [9], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2248 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2542 (A=$techmap\sys1.$procmux$709_Y [10], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2249 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2543 (A=$techmap\sys1.$procmux$709_Y [11], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2250 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2544 (A=$techmap\sys1.$procmux$709_Y [12], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2251 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2545 (A=$techmap\sys1.$procmux$709_Y [13], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2252 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2546 (A=$techmap\sys1.$procmux$709_Y [14], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2547 (A=$techmap\sys1.$procmux$709_Y [15], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2548 (A=$techmap\sys1.$procmux$709_Y [16], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2549 (A=$techmap\sys1.$procmux$709_Y [17], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2550 (A=$techmap\sys1.$procmux$709_Y [18], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2551 (A=$techmap\sys1.$procmux$709_Y [19], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2552 (A=$techmap\sys1.$procmux$709_Y [20], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2553 (A=$techmap\sys1.$procmux$709_Y [21], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2554 (A=$techmap\sys1.$procmux$709_Y [22], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2555 (A=$techmap\sys1.$procmux$709_Y [23], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2262 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2556 (A=$techmap\sys1.$procmux$709_Y [24], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2263 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2557 (A=$techmap\sys1.$procmux$709_Y [25], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2264 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2558 (A=$techmap\sys1.$procmux$709_Y [26], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2265 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2559 (A=$techmap\sys1.$procmux$709_Y [27], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2266 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2560 (A=$techmap\sys1.$procmux$709_Y [28], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2267 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2527 (A=$techmap\sys1.$procmux$722_Y, B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1851 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1854 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1855 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2561 (A=$techmap\sys1.$procmux$709_Y [29], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2268 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2562 (A=$techmap\sys1.$procmux$709_Y [30], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2269 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2563 (A=$techmap\sys1.$procmux$709_Y [31], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2270 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$1732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2719 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2720 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6948 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [1], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6949 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [2], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6950 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [3], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6951 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [4], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6952 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [5], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6953 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [6], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6954 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [7], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6955 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [8], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6693 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6956 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [9], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6957 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [10], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6947 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [0], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6958 (A=$techmap\sys1.uart2.$ternary$uart.v:42$636_Y [11], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$6696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$6718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6826 (A=\sys1.uart2.dv, B=1'0, S=\sys1.uart2.rd) into $auto$simplemap.cc:420:simplemap_dff$6757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7153 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7154 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7155 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7156 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7157 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7158 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7159 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7152 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7424 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [1], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7425 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [2], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7426 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [3], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7427 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [4], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7428 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [5], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7429 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [6], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7430 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [7], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7431 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [8], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7432 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [9], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7433 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [10], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7423 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [0], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7434 (A=$techmap\sys1.uart1.$ternary$uart.v:42$636_Y [11], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7305 (A=\sys1.uart1.dv, B=1'0, S=\sys1.uart1.rd) into $auto$simplemap.cc:420:simplemap_dff$7236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7868 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7869 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7870 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7871 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7872 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7873 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7874 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7875 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7876 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7877 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7867 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7878 (A=$techmap\sys1.uart0.$ternary$uart.v:42$636_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$633_Y) into $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6480 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6481 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6479 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7749 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$7680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6482 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6483 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6484 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6485 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6486 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2532 (A=$techmap\sys1.$procmux$709_Y [0], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2239 (SB_DFF).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 182 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 74 unused cells and 6793 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 3948 gates and 5406 wires to a netlist network with 1456 inputs and 639 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1092.
ABC: Participating nodes from both networks       =    2327.
ABC: Participating nodes from the first network   =    1102. (  44.20 % of nodes)
ABC: Participating nodes from the second network  =    1225. (  49.14 % of nodes)
ABC: Node pairs (any polarity)                    =    1101. (  44.16 % of names can be moved)
ABC: Node pairs (same polarity)                   =     801. (  32.13 % of names can be moved)
ABC: Total runtime =     0.20 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2492
ABC RESULTS:        internal signals:     3311
ABC RESULTS:           input signals:     1456
ABC RESULTS:          output signals:      639
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 39 unused cells and 2361 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2744
  1-LUT               71
  2-LUT              336
  3-LUT             1114
  4-LUT             1223
  with \SB_CARRY     231

Eliminating LUTs.
Number of LUTs:     2744
  1-LUT               71
  2-LUT              336
  3-LUT             1114
  4-LUT             1223
  with \SB_CARRY     231

Combining LUTs.
Number of LUTs:     2669
  1-LUT               46
  2-LUT              281
  3-LUT             1077
  4-LUT             1265
  with \SB_CARRY     231

Eliminated 0 LUTs.
Combined 75 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5387 unused wires.

2.47. Executing AUTONAME pass.
Renamed 48947 objects in module main (84 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               2616
   Number of wire bits:           5220
   Number of public wires:        2616
   Number of public wire bits:    5220
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4135
     SB_CARRY                      249
     SB_DFF                        149
     SB_DFFE                       805
     SB_DFFER                       38
     SB_DFFESR                     107
     SB_DFFR                        33
     SB_DFFSR                       68
     SB_LUT4                      2669
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                16

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 10 unique messages, 25 total
End of script. Logfile hash: d667406eb8
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 22x opt_expr (0 sec), 1% 22x opt_clean (0 sec), ...
