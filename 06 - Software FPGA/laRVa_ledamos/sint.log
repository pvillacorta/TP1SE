
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\SPI_master'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:348: Warning: Identifier `\posedge_TMF' is implicitly declared.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:80: Warning: Identifier `\JY4' is implicitly declared.
main.v:116: Warning: Identifier `\XOE' is implicitly declared.
main.v:119: Warning: Identifier `\XD' is implicitly declared.
main.v:119: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:124: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:129: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:134: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:139: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:144: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:149: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:154: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:160: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:165: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:170: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:175: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:180: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:185: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:190: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:195: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: SPI_master          
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.4. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART_CORE'.
Removed 1 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:607$617'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:531$554 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:350$448 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:270$437 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:229$420 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$SPI.v:58$362 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:47$358 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:38$352 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:29$349 in module SPI_master.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 70 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:100$623'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:530$592'.
  Set init value: \irqen = 8'00000000
Found init rule in `\SYSTEM.$proc$system.v:482$590'.
  Set init value: \spiLoRA_ss = 1'1
Found init rule in `\SYSTEM.$proc$system.v:481$589'.
  Set init value: \spiLoRA_ctrl = 14'00000000000000
Found init rule in `\SYSTEM.$proc$system.v:439$588'.
  Set init value: \spi_ss = 2'11
Found init rule in `\SYSTEM.$proc$system.v:438$587'.
  Set init value: \spi_ctrl = 14'00000000000000
Found init rule in `\SYSTEM.$proc$system.v:330$586'.
  Set init value: \TMF1 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:329$585'.
  Set init value: \TMF0 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:328$584'.
  Set init value: \TMF = 1'0
Found init rule in `\SYSTEM.$proc$system.v:327$583'.
  Set init value: \TMR = 180000
Found init rule in `\SYSTEM.$proc$system.v:326$582'.
  Set init value: \tcount = 0
Found init rule in `\SYSTEM.$proc$system.v:303$581'.
  Set init value: \GPOUT = 8'00000000
Found init rule in `\SPI_master.$proc$SPI.v:54$416'.
  Set init value: \sin = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:44$415'.
  Set init value: \bitcnt = 6'000000
Found init rule in `\SPI_master.$proc$SPI.v:36$414'.
  Set init value: \sck = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:26$413'.
  Set init value: \divcnt = 8'00000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:531$554'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:100$623'.
Creating decoders for process `\main.$proc$main.v:103$619'.
Creating decoders for process `\ram32.$proc$system.v:603$610'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:596$597'.
     1/12: $0$memwr$\ram_array$system.v:597$593_EN[31:0]$600
     2/12: $0$memwr$\ram_array$system.v:597$593_DATA[31:0]$599
     3/12: $0$memwr$\ram_array$system.v:597$593_ADDR[11:0]$598
     4/12: $0$memwr$\ram_array$system.v:598$594_EN[31:0]$603
     5/12: $0$memwr$\ram_array$system.v:598$594_DATA[31:0]$602
     6/12: $0$memwr$\ram_array$system.v:598$594_ADDR[11:0]$601
     7/12: $0$memwr$\ram_array$system.v:599$595_EN[31:0]$606
     8/12: $0$memwr$\ram_array$system.v:599$595_DATA[31:0]$605
     9/12: $0$memwr$\ram_array$system.v:599$595_ADDR[11:0]$604
    10/12: $0$memwr$\ram_array$system.v:600$596_EN[31:0]$609
    11/12: $0$memwr$\ram_array$system.v:600$596_DATA[31:0]$608
    12/12: $0$memwr$\ram_array$system.v:600$596_ADDR[11:0]$607
Creating decoders for process `\SYSTEM.$proc$system.v:530$592'.
Creating decoders for process `\SYSTEM.$proc$system.v:483$591'.
Creating decoders for process `\SYSTEM.$proc$system.v:482$590'.
Creating decoders for process `\SYSTEM.$proc$system.v:481$589'.
Creating decoders for process `\SYSTEM.$proc$system.v:439$588'.
Creating decoders for process `\SYSTEM.$proc$system.v:438$587'.
Creating decoders for process `\SYSTEM.$proc$system.v:330$586'.
Creating decoders for process `\SYSTEM.$proc$system.v:329$585'.
Creating decoders for process `\SYSTEM.$proc$system.v:328$584'.
Creating decoders for process `\SYSTEM.$proc$system.v:327$583'.
Creating decoders for process `\SYSTEM.$proc$system.v:326$582'.
Creating decoders for process `\SYSTEM.$proc$system.v:303$581'.
Creating decoders for process `\SYSTEM.$proc$system.v:543$556'.
     1/3: $0$memwr$\irqvect$system.v:543$417_EN[29:0]$559
     2/3: $0$memwr$\irqvect$system.v:543$417_DATA[29:0]$558
     3/3: $0$memwr$\irqvect$system.v:543$417_ADDR[2:0]$557
Creating decoders for process `\SYSTEM.$proc$system.v:531$554'.
     1/1: $0\irqen[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:504$553'.
     1/2: $0\spiLoRA_ss[0:0]
     2/2: $0\spiLoRA_ctrl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:460$533'.
     1/2: $0\spi_ss[1:0]
     2/2: $0\spi_ctrl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:350$448'.
     1/5: $0\tcount[31:0]
     2/5: $0\TMF1[0:0]
     3/5: $0\TMF0[0:0]
     4/5: $0\TMF[0:0]
     5/5: $0\TMR[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:308$440'.
     1/1: $0\GPOUT[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:270$437'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:229$420'.
     1/1: $0\cdi[31:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:54$416'.
Creating decoders for process `\SPI_master.$proc$SPI.v:44$415'.
Creating decoders for process `\SPI_master.$proc$SPI.v:36$414'.
Creating decoders for process `\SPI_master.$proc$SPI.v:26$413'.
Creating decoders for process `\SPI_master.$proc$SPI.v:58$362'.
     1/25: $0\shreg[31:0] [31]
     2/25: $0\shreg[31:0] [30]
     3/25: $0\shreg[31:0] [29]
     4/25: $0\shreg[31:0] [28]
     5/25: $0\shreg[31:0] [27]
     6/25: $0\shreg[31:0] [26]
     7/25: $0\shreg[31:0] [25]
     8/25: $0\shreg[31:0] [24]
     9/25: $0\shreg[31:0] [23]
    10/25: $0\shreg[31:0] [22]
    11/25: $0\shreg[31:0] [21]
    12/25: $0\shreg[31:0] [20]
    13/25: $0\shreg[31:0] [19]
    14/25: $0\shreg[31:0] [18]
    15/25: $0\shreg[31:0] [17]
    16/25: $0\shreg[31:0] [16]
    17/25: $0\shreg[31:0] [15]
    18/25: $0\shreg[31:0] [14]
    19/25: $0\shreg[31:0] [13]
    20/25: $0\shreg[31:0] [12]
    21/25: $0\shreg[31:0] [11]
    22/25: $0\shreg[31:0] [10]
    23/25: $0\shreg[31:0] [9]
    24/25: $0\shreg[31:0] [8]
    25/25: $0\shreg[31:0] [7:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:55$361'.
Creating decoders for process `\SPI_master.$proc$SPI.v:47$358'.
     1/1: $0\bitcnt[5:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:38$352'.
     1/1: $0\sck[0:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:29$349'.
     1/1: $0\divcnt[7:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\LoRA_RST' from process `\SYSTEM.$proc$system.v:483$591'.
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:270$437'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:229$420'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:103$619'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:603$610'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$593_ADDR' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$593_DATA' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$593_EN' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:598$594_ADDR' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:598$594_DATA' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:598$594_EN' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:599$595_ADDR' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:599$595_DATA' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:599$595_EN' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:600$596_ADDR' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1091' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:600$596_DATA' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1092' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:600$596_EN' using process `\ram32.$proc$system.v:596$597'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:543$417_ADDR' using process `\SYSTEM.$proc$system.v:543$556'.
  created $dff cell `$procdff$1094' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:543$417_DATA' using process `\SYSTEM.$proc$system.v:543$556'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:543$417_EN' using process `\SYSTEM.$proc$system.v:543$556'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:531$554'.
  created $adff cell `$procdff$1097' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\spiLoRA_ctrl' using process `\SYSTEM.$proc$system.v:504$553'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `\SYSTEM.\spiLoRA_ss' using process `\SYSTEM.$proc$system.v:504$553'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `\SYSTEM.\spi_ctrl' using process `\SYSTEM.$proc$system.v:460$533'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `\SYSTEM.\spi_ss' using process `\SYSTEM.$proc$system.v:460$533'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:350$448'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `\SYSTEM.\TMR' using process `\SYSTEM.$proc$system.v:350$448'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF' using process `\SYSTEM.$proc$system.v:350$448'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF0' using process `\SYSTEM.$proc$system.v:350$448'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF1' using process `\SYSTEM.$proc$system.v:350$448'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `\SYSTEM.\GPOUT' using process `\SYSTEM.$proc$system.v:308$440'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `\SPI_master.\shreg' using process `\SPI_master.$proc$SPI.v:58$362'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `\SPI_master.\sin' using process `\SPI_master.$proc$SPI.v:55$361'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `\SPI_master.\bitcnt' using process `\SPI_master.$proc$SPI.v:47$358'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `\SPI_master.\sck' using process `\SPI_master.$proc$SPI.v:38$352'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `\SPI_master.\divcnt' using process `\SPI_master.$proc$SPI.v:29$349'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1129' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1130' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1132' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1133' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$1135' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1138' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:100$623'.
Removing empty process `main.$proc$main.v:103$619'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:603$610'.
Removing empty process `ram32.$proc$system.v:603$610'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:596$597'.
Removing empty process `ram32.$proc$system.v:596$597'.
Removing empty process `SYSTEM.$proc$system.v:530$592'.
Removing empty process `SYSTEM.$proc$system.v:483$591'.
Removing empty process `SYSTEM.$proc$system.v:482$590'.
Removing empty process `SYSTEM.$proc$system.v:481$589'.
Removing empty process `SYSTEM.$proc$system.v:439$588'.
Removing empty process `SYSTEM.$proc$system.v:438$587'.
Removing empty process `SYSTEM.$proc$system.v:330$586'.
Removing empty process `SYSTEM.$proc$system.v:329$585'.
Removing empty process `SYSTEM.$proc$system.v:328$584'.
Removing empty process `SYSTEM.$proc$system.v:327$583'.
Removing empty process `SYSTEM.$proc$system.v:326$582'.
Removing empty process `SYSTEM.$proc$system.v:303$581'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:543$556'.
Removing empty process `SYSTEM.$proc$system.v:543$556'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:531$554'.
Removing empty process `SYSTEM.$proc$system.v:531$554'.
Found and cleaned up 2 empty switches in `\SYSTEM.$proc$system.v:504$553'.
Removing empty process `SYSTEM.$proc$system.v:504$553'.
Found and cleaned up 2 empty switches in `\SYSTEM.$proc$system.v:460$533'.
Removing empty process `SYSTEM.$proc$system.v:460$533'.
Found and cleaned up 3 empty switches in `\SYSTEM.$proc$system.v:350$448'.
Removing empty process `SYSTEM.$proc$system.v:350$448'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:308$440'.
Removing empty process `SYSTEM.$proc$system.v:308$440'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:270$437'.
Removing empty process `SYSTEM.$proc$system.v:270$437'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:229$420'.
Removing empty process `SYSTEM.$proc$system.v:229$420'.
Removing empty process `SPI_master.$proc$SPI.v:54$416'.
Removing empty process `SPI_master.$proc$SPI.v:44$415'.
Removing empty process `SPI_master.$proc$SPI.v:36$414'.
Removing empty process `SPI_master.$proc$SPI.v:26$413'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:55$361'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:47$358'.
Removing empty process `SPI_master.$proc$SPI.v:47$358'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:38$352'.
Removing empty process `SPI_master.$proc$SPI.v:38$352'.
Found and cleaned up 1 empty switch in `\SPI_master.$proc$SPI.v:29$349'.
Removing empty process `SPI_master.$proc$SPI.v:29$349'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 38 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template SPI_master for cells of type SPI_master.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module SPI_master.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 34 unused cells and 639 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\TXD2 is used but has no driver.
Warning: Wire main.\TXD1 is used but has no driver.
Warning: Wire main.\FSS is used but has no driver.
Warning: Wire main.\sys1.uart2.rxd is used but has no driver.
Warning: Wire main.\sys1.uart1.rxd is used but has no driver.
found and reported 5 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 81 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$823:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:543$417_EN[29:0]$559 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$1074:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$799:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$805:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$811:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$817:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:600$596_EN[31:0]$609 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \sys1.uart2.shtx = 9'111111111 to constant driver in module main.
Promoting init spec \sys1.uart1.shtx = 9'111111111 to constant driver in module main.
Promoted 2 init specs to constant drivers.

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 81 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 20 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:611$612 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:103$620 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:103$620 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:103$622 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$1096 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$881_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$876_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$875_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$874_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$873_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$872_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$871_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$870_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$869_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$868_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$827 ($mux).
Removed cell main.$techmap\sys1.$procmux$825 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:565$569 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:362$449 ($add).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:262$429 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:260$425 ($eq).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$1138 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$1078 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$1076 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart1.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1093 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1090 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1087 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1084 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$821 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$819 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$815 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$813 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$809 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$807 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$803 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$801 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:103$620 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$1090 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$1087 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$1084 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:103$620_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_DATA[31:0]$599.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$593_EN[31:0]$600.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_DATA[31:0]$602.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:598$594_EN[31:0]$603.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_DATA[31:0]$605.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:599$595_EN[31:0]$606.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:597$593_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:598$594_EN.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:599$595_EN.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:49$360_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$764_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.uart0.$procmux$1024_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$756_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart1.$add$uart.v:63$764_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart1.$sub$uart.v:42$756_Y.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs1.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs2.
Removed top 9 bits (of 32) from wire main.sys1.rx_spi.
Removed top 9 bits (of 32) from wire main.sys1.spi.dout.
Removed top 9 bits (of 32) from wire main.sys1.spi.shreg.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 53 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:604$611 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$755_Y \sys1.uart1.wrtx \sys1.uart1.wrbaud \sys1.uart1.rd $techmap\sys1.uart1.$and$uart.v:42$755_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart.v:42$755_Y \sys1.spi.wr $techmap\sys1.spi.$or$SPI.v:30$350_Y \sys1.spiLoRA.wr $techmap\sys1.spiLoRA.$or$SPI.v:30$350_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs \sys1.rd_timer \sys1.wr_timer \sys1.spi_wr_ctrl \sys1.spi_wr_ss \sys1.spiLoRA_wr_ctrl \sys1.spiLoRA_wr_ss $techmap\sys1.$eq$system.v:262$429_Y $techmap\sys1.$eq$system.v:266$435_Y $techmap\sys1.$and$system.v:310$441_Y $techmap\sys1.$and$system.v:533$555_Y $techmap\sys1.$and$system.v:543$561_Y $techmap\sys1.$procmux$866_CMP $techmap\sys1.$procmux$867_CMP $techmap\sys1.$procmux$868_CMP $techmap\sys1.$procmux$869_CMP $techmap\sys1.$procmux$870_CMP $techmap\sys1.$procmux$871_CMP $techmap\sys1.$procmux$872_CMP $techmap\sys1.$procmux$873_CMP $techmap\sys1.$procmux$874_CMP $techmap\sys1.$procmux$875_CMP $techmap\sys1.$procmux$880_CMP $techmap\sys1.$procmux$876_CMP $techmap\sys1.$procmux$877_CMP $techmap\sys1.$procmux$881_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:566$577 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:103$620 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:362$449 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
  creating $macc model for $techmap\sys1.uart1.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart1.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:88$411.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:49$360.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:31$351.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:88$411.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:49$360.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:31$351.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.$add$system.v:362$449.
  creating $alu model for $macc $sub$main.v:103$620.
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:85$409 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:85$409 ($gt): new $alu
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:85$409: $auto$alumacc.cc:485:replace_alu$1217
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:84$407: $auto$alumacc.cc:485:replace_alu$1222
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:83$405: $auto$alumacc.cc:485:replace_alu$1227
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:82$403: $auto$alumacc.cc:485:replace_alu$1232
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:81$401: $auto$alumacc.cc:485:replace_alu$1237
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:80$399: $auto$alumacc.cc:485:replace_alu$1242
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:79$397: $auto$alumacc.cc:485:replace_alu$1247
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:78$395: $auto$alumacc.cc:485:replace_alu$1252
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:77$393: $auto$alumacc.cc:485:replace_alu$1257
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:76$391: $auto$alumacc.cc:485:replace_alu$1262
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:75$389: $auto$alumacc.cc:485:replace_alu$1267
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:74$387: $auto$alumacc.cc:485:replace_alu$1272
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:73$385: $auto$alumacc.cc:485:replace_alu$1277
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:72$383: $auto$alumacc.cc:485:replace_alu$1282
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:71$381: $auto$alumacc.cc:485:replace_alu$1287
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:70$379: $auto$alumacc.cc:485:replace_alu$1292
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:69$377: $auto$alumacc.cc:485:replace_alu$1297
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:68$375: $auto$alumacc.cc:485:replace_alu$1302
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:67$373: $auto$alumacc.cc:485:replace_alu$1307
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:66$371: $auto$alumacc.cc:485:replace_alu$1312
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:65$369: $auto$alumacc.cc:485:replace_alu$1317
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:64$367: $auto$alumacc.cc:485:replace_alu$1322
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:63$365: $auto$alumacc.cc:485:replace_alu$1327
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:62$363: $auto$alumacc.cc:485:replace_alu$1332
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:85$409: $auto$alumacc.cc:485:replace_alu$1337
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:84$407: $auto$alumacc.cc:485:replace_alu$1342
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:83$405: $auto$alumacc.cc:485:replace_alu$1347
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:82$403: $auto$alumacc.cc:485:replace_alu$1352
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:81$401: $auto$alumacc.cc:485:replace_alu$1357
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:80$399: $auto$alumacc.cc:485:replace_alu$1362
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:79$397: $auto$alumacc.cc:485:replace_alu$1367
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:78$395: $auto$alumacc.cc:485:replace_alu$1372
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:77$393: $auto$alumacc.cc:485:replace_alu$1377
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:76$391: $auto$alumacc.cc:485:replace_alu$1382
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:75$389: $auto$alumacc.cc:485:replace_alu$1387
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:74$387: $auto$alumacc.cc:485:replace_alu$1392
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:73$385: $auto$alumacc.cc:485:replace_alu$1397
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:72$383: $auto$alumacc.cc:485:replace_alu$1402
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:71$381: $auto$alumacc.cc:485:replace_alu$1407
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:70$379: $auto$alumacc.cc:485:replace_alu$1412
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:69$377: $auto$alumacc.cc:485:replace_alu$1417
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:68$375: $auto$alumacc.cc:485:replace_alu$1422
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:67$373: $auto$alumacc.cc:485:replace_alu$1427
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:66$371: $auto$alumacc.cc:485:replace_alu$1432
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:65$369: $auto$alumacc.cc:485:replace_alu$1437
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:64$367: $auto$alumacc.cc:485:replace_alu$1442
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:63$365: $auto$alumacc.cc:485:replace_alu$1447
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:62$363: $auto$alumacc.cc:485:replace_alu$1452
  creating $alu cell for $sub$main.v:103$620: $auto$alumacc.cc:485:replace_alu$1457
  creating $alu cell for $techmap\sys1.$add$system.v:362$449: $auto$alumacc.cc:485:replace_alu$1460
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1463
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$1466
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$1469
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$1472
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$1475
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:31$351: $auto$alumacc.cc:485:replace_alu$1478
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:49$360: $auto$alumacc.cc:485:replace_alu$1481
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:88$411: $auto$alumacc.cc:485:replace_alu$1484
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:31$351: $auto$alumacc.cc:485:replace_alu$1487
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:49$360: $auto$alumacc.cc:485:replace_alu$1490
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:88$411: $auto$alumacc.cc:485:replace_alu$1493
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1496
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1499
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1502
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1505
  creating $alu cell for $techmap\sys1.uart1.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1508
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1511
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1514
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1517
  creating $alu cell for $techmap\sys1.uart2.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1520
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1523
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1526
  created 72 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 52 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:543$580' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:597$613' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:598$614' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:599$615' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:600$616' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:566$577' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:604$611' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:597$613) has addr \sys1.cpu.addr [11:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:598$614) has addr \sys1.cpu.addr [11:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:599$615) has addr \sys1.cpu.addr [11:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:600$616) has addr \sys1.cpu.addr [11:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:543$580 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:566$577 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:611$612 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:600$616 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:604$611 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=240 rports=1 wports=1 dbits=30 abits=3 words=8
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=248 dwaste=2 bwaste=3984 waste=3984 efficiency=2
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=504 dwaste=2 bwaste=4048 waste=4048 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1016 dwaste=2 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2040 dwaste=0 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=131072 rports=1 wports=1 dbits=32 abits=12 words=4096
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=32, acells=2
    Efficiency for rule 2.2: efficiency=100, cells=32, acells=4
    Efficiency for rule 2.1: efficiency=100, cells=32, acells=8
    Efficiency for rule 1.1: efficiency=100, cells=32, acells=16
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 1 0>: sys1.ram0.ram_array.0.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 1 0>: sys1.ram0.ram_array.1.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 1 0>: sys1.ram0.ram_array.2.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 1 0>: sys1.ram0.ram_array.3.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 1 0>: sys1.ram0.ram_array.4.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 1 0>: sys1.ram0.ram_array.5.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 1 0>: sys1.ram0.ram_array.6.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 1 0>: sys1.ram0.ram_array.7.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 1 0>: sys1.ram0.ram_array.8.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 1 0>: sys1.ram0.ram_array.9.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 1 0>: sys1.ram0.ram_array.10.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 1 0>: sys1.ram0.ram_array.11.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 1 0>: sys1.ram0.ram_array.12.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 1 0>: sys1.ram0.ram_array.13.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 1 0>: sys1.ram0.ram_array.14.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 1 0>: sys1.ram0.ram_array.15.1.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$7c8c6c9d4ad98841fae2fe173af3d6d8b05a856e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3768a986b7148182ec3437adc563577a5152011c\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$45bc2cef11799fd75dc2fe1e28b44288b62ea2d8\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a07ec22a80c7d9fdb57de777dfaad7004b59e1d7\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e1902dc640f629b6c9839d7a12ee3ad45d1f5d54\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$228323a81c854d72d24672c71258b762ebb5725f\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$49a41edd423a0c90aa90d70251371843f3642a33\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4ea6c0bed5dccb3f32d3e15c36381a842ddcd665\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bb02044a77b6ccfc346663b39d54816bf6a7e567\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bdeae06eac9f077269e76e45aeb4ba85608c3897\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e04a60eb8037bda3b7f135eedd5ef8da57b88f6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$56c46dfe598230074483cc99d07f17b1592cdf0d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a7f0c9a1e632568733b275a8c8f9de872a04fbaf\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1f74c48a87c1b9a8930a9610a9c841ea8d99877d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$46276890519399c5ad7a5947f3ffc7c0134635b6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$746f47701cc0ed62d73bb7e5958e3bf2b8bf5f66\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$226aff5bc0d452db2d62c9da86594c792efcf087\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3d74579ec42063cdfb95ad1c1d475038101193d7\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bafbbb5d9460877b0186da60d64d1cc1a714d5e6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9e533e88d9884c97cbd2929b685c312854d5f726\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d7fb9cbc63f39b405bf2a5ace3328f4b8ecf4876\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d0a2f028bfcd1f66dec927ba79e4af1fea57d7c9\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$60a850a621c6bc4023011fce3cbeb08d15ca3a7e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$330f3c1c59e2013777ad732204d1d7f8a73d060a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6f43b51fd559d9ae95f5210bca62694743355653\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2b26f7767a350884657dd5ca6edad239180e9584\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$01c468c5eadfaf1228f99e6f87a7d2cfc1eb3b72\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c977be5e9c3307124247c53e47aabae0f02e5001\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6e696d0fa50e2fc483b169c1b55c6b98bed89749\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$39c1243383a58d08cbeb202016a6193d723681c8\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f40392238be342549f217b8d2eafa1772688504d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ba808f255a01f433bc6002884a9333ce38eac348\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$139be0fd401c55245af056a3cb1472d4ac4a7251\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e8d32862322d380c4b2e94058e2b32f3adc3a144\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d8a925a66fe15a171d84b64fec6fc43a99dc8cd0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a502c270058a945c92a4d721aa359f03a09c6ac6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f3b2e163fbba2be23b04e6a57ee8dc2284382937\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e5d4d0b0246c9fcff972464e4bfb9ca2fefeb4f9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$49f69f6d259df4e66c3a57c8755ce85841ac76bb\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cb4b04711d3f3e3dcaeb687405c8f041055a6530\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c4b347ba2d177461efce37d36199e12dfe7ca19c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$af845be7fc1ad60e882c15700c2ef215d9db364b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$7c6600921df8241b6c11c67378d3ab60ae8b614c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$eedbe6d40ca566b71fcca529668378053ab212d0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a0d653d608d4a104f68761188c7f080adcea745f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$5ae30fe5f1a804623df31631ae3ff02eea7700fe\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1fa427f6415f981f5d47e665bbfa1d6617de9161\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f6c59f57a7b3d8bce02c2e9269f375a20eb116fb\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c6f98887d68b42e10a0727e8d2061c10d4813250\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0ffa0fae604674761563590ce1aa01bace31e898\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0e546466e6d5f0aff785a2bd10ac2f745a0b22b6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3cee273dfd37845343b3a80ca4f3c1f34b78e6ab\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$7d6d1d2c3b3e4b62d4900989ec899c9f631c1501\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0d500583c57e0232f85b4a5948ff4196850dfffd\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$277d1d9c645004b5098018a17e4fef87f1d7bc7a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$066cc603c9e859c56f747749d1aea667474dd9d0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d43b1253605eacf5859034c5846e0aa15997b1ac\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e947e34f4ce5e9110ef7504a05f7733a2aa0295\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3361d8032b7f070a8bd20f30d895aab4958011d5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dce9433186f91909ad37b437422273061a2bf423\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$08f7f6225f3dd3cbc109d30dfcd5552383c4a439\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f4b813f46f8f5bdd65b317b60e3edc5c88b95b95\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$5399a5ca27a757081795dc0678c2837cd8bf849a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$85d25337bcbd72e080c1859fd7a12e280cade81a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 85 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 34 unused cells and 896 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 8 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:565$570:
      Old ports: A=3'111, B=3'110, Y=$techmap\sys1.$ternary$system.v:565$570_Y
      New ports: A=1'1, B=1'0, Y=$techmap\sys1.$ternary$system.v:565$570_Y [0]
      New connections: $techmap\sys1.$ternary$system.v:565$570_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:565$571:
      Old ports: A=$techmap\sys1.$ternary$system.v:565$570_Y, B=3'101, Y=$techmap\sys1.$ternary$system.v:565$571_Y
      New ports: A={ 1'1 $techmap\sys1.$ternary$system.v:565$570_Y [0] }, B=2'01, Y=$techmap\sys1.$ternary$system.v:565$571_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:565$571_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:565$572:
      Old ports: A=$techmap\sys1.$ternary$system.v:565$571_Y, B=3'100, Y=$techmap\sys1.$ternary$system.v:565$572_Y
      New ports: A=$techmap\sys1.$ternary$system.v:565$571_Y [1:0], B=2'00, Y=$techmap\sys1.$ternary$system.v:565$572_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:565$572_Y [2] = 1'1
  Optimizing cells in module \main.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 156 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 10 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:f73fd5ba4618feeb57a105b7870e98bc61f18d66$paramod$350e5b3c77f745285d3c3768fb71530b920a3cff\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $reduce_or.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 951 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$9535 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 849 unused cells and 1444 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1222.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1227.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1232.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1237.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1242.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1247.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1252.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1257.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1262.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1267.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1272.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1277.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1282.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1287.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1292.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1297.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1302.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1307.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1312.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1317.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1322.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1327.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1332.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1342.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1347.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1352.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1357.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1362.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1367.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1372.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1377.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1382.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1387.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1392.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1397.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1402.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1407.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1412.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1417.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1422.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1427.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1432.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1437.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1442.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1447.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1452.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1457.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1460.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1463.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1478.slice[0].carry: CO=\sys1.spi.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1481.slice[0].carry: CO=\sys1.spi.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1484.slice[0].carry: CO=\sys1.spi_ctrl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1484.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1484.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1487.slice[0].carry: CO=\sys1.spiLoRA.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1490.slice[0].carry: CO=\sys1.spiLoRA.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1493.slice[0].carry: CO=\sys1.spiLoRA_ctrl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1493.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1493.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1496.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1499.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1502.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1505.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1508.slice[0].carry: CO=\sys1.uart1.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1511.slice[0].carry: CO=\sys1.uart1.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1514.slice[0].carry: CO=\sys1.uart1.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1517.slice[0].carry: CO=\sys1.uart1.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1520.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1523.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1526.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$2120.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$2167.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$2494.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 44 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$9536 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 6 unused cells and 3 unused wires.

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1227.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1237.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1247.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1257.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1267.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1277.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1287.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1297.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1307.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1317.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1327.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1347.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1357.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1367.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1377.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1387.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1397.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1407.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1417.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1427.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1437.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1447.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [1]

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 20 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 6 unused cells and 8 unused wires.

2.32.18. Rerunning OPT passes. (Removed registers in this run.)

2.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1237.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1257.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1277.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1297.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1317.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1357.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1377.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1397.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1417.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1437.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [2]

2.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 8 cells.

2.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 0 unused wires.

2.32.24. Rerunning OPT passes. (Removed registers in this run.)

2.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1257.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1297.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1377.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1417.slice[3].carry: CO=1'1

2.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 2 cells.

2.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 0 unused wires.

2.32.30. Rerunning OPT passes. (Removed registers in this run.)

2.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1297.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1417.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [4]

2.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 4 unused wires.

2.32.36. Rerunning OPT passes. (Removed registers in this run.)

2.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1217.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1217.BB [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1337.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1337.BB [5]

2.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 6 unused wires.

2.32.42. Rerunning OPT passes. (Removed registers in this run.)

2.32.43. Running ICE40 specific optimizations.

2.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.48. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$10090 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1586 -> $auto$memory_bram.cc:964:replace_cell$1584.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3337 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3338 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3339 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3340 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3341 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3342 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3343 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3344 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3345 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3346 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3347 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3348 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3349 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3350 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3363 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3364 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3365 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3366 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2572 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3368 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3369 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3372 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3373 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3374 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3375 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3376 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3377 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3378 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3379 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3380 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3381 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3382 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3383 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3384 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3385 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3386 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3387 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3388 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3389 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3390 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3391 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3392 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3393 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3394 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3395 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3396 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3397 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2582 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3398 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [0] -> \sys1.irqvect[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3399 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [1] -> \sys1.irqvect[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3400 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [2] -> \sys1.irqvect[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3401 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [3] -> \sys1.irqvect[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3402 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [4] -> \sys1.irqvect[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3403 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [5] -> \sys1.irqvect[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3404 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [6] -> \sys1.irqvect[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3405 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [7] -> \sys1.irqvect[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3406 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [8] -> \sys1.irqvect[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3407 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [9] -> \sys1.irqvect[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3408 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [10] -> \sys1.irqvect[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3409 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [11] -> \sys1.irqvect[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3410 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [12] -> \sys1.irqvect[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3411 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [13] -> \sys1.irqvect[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3412 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [14] -> \sys1.irqvect[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3413 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [15] -> \sys1.irqvect[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3414 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [16] -> \sys1.irqvect[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3415 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [17] -> \sys1.irqvect[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3416 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [18] -> \sys1.irqvect[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3417 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [19] -> \sys1.irqvect[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3418 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [20] -> \sys1.irqvect[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3419 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [21] -> \sys1.irqvect[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3420 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [22] -> \sys1.irqvect[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3421 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [23] -> \sys1.irqvect[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3422 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [24] -> \sys1.irqvect[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3423 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [25] -> \sys1.irqvect[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3424 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [26] -> \sys1.irqvect[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3425 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [27] -> \sys1.irqvect[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3426 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [28] -> \sys1.irqvect[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3427 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2598 [29] -> \sys1.irqvect[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3462 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [0] -> \sys1.irqvect[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3463 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [1] -> \sys1.irqvect[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3464 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [2] -> \sys1.irqvect[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3465 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [3] -> \sys1.irqvect[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3466 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [4] -> \sys1.irqvect[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3467 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [5] -> \sys1.irqvect[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3468 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [6] -> \sys1.irqvect[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3469 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [7] -> \sys1.irqvect[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3470 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [8] -> \sys1.irqvect[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3471 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [9] -> \sys1.irqvect[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3472 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [10] -> \sys1.irqvect[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3473 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [11] -> \sys1.irqvect[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3474 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [12] -> \sys1.irqvect[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3475 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [13] -> \sys1.irqvect[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3476 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [14] -> \sys1.irqvect[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3477 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [15] -> \sys1.irqvect[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3478 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [16] -> \sys1.irqvect[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3479 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [17] -> \sys1.irqvect[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3480 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [18] -> \sys1.irqvect[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3481 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [19] -> \sys1.irqvect[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3482 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [20] -> \sys1.irqvect[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3483 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [21] -> \sys1.irqvect[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3484 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [22] -> \sys1.irqvect[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3485 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [23] -> \sys1.irqvect[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3486 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [24] -> \sys1.irqvect[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3487 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [25] -> \sys1.irqvect[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3488 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [26] -> \sys1.irqvect[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3489 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [27] -> \sys1.irqvect[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3490 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [28] -> \sys1.irqvect[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3491 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2604 [29] -> \sys1.irqvect[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3524 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3525 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3526 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3527 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3528 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3529 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3530 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3531 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3532 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3533 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3534 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3535 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3536 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3537 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3538 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3539 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3540 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3541 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3542 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3543 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3544 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3545 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3546 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3547 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3548 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3549 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3550 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3551 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3552 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3553 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2588 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3587 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [0] -> \sys1.irqvect[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3588 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [1] -> \sys1.irqvect[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3589 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [2] -> \sys1.irqvect[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3590 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [3] -> \sys1.irqvect[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3591 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [4] -> \sys1.irqvect[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3592 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [5] -> \sys1.irqvect[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3593 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [6] -> \sys1.irqvect[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3594 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [7] -> \sys1.irqvect[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3595 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [8] -> \sys1.irqvect[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3596 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [9] -> \sys1.irqvect[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3597 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [10] -> \sys1.irqvect[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3598 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [11] -> \sys1.irqvect[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3599 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [12] -> \sys1.irqvect[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3600 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [13] -> \sys1.irqvect[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3601 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [14] -> \sys1.irqvect[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3602 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [15] -> \sys1.irqvect[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3603 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [16] -> \sys1.irqvect[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3604 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [17] -> \sys1.irqvect[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3605 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [18] -> \sys1.irqvect[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3606 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [19] -> \sys1.irqvect[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3607 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [20] -> \sys1.irqvect[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3608 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [21] -> \sys1.irqvect[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3609 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [22] -> \sys1.irqvect[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3610 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [23] -> \sys1.irqvect[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3611 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [24] -> \sys1.irqvect[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3612 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [25] -> \sys1.irqvect[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3613 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [26] -> \sys1.irqvect[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3614 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [27] -> \sys1.irqvect[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3615 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [28] -> \sys1.irqvect[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3616 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2612 [29] -> \sys1.irqvect[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3678 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [0] -> \sys1.irqvect[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3679 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [1] -> \sys1.irqvect[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3680 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [2] -> \sys1.irqvect[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3681 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [3] -> \sys1.irqvect[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3682 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [4] -> \sys1.irqvect[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3683 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [5] -> \sys1.irqvect[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3684 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [6] -> \sys1.irqvect[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3685 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [7] -> \sys1.irqvect[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3686 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [8] -> \sys1.irqvect[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3687 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [9] -> \sys1.irqvect[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3688 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [10] -> \sys1.irqvect[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3689 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [11] -> \sys1.irqvect[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3690 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [12] -> \sys1.irqvect[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3691 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [13] -> \sys1.irqvect[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3692 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [14] -> \sys1.irqvect[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3693 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [15] -> \sys1.irqvect[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3694 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [16] -> \sys1.irqvect[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3695 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [17] -> \sys1.irqvect[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3696 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [18] -> \sys1.irqvect[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3697 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [19] -> \sys1.irqvect[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3698 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [20] -> \sys1.irqvect[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [21] -> \sys1.irqvect[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [22] -> \sys1.irqvect[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3701 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [23] -> \sys1.irqvect[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3702 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [24] -> \sys1.irqvect[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3703 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [25] -> \sys1.irqvect[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3704 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [26] -> \sys1.irqvect[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3705 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [27] -> \sys1.irqvect[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3706 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [28] -> \sys1.irqvect[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3707 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2618 [29] -> \sys1.irqvect[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4460 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4461 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4462 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4463 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4464 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4465 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4466 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4467 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4468 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4469 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4470 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4471 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4472 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4473 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4474 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4475 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4476 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4477 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4478 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4479 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4480 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4481 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4482 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4483 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4484 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4485 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4486 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4487 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4488 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4489 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4490 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4491 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$2313 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4492 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4493 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4494 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4495 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4496 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4497 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4498 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4499 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4500 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4501 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4502 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4503 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4504 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4505 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4506 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4507 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4508 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4509 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4510 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4511 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4512 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4513 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4514 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4515 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4516 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4517 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4518 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4519 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4520 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4521 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4522 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4523 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2473 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4524 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4525 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4526 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4527 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4528 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4529 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4530 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4531 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4532 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4533 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4534 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4535 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4536 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4537 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4538 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4539 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4540 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4541 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4542 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4543 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4544 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4545 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4546 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4547 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4548 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4549 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4550 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4551 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4552 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4553 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4554 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4555 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$2453 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4703 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4704 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4705 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4706 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4707 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4708 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4709 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4710 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4711 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4712 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4713 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4714 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4715 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4716 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4717 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4718 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4719 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4720 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4721 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4722 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4723 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4724 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4725 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4726 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4727 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4728 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4729 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4730 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4731 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4732 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4733 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4734 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$2253 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4735 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4736 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4737 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4738 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4739 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4740 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4741 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4742 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4743 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4744 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4745 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4746 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4747 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4748 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4749 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4750 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4751 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4752 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4753 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4754 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4755 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4756 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4757 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4758 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4759 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4760 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4761 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4762 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4763 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4764 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4765 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4766 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$2273 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4767 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4768 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4769 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4770 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4771 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4772 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4773 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4774 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4775 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4776 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4777 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4778 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4779 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4780 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4781 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4782 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4783 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4784 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4785 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4786 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4787 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4788 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4789 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4790 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4791 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4792 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4793 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4794 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4795 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4796 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4797 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4798 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$2333 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4799 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4800 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4801 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4802 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4803 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4804 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4805 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4806 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4807 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4808 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4809 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4810 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4811 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4812 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4813 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4814 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4815 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4816 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4817 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4818 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4819 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4820 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4821 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4822 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4823 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4824 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4825 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4826 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4827 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4828 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4829 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4830 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$2393 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4831 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4832 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4833 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4834 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4835 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4836 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4837 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4838 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4839 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4840 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4841 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4842 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4843 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4844 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4845 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4846 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4847 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4848 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4849 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4850 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4851 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4852 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4853 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4854 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4855 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4856 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4857 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4858 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4859 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4860 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4861 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4862 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$2293 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4863 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4864 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4865 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4866 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4867 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4868 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4869 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4870 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4871 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4872 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4873 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4874 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4875 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4876 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4877 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4878 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4879 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4880 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4881 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4882 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4883 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4884 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4885 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4886 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4887 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4888 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4889 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4890 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4891 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4892 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4893 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4894 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$2373 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4895 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4896 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4897 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4898 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4899 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4900 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4901 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4902 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4903 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4904 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4905 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4906 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4907 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4908 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4909 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4910 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4911 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4912 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4913 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4914 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4915 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4916 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4917 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4918 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4919 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4920 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4921 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4922 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4923 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4924 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4925 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4926 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$2413 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4927 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4928 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4929 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4930 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4931 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4932 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4933 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4934 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4935 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4936 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4937 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4938 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4939 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4940 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4941 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4942 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4943 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4944 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4945 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4946 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4947 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4948 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4949 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4950 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4951 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4952 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4953 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4954 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4955 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4956 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4957 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4958 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2493 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5023 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5024 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5025 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5026 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5027 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5028 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5029 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5030 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5031 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5032 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5033 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5034 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5035 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5036 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5037 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5038 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5039 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5040 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5041 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5042 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5043 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5044 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5045 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5046 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5047 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2513 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5069 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$2433 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5375 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5376 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5377 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5378 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5379 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5380 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5381 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5382 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5383 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5384 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5385 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5386 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5387 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5388 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5389 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5390 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5391 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5392 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5393 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5394 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5395 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5396 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5446 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5447 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5448 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5449 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5450 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5451 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5452 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5453 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5454 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5455 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5456 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5457 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5458 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5459 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5460 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5461 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5462 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5463 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5464 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5465 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5466 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5467 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5468 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5469 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5470 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5471 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5472 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5473 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5474 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5475 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2564 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5476 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [0] -> \sys1.GPOUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5477 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [1] -> \sys1.GPOUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5478 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [2] -> \sys1.GPOUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5479 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [3] -> \sys1.GPOUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5480 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [4] -> \sys1.GPOUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5481 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [5] -> \sys1.GPOUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5482 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [6] -> \sys1.GPOUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5483 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [7] -> \sys1.GPOUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5484 to $_DFFE_PP_ for $techmap\sys1.$0\TMF1[0:0] -> \sys1.TMF1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5485 to $_DFFE_PP_ for $techmap\sys1.$0\TMF0[0:0] -> \sys1.TMF0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5486 to $_DFFE_PP_ for $techmap\sys1.$0\TMF[0:0] -> \sys1.TMF.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5487 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [0] -> \sys1.TMR [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5488 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [1] -> \sys1.TMR [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5489 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [2] -> \sys1.TMR [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5490 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [3] -> \sys1.TMR [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5491 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [4] -> \sys1.TMR [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5492 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [5] -> \sys1.TMR [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5493 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [6] -> \sys1.TMR [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5494 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [7] -> \sys1.TMR [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5495 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [8] -> \sys1.TMR [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5496 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [9] -> \sys1.TMR [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5497 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [10] -> \sys1.TMR [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5498 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [11] -> \sys1.TMR [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5499 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [12] -> \sys1.TMR [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5500 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [13] -> \sys1.TMR [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5501 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [14] -> \sys1.TMR [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5502 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [15] -> \sys1.TMR [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5503 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [16] -> \sys1.TMR [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5504 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [17] -> \sys1.TMR [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5505 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [18] -> \sys1.TMR [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5506 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [19] -> \sys1.TMR [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5507 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [20] -> \sys1.TMR [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5508 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [21] -> \sys1.TMR [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5509 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [22] -> \sys1.TMR [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5510 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [23] -> \sys1.TMR [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5511 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [24] -> \sys1.TMR [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5512 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [25] -> \sys1.TMR [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5513 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [26] -> \sys1.TMR [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5514 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [27] -> \sys1.TMR [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5515 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [28] -> \sys1.TMR [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5516 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [29] -> \sys1.TMR [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5517 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [30] -> \sys1.TMR [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5518 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [31] -> \sys1.TMR [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5551 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [0] -> \sys1.spi_ss [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5552 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [1] -> \sys1.spi_ss [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5553 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [0] -> \sys1.spi_ctrl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5554 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [1] -> \sys1.spi_ctrl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5555 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [2] -> \sys1.spi_ctrl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5556 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [3] -> \sys1.spi_ctrl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5557 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [4] -> \sys1.spi_ctrl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5558 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [5] -> \sys1.spi_ctrl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5559 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [6] -> \sys1.spi_ctrl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5560 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [7] -> \sys1.spi_ctrl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5561 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [8] -> \sys1.spi_ctrl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5562 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [9] -> \sys1.spi_ctrl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5563 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [10] -> \sys1.spi_ctrl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5564 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [11] -> \sys1.spi_ctrl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5565 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [12] -> \sys1.spi_ctrl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5566 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [13] -> \sys1.spi_ctrl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5567 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ss[0:0] -> \sys1.spiLoRA_ss.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5568 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [0] -> \sys1.spiLoRA_ctrl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5569 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [1] -> \sys1.spiLoRA_ctrl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5570 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [2] -> \sys1.spiLoRA_ctrl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5571 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [3] -> \sys1.spiLoRA_ctrl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5572 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [4] -> \sys1.spiLoRA_ctrl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5573 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [5] -> \sys1.spiLoRA_ctrl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5574 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [6] -> \sys1.spiLoRA_ctrl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5575 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [7] -> \sys1.spiLoRA_ctrl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5576 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [8] -> \sys1.spiLoRA_ctrl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5577 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [9] -> \sys1.spiLoRA_ctrl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5578 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [10] -> \sys1.spiLoRA_ctrl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5579 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [11] -> \sys1.spiLoRA_ctrl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5580 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [12] -> \sys1.spiLoRA_ctrl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5581 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [13] -> \sys1.spiLoRA_ctrl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6102 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6103 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6104 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6105 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6106 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6107 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6108 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6109 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6110 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6111 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6112 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6113 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6114 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$2233 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6374 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6375 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6376 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6377 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6378 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6379 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6380 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6381 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6382 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6383 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6384 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6385 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6386 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6387 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6388 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6389 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6390 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6391 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6392 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6393 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6394 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6395 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6396 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6397 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6398 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6399 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6400 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6401 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6402 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6403 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6404 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6405 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$2353 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$6444 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1950 -> $auto$memory_bram.cc:964:replace_cell$1948.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$6447 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1924 -> $auto$memory_bram.cc:964:replace_cell$1922.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$6669 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1560 -> $auto$memory_bram.cc:964:replace_cell$1558.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$7925 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1638 -> $auto$memory_bram.cc:964:replace_cell$1636.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$8633 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1898 -> $auto$memory_bram.cc:964:replace_cell$1896.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$8635 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1872 -> $auto$memory_bram.cc:964:replace_cell$1870.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$8639 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1846 -> $auto$memory_bram.cc:964:replace_cell$1844.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8650 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\sck[0:0] -> \sys1.spiLoRA.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8651 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [0] -> \sys1.spiLoRA.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8652 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [1] -> \sys1.spiLoRA.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8653 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [2] -> \sys1.spiLoRA.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8654 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [3] -> \sys1.spiLoRA.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8655 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [4] -> \sys1.spiLoRA.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8656 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [5] -> \sys1.spiLoRA.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8658 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [0] -> \sys1.spiLoRA.shreg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8659 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [1] -> \sys1.spiLoRA.shreg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8660 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [2] -> \sys1.spiLoRA.shreg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8661 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [3] -> \sys1.spiLoRA.shreg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8662 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [4] -> \sys1.spiLoRA.shreg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8663 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [5] -> \sys1.spiLoRA.shreg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8664 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [6] -> \sys1.spiLoRA.shreg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8665 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [7] -> \sys1.spiLoRA.shreg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8666 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [8] -> \sys1.spiLoRA.shreg [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8667 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [9] -> \sys1.spiLoRA.shreg [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8668 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [10] -> \sys1.spiLoRA.shreg [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8669 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [11] -> \sys1.spiLoRA.shreg [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8670 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [12] -> \sys1.spiLoRA.shreg [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8671 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [13] -> \sys1.spiLoRA.shreg [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8672 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [14] -> \sys1.spiLoRA.shreg [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8673 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [15] -> \sys1.spiLoRA.shreg [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8674 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [16] -> \sys1.spiLoRA.shreg [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8675 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [17] -> \sys1.spiLoRA.shreg [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8676 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [18] -> \sys1.spiLoRA.shreg [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8677 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [19] -> \sys1.spiLoRA.shreg [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8678 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [20] -> \sys1.spiLoRA.shreg [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8679 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [21] -> \sys1.spiLoRA.shreg [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8680 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [22] -> \sys1.spiLoRA.shreg [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8681 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [23] -> \sys1.spiLoRA.shreg [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8682 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [24] -> \sys1.spiLoRA.shreg [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8683 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [25] -> \sys1.spiLoRA.shreg [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8684 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [26] -> \sys1.spiLoRA.shreg [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8685 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [27] -> \sys1.spiLoRA.shreg [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8686 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [28] -> \sys1.spiLoRA.shreg [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8687 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [29] -> \sys1.spiLoRA.shreg [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8688 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [30] -> \sys1.spiLoRA.shreg [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8689 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [31] -> \sys1.spiLoRA.shreg [31].
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9036 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1820 -> $auto$memory_bram.cc:964:replace_cell$1818.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9038 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1794 -> $auto$memory_bram.cc:964:replace_cell$1792.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9040 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1768 -> $auto$memory_bram.cc:964:replace_cell$1766.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9043 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1612 -> $auto$memory_bram.cc:964:replace_cell$1610.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9046 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1742 -> $auto$memory_bram.cc:964:replace_cell$1740.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9056 to $_DFFE_PP_ for $techmap\sys1.spi.$0\sck[0:0] -> \sys1.spi.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9057 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [0] -> \sys1.spi.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9058 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [1] -> \sys1.spi.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9059 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [2] -> \sys1.spi.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9060 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [3] -> \sys1.spi.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9061 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [4] -> \sys1.spi.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9062 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [5] -> \sys1.spi.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9064 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [0] -> \sys1.rx_spi [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9065 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [1] -> \sys1.rx_spi [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9066 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [2] -> \sys1.rx_spi [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9067 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [3] -> \sys1.rx_spi [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9068 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [4] -> \sys1.rx_spi [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9069 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [5] -> \sys1.rx_spi [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9070 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [6] -> \sys1.rx_spi [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9071 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [7] -> \sys1.rx_spi [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9072 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [8] -> \sys1.rx_spi [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9073 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [9] -> \sys1.rx_spi [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9074 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [10] -> \sys1.rx_spi [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9075 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [11] -> \sys1.rx_spi [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9076 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [12] -> \sys1.rx_spi [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9077 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [13] -> \sys1.rx_spi [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9078 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [14] -> \sys1.rx_spi [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9079 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [15] -> \sys1.rx_spi [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9080 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [16] -> \sys1.rx_spi [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9081 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [17] -> \sys1.rx_spi [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9082 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [18] -> \sys1.rx_spi [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9083 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [19] -> \sys1.rx_spi [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9084 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [20] -> \sys1.rx_spi [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9085 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [21] -> \sys1.rx_spi [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9086 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [22] -> \sys1.rx_spi [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9087 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [23] -> $auto$wreduce.cc:460:run$1166 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9088 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [24] -> $auto$wreduce.cc:460:run$1166 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9089 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [25] -> $auto$wreduce.cc:460:run$1166 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9090 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [26] -> $auto$wreduce.cc:460:run$1166 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9091 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [27] -> $auto$wreduce.cc:460:run$1166 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9092 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [28] -> $auto$wreduce.cc:460:run$1166 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9093 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [29] -> $auto$wreduce.cc:460:run$1166 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9094 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [30] -> $auto$wreduce.cc:460:run$1166 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9095 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [31] -> $auto$wreduce.cc:460:run$1166 [31].
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9235 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1716 -> $auto$memory_bram.cc:964:replace_cell$1714.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9237 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1690 -> $auto$memory_bram.cc:964:replace_cell$1688.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9239 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [0] -> \sys1.uart2.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9240 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [1] -> \sys1.uart2.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9241 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [2] -> \sys1.uart2.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9242 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [3] -> \sys1.uart2.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9243 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [4] -> \sys1.uart2.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9244 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [5] -> \sys1.uart2.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9245 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [6] -> \sys1.uart2.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9246 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [7] -> \sys1.uart2.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9247 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [8] -> \sys1.uart2.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9248 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [9] -> \sys1.uart2.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9249 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [10] -> \sys1.uart2.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9250 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [11] -> \sys1.uart2.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9268 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9284 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9285 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9286 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9287 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9288 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9289 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9290 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9291 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9292 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9293 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9294 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9295 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9296 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9297 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9298 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9299 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9300 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9301 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9302 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9303 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9304 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9305 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9306 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9307 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_N_ cell $auto$simplemap.cc:420:simplemap_dff$9502 to $_DFFE_NP_ for $auto$rtlil.cc:1936:Mux$1664 -> $auto$memory_bram.cc:964:replace_cell$1662.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9505 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [0] -> \sys1.uart1.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9506 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [1] -> \sys1.uart1.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9507 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [2] -> \sys1.uart1.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9508 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [3] -> \sys1.uart1.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9509 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [4] -> \sys1.uart1.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9510 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [5] -> \sys1.uart1.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9511 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [6] -> \sys1.uart1.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9512 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [7] -> \sys1.uart1.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9513 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [8] -> \sys1.uart1.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9514 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [9] -> \sys1.uart1.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9515 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [10] -> \sys1.uart1.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9516 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [11] -> \sys1.uart1.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9534 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thre[0:0] -> \sys1.uart1.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9550 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [0] -> \sys1.uart1.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9551 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [1] -> \sys1.uart1.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9552 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [2] -> \sys1.uart1.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9553 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [3] -> \sys1.uart1.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9554 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\stopb[0:0] -> \sys1.uart1.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9555 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [0] -> \sys1.uart1.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9556 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [1] -> \sys1.uart1.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9557 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [2] -> \sys1.uart1.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9558 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [3] -> \sys1.uart1.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9559 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [4] -> \sys1.uart1.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9560 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [5] -> \sys1.uart1.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9561 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [6] -> \sys1.uart1.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9562 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [7] -> \sys1.uart1.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9563 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [0] -> \sys1.uart1.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9564 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [1] -> \sys1.uart1.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9565 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [2] -> \sys1.uart1.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9566 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [3] -> \sys1.uart1.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9567 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [4] -> \sys1.uart1.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9568 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [5] -> \sys1.uart1.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9569 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [6] -> \sys1.uart1.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9570 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [7] -> \sys1.uart1.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9571 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [8] -> \sys1.uart1.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9572 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\ove[0:0] -> \sys1.uart1.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9573 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\dv[0:0] -> \sys1.uart1.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9774 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9775 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9776 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9777 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9778 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9779 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9780 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9781 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9782 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9783 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9784 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9785 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9812 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9813 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9814 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9815 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9816 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9817 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9818 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9819 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9820 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9836 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9837 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9838 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9839 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9840 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9841 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9842 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9843 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9844 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9845 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9846 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9847 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9848 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9849 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9850 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9851 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9852 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9853 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9854 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9855 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9856 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9857 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9858 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9859 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5582 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5583 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5584 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [2] -> \sys1.irqen [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5585 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [3] -> \sys1.irqen [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5586 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [4] -> \sys1.irqen [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5587 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [5] -> \sys1.irqen [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5588 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [6] -> \sys1.irqen [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$5589 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [7] -> \sys1.irqen [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6515 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6516 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6517 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6518 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6519 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6520 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6521 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6522 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6523 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6524 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6525 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6526 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6527 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6528 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6529 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6530 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6531 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6532 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6533 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6534 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6535 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6536 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6537 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6538 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6539 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6540 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6541 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6542 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6543 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6544 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFFE_NP_ for cells of type $_DFFE_NP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$1517.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1514.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1511.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1508.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1505.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1484.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1499.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1478.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1502.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1493.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1526.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1523.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1520.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1490.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1487.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1496.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1457.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1481.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1463.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1460.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$2120.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$2167.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$2494.$auto$alumacc.cc:485:replace_alu$3013.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9859 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6083 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9505 (SB_DFFE): \sys1.uart1.divider [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5582 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6374 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4492 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4524 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4703 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4543 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5476 (SB_DFFE): \sys1.GPOUT [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4461 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4735 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4767 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4799 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5378 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9573 (SB_DFFE): \sys1.uart1.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4460 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5055 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5023 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4927 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4895 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4863 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4831 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4462 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4463 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4464 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4465 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4466 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4467 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4468 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4469 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4470 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4471 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4472 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4473 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4474 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4475 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4476 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4477 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4478 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4479 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4480 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4481 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4482 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4483 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4484 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4485 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4486 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4487 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4488 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4489 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4490 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4491 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4493 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4494 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4495 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4496 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4497 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4498 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4499 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4500 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4501 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4502 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4503 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4504 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4505 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4506 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4507 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4508 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4509 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4510 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4511 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4512 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4513 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4514 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4515 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4516 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4517 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4518 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4519 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4520 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4521 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4522 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4523 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4525 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4526 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4527 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4528 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4529 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4530 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4531 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4532 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4533 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4534 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4535 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4536 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4537 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4538 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4539 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4540 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4541 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4542 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4544 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4545 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4546 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4547 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4548 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4549 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4550 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4551 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4552 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4553 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4554 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4555 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4704 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4705 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4706 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4707 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4708 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4709 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4710 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4711 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4712 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4713 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4714 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4715 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4716 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4717 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4718 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4719 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4720 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4721 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4722 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4723 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4724 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4725 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4726 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4727 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4728 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4729 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4730 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4731 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4732 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4733 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4734 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4736 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4737 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4738 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4739 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4740 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4741 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4742 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4743 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4744 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4745 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4746 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4747 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4748 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4749 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4750 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4751 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4752 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4753 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4754 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4755 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4756 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4757 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4758 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4759 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4760 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4761 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4762 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4763 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4764 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4765 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4766 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4768 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4769 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4770 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4771 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4772 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4773 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4774 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4775 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4776 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4777 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4778 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4779 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4780 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4781 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4782 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4783 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4784 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4785 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4786 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4787 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4788 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4789 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4790 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4791 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4792 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4793 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4794 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4795 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4796 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4797 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4798 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4800 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4801 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4802 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4803 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4804 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4805 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4806 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4807 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4808 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4809 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4810 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4811 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4812 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4813 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4814 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4815 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4816 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4817 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4818 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4819 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4820 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4821 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4822 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4823 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4824 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4825 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4826 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4827 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4828 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4829 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4830 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4832 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4833 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4834 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4835 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4836 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4837 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4838 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4839 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4840 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4841 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4842 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4843 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4844 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4845 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4846 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4847 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4848 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4849 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4850 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4851 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4852 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4853 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4854 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4855 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4856 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4857 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4858 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4859 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4860 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4861 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4862 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4864 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4865 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4866 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4867 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4868 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4869 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4870 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4871 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4872 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4873 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4874 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4875 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4876 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4877 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4878 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4879 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4880 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4881 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4882 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4883 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4884 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4885 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4886 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4887 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4888 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4889 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4890 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4891 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4892 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4893 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4894 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4896 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4897 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4898 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4899 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4900 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4901 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4902 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4903 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4904 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4905 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4906 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4907 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4908 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4909 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4910 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4911 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4912 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4913 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4914 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4915 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4916 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4917 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4918 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4919 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4920 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4921 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4922 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4923 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4924 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4925 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4926 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4928 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4929 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4930 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4931 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4932 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4933 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4934 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4935 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4936 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4937 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4938 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4939 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4940 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4941 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4942 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4943 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4944 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4945 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4946 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4947 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4948 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4949 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4950 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4951 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4952 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4953 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4954 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4955 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4956 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4957 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4958 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5024 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5025 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5026 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5027 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5028 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5029 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5030 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5031 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5032 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5033 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5034 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5035 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5036 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5037 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5038 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5039 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5040 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5041 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5042 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5043 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5044 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5045 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5046 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5047 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5048 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5049 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5050 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5051 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5052 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5053 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5054 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5056 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5057 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5058 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5059 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5060 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5061 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5062 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5063 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5064 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5065 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5066 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5067 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5068 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5069 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5070 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5071 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5072 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5073 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5074 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5075 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5076 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5077 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5078 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5079 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5080 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5081 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5082 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5083 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5084 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5085 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5086 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5375 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5376 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5377 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5379 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5380 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5381 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5382 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5383 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5384 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5385 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5386 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5387 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5388 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5389 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5390 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5391 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5392 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5393 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5394 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5395 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5396 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5477 (SB_DFFE): \sys1.GPOUT [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5478 (SB_DFFE): \sys1.GPOUT [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5479 (SB_DFFE): \sys1.GPOUT [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5480 (SB_DFFE): \sys1.GPOUT [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5481 (SB_DFFE): \sys1.GPOUT [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5482 (SB_DFFE): \sys1.GPOUT [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5484 (SB_DFFE): \sys1.TMF1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5485 (SB_DFFE): \sys1.TMF0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5486 (SB_DFFE): \sys1.TMF = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5483 (SB_DFFE): \sys1.GPOUT [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5488 (SB_DFFE): \sys1.TMR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5489 (SB_DFFE): \sys1.TMR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5490 (SB_DFFE): \sys1.TMR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5491 (SB_DFFE): \sys1.TMR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5492 (SB_DFFE): \sys1.TMR [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5493 (SB_DFFE): \sys1.TMR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5494 (SB_DFFE): \sys1.TMR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5495 (SB_DFFE): \sys1.TMR [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5496 (SB_DFFE): \sys1.TMR [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5497 (SB_DFFE): \sys1.TMR [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5498 (SB_DFFE): \sys1.TMR [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5499 (SB_DFFE): \sys1.TMR [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5500 (SB_DFFE): \sys1.TMR [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5501 (SB_DFFE): \sys1.TMR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5502 (SB_DFFE): \sys1.TMR [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5503 (SB_DFFE): \sys1.TMR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5504 (SB_DFFE): \sys1.TMR [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5505 (SB_DFFE): \sys1.TMR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5506 (SB_DFFE): \sys1.TMR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5507 (SB_DFFE): \sys1.TMR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5508 (SB_DFFE): \sys1.TMR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5509 (SB_DFFE): \sys1.TMR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5510 (SB_DFFE): \sys1.TMR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5511 (SB_DFFE): \sys1.TMR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5512 (SB_DFFE): \sys1.TMR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5513 (SB_DFFE): \sys1.TMR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5514 (SB_DFFE): \sys1.TMR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5515 (SB_DFFE): \sys1.TMR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5516 (SB_DFFE): \sys1.TMR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5517 (SB_DFFE): \sys1.TMR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5487 (SB_DFFE): \sys1.TMR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5518 (SB_DFFE): \sys1.TMR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5520 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5521 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5522 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5523 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5524 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5525 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5526 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5527 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5528 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5529 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5530 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5531 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5532 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5533 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5534 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5535 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5536 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5537 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5538 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5539 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5540 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5541 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5542 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5543 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5544 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5545 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5546 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5547 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5548 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5549 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5519 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5550 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5551 (SB_DFFE): \sys1.spi_ss [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5552 (SB_DFFE): \sys1.spi_ss [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5554 (SB_DFFE): \sys1.spi_ctrl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5555 (SB_DFFE): \sys1.spi_ctrl [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5556 (SB_DFFE): \sys1.spi_ctrl [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5557 (SB_DFFE): \sys1.spi_ctrl [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5558 (SB_DFFE): \sys1.spi_ctrl [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5559 (SB_DFFE): \sys1.spi_ctrl [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5560 (SB_DFFE): \sys1.spi_ctrl [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5561 (SB_DFFE): \sys1.spi_ctrl [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5562 (SB_DFFE): \sys1.spi_ctrl [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5563 (SB_DFFE): \sys1.spi_ctrl [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5564 (SB_DFFE): \sys1.spi_ctrl [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5565 (SB_DFFE): \sys1.spi_ctrl [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5553 (SB_DFFE): \sys1.spi_ctrl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5567 (SB_DFFE): \sys1.spiLoRA_ss = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5566 (SB_DFFE): \sys1.spi_ctrl [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5569 (SB_DFFE): \sys1.spiLoRA_ctrl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5570 (SB_DFFE): \sys1.spiLoRA_ctrl [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5571 (SB_DFFE): \sys1.spiLoRA_ctrl [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5572 (SB_DFFE): \sys1.spiLoRA_ctrl [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5573 (SB_DFFE): \sys1.spiLoRA_ctrl [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5574 (SB_DFFE): \sys1.spiLoRA_ctrl [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5575 (SB_DFFE): \sys1.spiLoRA_ctrl [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5576 (SB_DFFE): \sys1.spiLoRA_ctrl [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5577 (SB_DFFE): \sys1.spiLoRA_ctrl [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5578 (SB_DFFE): \sys1.spiLoRA_ctrl [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5579 (SB_DFFE): \sys1.spiLoRA_ctrl [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5580 (SB_DFFE): \sys1.spiLoRA_ctrl [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5589 (SB_DFFER): \sys1.irqen [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6084 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6085 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6086 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6087 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6088 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6089 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6090 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6091 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6092 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6093 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6094 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6095 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6096 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6097 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6098 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6099 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6100 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6101 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6102 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6103 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6104 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6105 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6106 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6107 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6108 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6109 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6110 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6111 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6112 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6113 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6114 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6375 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6376 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6377 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6378 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6379 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6380 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6381 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6382 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6383 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6384 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6385 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6386 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6387 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6388 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6389 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6390 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6391 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6392 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6393 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6394 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6395 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6396 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6397 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6398 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6399 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6400 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6401 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6402 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6403 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6404 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6452 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6405 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6576 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8643 (SB_DFF): \sys1.spiLoRA.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8644 (SB_DFF): \sys1.spiLoRA.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8645 (SB_DFF): \sys1.spiLoRA.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8646 (SB_DFF): \sys1.spiLoRA.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8647 (SB_DFF): \sys1.spiLoRA.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8648 (SB_DFF): \sys1.spiLoRA.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8642 (SB_DFF): \sys1.spiLoRA.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8650 (SB_DFFE): \sys1.spiLoRA.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8649 (SB_DFF): \sys1.spiLoRA.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8652 (SB_DFFE): \sys1.spiLoRA.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8653 (SB_DFFE): \sys1.spiLoRA.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8654 (SB_DFFE): \sys1.spiLoRA.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8655 (SB_DFFE): \sys1.spiLoRA.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8651 (SB_DFFE): \sys1.spiLoRA.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8657 (SB_DFF): \sys1.spiLoRA.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8656 (SB_DFFE): \sys1.spiLoRA.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9049 (SB_DFF): \sys1.spi.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9050 (SB_DFF): \sys1.spi.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9051 (SB_DFF): \sys1.spi.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9052 (SB_DFF): \sys1.spi.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9053 (SB_DFF): \sys1.spi.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9054 (SB_DFF): \sys1.spi.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9048 (SB_DFF): \sys1.spi.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9056 (SB_DFFE): \sys1.spi.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9055 (SB_DFF): \sys1.spi.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9058 (SB_DFFE): \sys1.spi.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9059 (SB_DFFE): \sys1.spi.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9060 (SB_DFFE): \sys1.spi.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9061 (SB_DFFE): \sys1.spi.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9057 (SB_DFFE): \sys1.spi.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9063 (SB_DFF): \sys1.spi.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9062 (SB_DFFE): \sys1.spi.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9240 (SB_DFFE): \sys1.uart2.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9241 (SB_DFFE): \sys1.uart2.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9242 (SB_DFFE): \sys1.uart2.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9243 (SB_DFFE): \sys1.uart2.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9244 (SB_DFFE): \sys1.uart2.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9245 (SB_DFFE): \sys1.uart2.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9246 (SB_DFFE): \sys1.uart2.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9247 (SB_DFFE): \sys1.uart2.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9248 (SB_DFFE): \sys1.uart2.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9249 (SB_DFFE): \sys1.uart2.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9239 (SB_DFFE): \sys1.uart2.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9250 (SB_DFFE): \sys1.uart2.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9252 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9253 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9254 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9255 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9256 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9257 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9258 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9259 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9260 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9261 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9251 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9263 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9262 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9268 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9272 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9273 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9274 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9275 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9276 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9277 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9278 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9279 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9280 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9281 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9271 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9282 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9285 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9286 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9284 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9287 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9306 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9307 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9506 (SB_DFFE): \sys1.uart1.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9507 (SB_DFFE): \sys1.uart1.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9508 (SB_DFFE): \sys1.uart1.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9509 (SB_DFFE): \sys1.uart1.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9510 (SB_DFFE): \sys1.uart1.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9511 (SB_DFFE): \sys1.uart1.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9512 (SB_DFFE): \sys1.uart1.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9513 (SB_DFFE): \sys1.uart1.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9514 (SB_DFFE): \sys1.uart1.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9515 (SB_DFFE): \sys1.uart1.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9516 (SB_DFFE): \sys1.uart1.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9518 (SB_DFF): \sys1.uart1.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9519 (SB_DFF): \sys1.uart1.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9520 (SB_DFF): \sys1.uart1.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9521 (SB_DFF): \sys1.uart1.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9522 (SB_DFF): \sys1.uart1.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9523 (SB_DFF): \sys1.uart1.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9524 (SB_DFF): \sys1.uart1.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9525 (SB_DFF): \sys1.uart1.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9526 (SB_DFF): \sys1.uart1.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9527 (SB_DFF): \sys1.uart1.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9517 (SB_DFF): \sys1.uart1.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9529 (SB_DFF): \sys1.uart1.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9528 (SB_DFF): \sys1.uart1.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9534 (SB_DFFE): \sys1.uart1.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9538 (SB_DFF): \sys1.uart1.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9539 (SB_DFF): \sys1.uart1.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9540 (SB_DFF): \sys1.uart1.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9541 (SB_DFF): \sys1.uart1.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9542 (SB_DFF): \sys1.uart1.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9543 (SB_DFF): \sys1.uart1.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9544 (SB_DFF): \sys1.uart1.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9545 (SB_DFF): \sys1.uart1.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9546 (SB_DFF): \sys1.uart1.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9547 (SB_DFF): \sys1.uart1.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9537 (SB_DFF): \sys1.uart1.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9548 (SB_DFF): \sys1.uart1.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9551 (SB_DFFE): \sys1.uart1.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9552 (SB_DFFE): \sys1.uart1.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9550 (SB_DFFE): \sys1.uart1.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9553 (SB_DFFE): \sys1.uart1.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9572 (SB_DFFE): \sys1.uart1.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9775 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9776 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9777 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9778 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9779 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9780 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9781 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9782 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9783 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9784 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9774 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9785 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9787 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9788 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9789 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9790 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9791 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9792 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9793 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9794 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9795 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9796 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9786 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9798 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9797 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9804 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9805 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9806 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9807 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9808 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9809 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9810 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9803 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9811 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9820 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9821 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9822 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9824 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9825 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9826 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9827 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9828 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9829 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9830 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9831 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9832 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9833 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9823 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9834 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9837 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9838 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9836 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9839 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9858 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5568 (SB_DFFE): \sys1.spiLoRA_ctrl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5581 (SB_DFFE): \sys1.spiLoRA_ctrl [13] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5583 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5584 (SB_DFFER): \sys1.irqen [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5585 (SB_DFFER): \sys1.irqen [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5586 (SB_DFFER): \sys1.irqen [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5587 (SB_DFFER): \sys1.irqen [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$5588 (SB_DFFER): \sys1.irqen [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6575 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3403 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3369 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3368 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3402 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3372 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5476 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5446 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3527 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3371 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3373 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3529 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5477 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5478 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5479 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5480 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5481 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5482 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5939 (A=$techmap\sys1.$procmux$852_Y, B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5486 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5483 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5488 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5487 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5945 (A=$techmap\sys1.$procmux$839_Y [1], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5946 (A=$techmap\sys1.$procmux$839_Y [2], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5947 (A=$techmap\sys1.$procmux$839_Y [3], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5522 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5948 (A=$techmap\sys1.$procmux$839_Y [4], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5949 (A=$techmap\sys1.$procmux$839_Y [5], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5524 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5950 (A=$techmap\sys1.$procmux$839_Y [6], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5525 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5951 (A=$techmap\sys1.$procmux$839_Y [7], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5952 (A=$techmap\sys1.$procmux$839_Y [8], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5953 (A=$techmap\sys1.$procmux$839_Y [9], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5954 (A=$techmap\sys1.$procmux$839_Y [10], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5955 (A=$techmap\sys1.$procmux$839_Y [11], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5956 (A=$techmap\sys1.$procmux$839_Y [12], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5957 (A=$techmap\sys1.$procmux$839_Y [13], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5958 (A=$techmap\sys1.$procmux$839_Y [14], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5959 (A=$techmap\sys1.$procmux$839_Y [15], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5960 (A=$techmap\sys1.$procmux$839_Y [16], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5961 (A=$techmap\sys1.$procmux$839_Y [17], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5962 (A=$techmap\sys1.$procmux$839_Y [18], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5963 (A=$techmap\sys1.$procmux$839_Y [19], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5964 (A=$techmap\sys1.$procmux$839_Y [20], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5965 (A=$techmap\sys1.$procmux$839_Y [21], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5966 (A=$techmap\sys1.$procmux$839_Y [22], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5967 (A=$techmap\sys1.$procmux$839_Y [23], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5968 (A=$techmap\sys1.$procmux$839_Y [24], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5969 (A=$techmap\sys1.$procmux$839_Y [25], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5970 (A=$techmap\sys1.$procmux$839_Y [26], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5971 (A=$techmap\sys1.$procmux$839_Y [27], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5972 (A=$techmap\sys1.$procmux$839_Y [28], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5973 (A=$techmap\sys1.$procmux$839_Y [29], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5974 (A=$techmap\sys1.$procmux$839_Y [30], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5944 (A=$techmap\sys1.$procmux$839_Y [0], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5975 (A=$techmap\sys1.$procmux$839_Y [31], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$5550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5554 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5555 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5556 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5557 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5558 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5559 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5560 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5553 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5569 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5570 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5571 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5573 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5575 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3370 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8698 (A=$techmap\sys1.spiLoRA.$not$SPI.v:38$354_Y, B=1'0, S=\sys1.spiLoRA.wr) into $auto$simplemap.cc:420:simplemap_dff$8650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9104 (A=$techmap\sys1.spi.$not$SPI.v:38$354_Y, B=1'0, S=\sys1.spi.wr) into $auto$simplemap.cc:420:simplemap_dff$9056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9462 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9252 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9463 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9464 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9465 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9466 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9467 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9468 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9469 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9470 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9471 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9461 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9251 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9472 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9262 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9340 (A=\sys1.uart2.dv, B=1'0, S=\sys1.uart2.rd) into $auto$simplemap.cc:420:simplemap_dff$9306 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9725 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9518 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9726 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9727 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9728 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9729 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9522 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9730 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9731 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9524 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9732 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9525 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9733 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9734 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9724 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9735 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9606 (A=\sys1.uart1.dv, B=1'0, S=\sys1.uart1.rd) into $auto$simplemap.cc:420:simplemap_dff$9572 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9774 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10046 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10047 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10048 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10049 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10050 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10051 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10052 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10053 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10054 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10055 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10045 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10056 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9813 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9814 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9815 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8561 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9816 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8562 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9817 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8563 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9818 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9812 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8564 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9819 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9927 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$9858 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$5568 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 276 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 76 unused cells and 7654 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 4407 gates and 6097 wires to a netlist network with 1688 inputs and 746 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1272.
ABC: Participating nodes from both networks       =    2689.
ABC: Participating nodes from the first network   =    1284. (  46.72 % of nodes)
ABC: Participating nodes from the second network  =    1405. (  51.13 % of nodes)
ABC: Node pairs (any polarity)                    =    1282. (  46.65 % of names can be moved)
ABC: Node pairs (same polarity)                   =     903. (  32.86 % of names can be moved)
ABC: Total runtime =     0.30 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2747
ABC RESULTS:        internal signals:     3663
ABC RESULTS:           input signals:     1688
ABC RESULTS:          output signals:      746
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 240 unused cells and 2837 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3032
  1-LUT               94
  2-LUT              342
  3-LUT             1268
  4-LUT             1328
  with \SB_CARRY     258

Eliminating LUTs.
Number of LUTs:     3032
  1-LUT               94
  2-LUT              342
  3-LUT             1268
  4-LUT             1328
  with \SB_CARRY     258

Combining LUTs.
Number of LUTs:     2953
  1-LUT               63
  2-LUT              291
  3-LUT             1229
  4-LUT             1370
  with \SB_CARRY     258

Eliminated 0 LUTs.
Combined 79 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5959 unused wires.

2.47. Executing AUTONAME pass.
Renamed 63864 objects in module main (97 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               3139
   Number of wire bits:           6481
   Number of public wires:        3139
   Number of public wire bits:    6481
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4766
     SB_CARRY                      467
     SB_DFF                        145
     SB_DFFE                       896
     SB_DFFER                       38
     SB_DFFESR                     117
     SB_DFFNE                       16
     SB_DFFR                        33
     SB_DFFSR                       68
     SB_LUT4                      2953
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                32

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 12 unique messages, 27 total
End of script. Logfile hash: e4a96d14f1
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 28x opt_expr (0 sec), 1% 27x opt_clean (0 sec), ...
