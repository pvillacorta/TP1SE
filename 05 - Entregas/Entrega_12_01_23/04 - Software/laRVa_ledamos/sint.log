
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)


-- Parsing `main.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: main.v
Parsing Verilog input from `main.v' to AST representation.
Generating RTLIL representation for module `\laRVa'.
Warning: Replacing memory \PCreg with list of registers. See laRVa.v:292
laRVa.v:64: Warning: Identifier `\irqstart' is implicitly declared.
Generating RTLIL representation for module `\UART_CORE'.
Generating RTLIL representation for module `\SPI_master'.
Generating RTLIL representation for module `\SYSTEM'.
system.v:347: Warning: Identifier `\posedge_TMF' is implicitly declared.
Generating RTLIL representation for module `\ram32'.
Generating RTLIL representation for module `\pll'.
Generating RTLIL representation for module `\main'.
main.v:80: Warning: Identifier `\JY4' is implicitly declared.
main.v:116: Warning: Identifier `\XOE' is implicitly declared.
main.v:119: Warning: Identifier `\XD' is implicitly declared.
main.v:119: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:124: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:129: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:134: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:139: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:144: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:149: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:154: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:160: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:165: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:170: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:175: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:180: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:185: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:190: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
main.v:195: Warning: Range select out of bounds on signal `\XD': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -relut' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   2 design levels: main                
root of   1 design levels: pll                 
root of   0 design levels: ram32               
root of   1 design levels: SYSTEM              
root of   0 design levels: SPI_master          
root of   0 design levels: UART_CORE           
root of   0 design levels: laRVa               
Automatically selected main as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         \UART_CORE
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Parameter \BAUDBITS = 12

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\UART_CORE'.
Parameter \BAUDBITS = 12
Generating RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.
Parameter \BAUDBITS = 12
Found cached RTLIL representation for module `$paramod\UART_CORE\BAUDBITS=12'.

2.2.4. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll

2.2.5. Analyzing design hierarchy..
Top module:  \main
Used module:     \SYSTEM
Used module:         \SPI_master
Used module:         $paramod\UART_CORE\BAUDBITS=12
Used module:         \ram32
Used module:         \laRVa
Used module:     \pll
Removing unused module `\UART_CORE'.
Removed 1 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram32.$proc$system.v:604$617'.
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$system.v:530$554 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:349$448 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:269$437 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$system.v:229$420 in module SYSTEM.
Marked 1 switch rules as full_case in process $proc$SPI.v:58$362 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:47$358 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:38$352 in module SPI_master.
Marked 1 switch rules as full_case in process $proc$SPI.v:29$349 in module SPI_master.
Removed 1 dead cases from process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:276$250 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:314$239 in module laRVa.
Marked 2 switch rules as full_case in process $proc$laRVa.v:291$230 in module laRVa.
Marked 1 switch rules as full_case in process $proc$laRVa.v:62$45 in module laRVa.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 70 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\main.$proc$main.v:100$623'.
  Set init value: \cnt = 22'1111111111111111111111
Found init rule in `\SYSTEM.$proc$system.v:529$592'.
  Set init value: \irqen = 8'00000000
Found init rule in `\SYSTEM.$proc$system.v:481$590'.
  Set init value: \spiLoRA_ss = 1'1
Found init rule in `\SYSTEM.$proc$system.v:480$589'.
  Set init value: \spiLoRA_ctrl = 14'00000000000000
Found init rule in `\SYSTEM.$proc$system.v:438$588'.
  Set init value: \spi_ss = 2'11
Found init rule in `\SYSTEM.$proc$system.v:437$587'.
  Set init value: \spi_ctrl = 14'00000000000000
Found init rule in `\SYSTEM.$proc$system.v:329$586'.
  Set init value: \TMF1 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:328$585'.
  Set init value: \TMF0 = 1'0
Found init rule in `\SYSTEM.$proc$system.v:327$584'.
  Set init value: \TMF = 1'0
Found init rule in `\SYSTEM.$proc$system.v:326$583'.
  Set init value: \TMR = 180000
Found init rule in `\SYSTEM.$proc$system.v:325$582'.
  Set init value: \tcount = 0
Found init rule in `\SYSTEM.$proc$system.v:302$581'.
  Set init value: \GPOUT = 8'00000000
Found init rule in `\SPI_master.$proc$SPI.v:54$416'.
  Set init value: \sin = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:44$415'.
  Set init value: \bitcnt = 6'000000
Found init rule in `\SPI_master.$proc$SPI.v:36$414'.
  Set init value: \sck = 1'0
Found init rule in `\SPI_master.$proc$SPI.v:26$413'.
  Set init value: \divcnt = 8'00000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
  Set init value: \cbrx = 4'1111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
  Set init value: \ove = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
  Set init value: \dv = 1'0
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
  Set init value: \divrx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
  Set init value: \rrxd = 2'00
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
  Set init value: \divtx = 12'000000000000
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
  Set init value: \rdy = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
  Set init value: \shtx = 9'111111111
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
  Set init value: \thre = 1'1
Found init rule in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
  Set init value: \divider = 12'000000000000
Found init rule in `\laRVa.$proc$laRVa.v:310$302'.
  Set init value: \mmode = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:309$301'.
  Set init value: \q0 = 1'0
Found init rule in `\laRVa.$proc$laRVa.v:61$300'.
  Set init value: \opvalid = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\SYSTEM.$proc$system.v:530$554'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:314$239'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:291$230'.
Found async reset \reset in `\laRVa.$proc$laRVa.v:62$45'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\main.$proc$main.v:100$623'.
Creating decoders for process `\main.$proc$main.v:103$619'.
Creating decoders for process `\ram32.$proc$system.v:600$610'.
     1/1: $0\data_out[31:0]
Creating decoders for process `\ram32.$proc$system.v:593$597'.
     1/12: $0$memwr$\ram_array$system.v:594$593_EN[31:0]$600
     2/12: $0$memwr$\ram_array$system.v:594$593_DATA[31:0]$599
     3/12: $0$memwr$\ram_array$system.v:594$593_ADDR[10:0]$598
     4/12: $0$memwr$\ram_array$system.v:595$594_EN[31:0]$603
     5/12: $0$memwr$\ram_array$system.v:595$594_DATA[31:0]$602
     6/12: $0$memwr$\ram_array$system.v:595$594_ADDR[10:0]$601
     7/12: $0$memwr$\ram_array$system.v:596$595_EN[31:0]$606
     8/12: $0$memwr$\ram_array$system.v:596$595_DATA[31:0]$605
     9/12: $0$memwr$\ram_array$system.v:596$595_ADDR[10:0]$604
    10/12: $0$memwr$\ram_array$system.v:597$596_EN[31:0]$609
    11/12: $0$memwr$\ram_array$system.v:597$596_DATA[31:0]$608
    12/12: $0$memwr$\ram_array$system.v:597$596_ADDR[10:0]$607
Creating decoders for process `\SYSTEM.$proc$system.v:529$592'.
Creating decoders for process `\SYSTEM.$proc$system.v:482$591'.
Creating decoders for process `\SYSTEM.$proc$system.v:481$590'.
Creating decoders for process `\SYSTEM.$proc$system.v:480$589'.
Creating decoders for process `\SYSTEM.$proc$system.v:438$588'.
Creating decoders for process `\SYSTEM.$proc$system.v:437$587'.
Creating decoders for process `\SYSTEM.$proc$system.v:329$586'.
Creating decoders for process `\SYSTEM.$proc$system.v:328$585'.
Creating decoders for process `\SYSTEM.$proc$system.v:327$584'.
Creating decoders for process `\SYSTEM.$proc$system.v:326$583'.
Creating decoders for process `\SYSTEM.$proc$system.v:325$582'.
Creating decoders for process `\SYSTEM.$proc$system.v:302$581'.
Creating decoders for process `\SYSTEM.$proc$system.v:542$556'.
     1/3: $0$memwr$\irqvect$system.v:542$417_EN[29:0]$559
     2/3: $0$memwr$\irqvect$system.v:542$417_DATA[29:0]$558
     3/3: $0$memwr$\irqvect$system.v:542$417_ADDR[2:0]$557
Creating decoders for process `\SYSTEM.$proc$system.v:530$554'.
     1/1: $0\irqen[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:503$553'.
     1/2: $0\spiLoRA_ss[0:0]
     2/2: $0\spiLoRA_ctrl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:459$533'.
     1/2: $0\spi_ss[1:0]
     2/2: $0\spi_ctrl[13:0]
Creating decoders for process `\SYSTEM.$proc$system.v:349$448'.
     1/5: $0\tcount[31:0]
     2/5: $0\TMF1[0:0]
     3/5: $0\TMF0[0:0]
     4/5: $0\TMF[0:0]
     5/5: $0\TMR[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:307$440'.
     1/1: $0\GPOUT[7:0]
Creating decoders for process `\SYSTEM.$proc$system.v:269$437'.
     1/1: $0\iodo[31:0]
Creating decoders for process `\SYSTEM.$proc$system.v:229$420'.
     1/1: $0\cdi[31:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:54$416'.
Creating decoders for process `\SPI_master.$proc$SPI.v:44$415'.
Creating decoders for process `\SPI_master.$proc$SPI.v:36$414'.
Creating decoders for process `\SPI_master.$proc$SPI.v:26$413'.
Creating decoders for process `\SPI_master.$proc$SPI.v:58$362'.
     1/25: $0\shreg[31:0] [31]
     2/25: $0\shreg[31:0] [30]
     3/25: $0\shreg[31:0] [29]
     4/25: $0\shreg[31:0] [28]
     5/25: $0\shreg[31:0] [27]
     6/25: $0\shreg[31:0] [26]
     7/25: $0\shreg[31:0] [25]
     8/25: $0\shreg[31:0] [24]
     9/25: $0\shreg[31:0] [23]
    10/25: $0\shreg[31:0] [22]
    11/25: $0\shreg[31:0] [21]
    12/25: $0\shreg[31:0] [20]
    13/25: $0\shreg[31:0] [19]
    14/25: $0\shreg[31:0] [18]
    15/25: $0\shreg[31:0] [17]
    16/25: $0\shreg[31:0] [16]
    17/25: $0\shreg[31:0] [15]
    18/25: $0\shreg[31:0] [14]
    19/25: $0\shreg[31:0] [13]
    20/25: $0\shreg[31:0] [12]
    21/25: $0\shreg[31:0] [11]
    22/25: $0\shreg[31:0] [10]
    23/25: $0\shreg[31:0] [9]
    24/25: $0\shreg[31:0] [8]
    25/25: $0\shreg[31:0] [7:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:55$361'.
Creating decoders for process `\SPI_master.$proc$SPI.v:47$358'.
     1/1: $0\bitcnt[5:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:38$352'.
     1/1: $0\sck[0:0]
Creating decoders for process `\SPI_master.$proc$SPI.v:29$349'.
     1/1: $0\divcnt[7:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
     1/6: $0\stopb[0:0]
     2/6: $0\rbr[7:0]
     3/6: $0\cbrx[3:0]
     4/6: $0\shrx[8:0]
     5/6: $0\ove[0:0]
     6/6: $0\dv[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
     1/5: $0\rdy[0:0]
     2/5: $0\cntbit[3:0]
     3/5: $0\shtx[8:0]
     4/5: $0\thr[7:0]
     5/5: $0\thre[0:0]
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
Creating decoders for process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
     1/1: $0\divider[11:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:310$302'.
Creating decoders for process `\laRVa.$proc$laRVa.v:309$301'.
Creating decoders for process `\laRVa.$proc$laRVa.v:61$300'.
Creating decoders for process `\laRVa.$proc$laRVa.v:32$269'.
Creating decoders for process `\laRVa.$proc$laRVa.v:276$250'.
     1/1: $1$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA[29:0]$252
Creating decoders for process `\laRVa.$proc$laRVa.v:314$239'.
     1/2: $0\mmode[0:0]
     2/2: $0\q0[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:302$235'.
Creating decoders for process `\laRVa.$proc$laRVa.v:291$230'.
     1/2: $0\PCreg[1][29:0]
     2/2: $0\PCreg[0][29:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:69$51'.
Creating decoders for process `\laRVa.$proc$laRVa.v:62$45'.
     1/1: $0\opvalid[0:0]
Creating decoders for process `\laRVa.$proc$laRVa.v:47$39'.
     1/3: $0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
     2/3: $0$memwr$\regs$laRVa.v:48$32_DATA[31:0]$41
     3/3: $0$memwr$\regs$laRVa.v:48$32_ADDR[3:0]$40

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SYSTEM.\LoRA_RST' from process `\SYSTEM.$proc$system.v:482$591'.
No latch inferred for signal `\SYSTEM.\iodo' from process `\SYSTEM.$proc$system.v:269$437'.
No latch inferred for signal `\SYSTEM.\cdi' from process `\SYSTEM.$proc$system.v:229$420'.
No latch inferred for signal `\laRVa.\i' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$17_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$18_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$19_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$20_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$21_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$22_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$23_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$24_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$25_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$26_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$27_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$28_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$29_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$30_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_ADDR' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$memwr$\regs$laRVa.v:33$31_DATA' from process `\laRVa.$proc$laRVa.v:32$269'.
No latch inferred for signal `\laRVa.$mem2reg_rd$\PCreg$laRVa.v:277$16_DATA' from process `\laRVa.$proc$laRVa.v:276$250'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\main.\cnt' using process `\main.$proc$main.v:103$619'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `\ram32.\data_out' using process `\ram32.$proc$system.v:600$610'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:594$593_ADDR' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:594$593_DATA' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:594$593_EN' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:595$594_ADDR' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:595$594_DATA' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:595$594_EN' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:596$595_ADDR' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:596$595_DATA' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:596$595_EN' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$596_ADDR' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1091' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$596_DATA' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1092' with positive edge clock.
Creating register for signal `\ram32.$memwr$\ram_array$system.v:597$596_EN' using process `\ram32.$proc$system.v:593$597'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:542$417_ADDR' using process `\SYSTEM.$proc$system.v:542$556'.
  created $dff cell `$procdff$1094' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:542$417_DATA' using process `\SYSTEM.$proc$system.v:542$556'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `\SYSTEM.$memwr$\irqvect$system.v:542$417_EN' using process `\SYSTEM.$proc$system.v:542$556'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `\SYSTEM.\irqen' using process `\SYSTEM.$proc$system.v:530$554'.
  created $adff cell `$procdff$1097' with positive edge clock and positive level reset.
Creating register for signal `\SYSTEM.\spiLoRA_ctrl' using process `\SYSTEM.$proc$system.v:503$553'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `\SYSTEM.\spiLoRA_ss' using process `\SYSTEM.$proc$system.v:503$553'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `\SYSTEM.\spi_ctrl' using process `\SYSTEM.$proc$system.v:459$533'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `\SYSTEM.\spi_ss' using process `\SYSTEM.$proc$system.v:459$533'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `\SYSTEM.\tcount' using process `\SYSTEM.$proc$system.v:349$448'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `\SYSTEM.\TMR' using process `\SYSTEM.$proc$system.v:349$448'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF' using process `\SYSTEM.$proc$system.v:349$448'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF0' using process `\SYSTEM.$proc$system.v:349$448'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `\SYSTEM.\TMF1' using process `\SYSTEM.$proc$system.v:349$448'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `\SYSTEM.\GPOUT' using process `\SYSTEM.$proc$system.v:307$440'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `\SPI_master.\shreg' using process `\SPI_master.$proc$SPI.v:58$362'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `\SPI_master.\sin' using process `\SPI_master.$proc$SPI.v:55$361'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `\SPI_master.\bitcnt' using process `\SPI_master.$proc$SPI.v:47$358'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `\SPI_master.\sck' using process `\SPI_master.$proc$SPI.v:38$352'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `\SPI_master.\divcnt' using process `\SPI_master.$proc$SPI.v:29$349'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\dv' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\ove' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rbr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\stopb' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cbrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rxst0' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divrx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rrxd' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thre' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\thr' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\shtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\cntbit' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\rdy' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divtx' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `$paramod\UART_CORE\BAUDBITS=12.\divider' using process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\laRVa.\q0' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1129' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\mmode' using process `\laRVa.$proc$laRVa.v:314$239'.
  created $adff cell `$procdff$1130' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCci' using process `\laRVa.$proc$laRVa.v:302$235'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `\laRVa.\PCreg[0]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1132' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\PCreg[1]' using process `\laRVa.$proc$laRVa.v:291$230'.
  created $adff cell `$procdff$1133' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.\IR' using process `\laRVa.$proc$laRVa.v:69$51'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\laRVa.\opvalid' using process `\laRVa.$proc$laRVa.v:62$45'.
  created $adff cell `$procdff$1135' with positive edge clock and positive level reset.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_ADDR' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_DATA' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\laRVa.$memwr$\regs$laRVa.v:48$32_EN' using process `\laRVa.$proc$laRVa.v:47$39'.
  created $dff cell `$procdff$1138' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `main.$proc$main.v:100$623'.
Removing empty process `main.$proc$main.v:103$619'.
Found and cleaned up 1 empty switch in `\ram32.$proc$system.v:600$610'.
Removing empty process `ram32.$proc$system.v:600$610'.
Found and cleaned up 4 empty switches in `\ram32.$proc$system.v:593$597'.
Removing empty process `ram32.$proc$system.v:593$597'.
Removing empty process `SYSTEM.$proc$system.v:529$592'.
Removing empty process `SYSTEM.$proc$system.v:482$591'.
Removing empty process `SYSTEM.$proc$system.v:481$590'.
Removing empty process `SYSTEM.$proc$system.v:480$589'.
Removing empty process `SYSTEM.$proc$system.v:438$588'.
Removing empty process `SYSTEM.$proc$system.v:437$587'.
Removing empty process `SYSTEM.$proc$system.v:329$586'.
Removing empty process `SYSTEM.$proc$system.v:328$585'.
Removing empty process `SYSTEM.$proc$system.v:327$584'.
Removing empty process `SYSTEM.$proc$system.v:326$583'.
Removing empty process `SYSTEM.$proc$system.v:325$582'.
Removing empty process `SYSTEM.$proc$system.v:302$581'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:542$556'.
Removing empty process `SYSTEM.$proc$system.v:542$556'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:530$554'.
Removing empty process `SYSTEM.$proc$system.v:530$554'.
Found and cleaned up 2 empty switches in `\SYSTEM.$proc$system.v:503$553'.
Removing empty process `SYSTEM.$proc$system.v:503$553'.
Found and cleaned up 2 empty switches in `\SYSTEM.$proc$system.v:459$533'.
Removing empty process `SYSTEM.$proc$system.v:459$533'.
Found and cleaned up 3 empty switches in `\SYSTEM.$proc$system.v:349$448'.
Removing empty process `SYSTEM.$proc$system.v:349$448'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:307$440'.
Removing empty process `SYSTEM.$proc$system.v:307$440'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:269$437'.
Removing empty process `SYSTEM.$proc$system.v:269$437'.
Found and cleaned up 1 empty switch in `\SYSTEM.$proc$system.v:229$420'.
Removing empty process `SYSTEM.$proc$system.v:229$420'.
Removing empty process `SPI_master.$proc$SPI.v:54$416'.
Removing empty process `SPI_master.$proc$SPI.v:44$415'.
Removing empty process `SPI_master.$proc$SPI.v:36$414'.
Removing empty process `SPI_master.$proc$SPI.v:26$413'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:58$362'.
Removing empty process `SPI_master.$proc$SPI.v:55$361'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:47$358'.
Removing empty process `SPI_master.$proc$SPI.v:47$358'.
Found and cleaned up 2 empty switches in `\SPI_master.$proc$SPI.v:38$352'.
Removing empty process `SPI_master.$proc$SPI.v:38$352'.
Found and cleaned up 1 empty switch in `\SPI_master.$proc$SPI.v:29$349'.
Removing empty process `SPI_master.$proc$SPI.v:29$349'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:99$796'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:95$795'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:94$794'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:86$793'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:76$792'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:38$791'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:35$790'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:33$789'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:32$788'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:26$787'.
Found and cleaned up 4 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:104$779'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:92$773'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:79$767'.
Found and cleaned up 5 empty switches in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:44$760'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:41$754'.
Found and cleaned up 1 empty switch in `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
Removing empty process `$paramod\UART_CORE\BAUDBITS=12.$proc$uart.v:27$752'.
Removing empty process `laRVa.$proc$laRVa.v:310$302'.
Removing empty process `laRVa.$proc$laRVa.v:309$301'.
Removing empty process `laRVa.$proc$laRVa.v:61$300'.
Removing empty process `laRVa.$proc$laRVa.v:32$269'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:276$250'.
Removing empty process `laRVa.$proc$laRVa.v:314$239'.
Removing empty process `laRVa.$proc$laRVa.v:302$235'.
Found and cleaned up 2 empty switches in `\laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:291$230'.
Removing empty process `laRVa.$proc$laRVa.v:69$51'.
Removing empty process `laRVa.$proc$laRVa.v:62$45'.
Found and cleaned up 1 empty switch in `\laRVa.$proc$laRVa.v:47$39'.
Removing empty process `laRVa.$proc$laRVa.v:47$39'.
Cleaned up 38 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template pll for cells of type pll.
Using template SYSTEM for cells of type SYSTEM.
Using template laRVa for cells of type laRVa.
Using template SPI_master for cells of type SPI_master.
Using template $paramod\UART_CORE\BAUDBITS=12 for cells of type $paramod\UART_CORE\BAUDBITS=12.
Using template ram32 for cells of type ram32.
No more expansions possible.
Deleting now unused module pll.
Deleting now unused module ram32.
Deleting now unused module SYSTEM.
Deleting now unused module SPI_master.
Deleting now unused module $paramod\UART_CORE\BAUDBITS=12.
Deleting now unused module laRVa.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 34 unused cells and 639 unused wires.

2.9. Executing CHECK pass (checking for obvious problems).
checking module main..
Warning: Wire main.\TXD2 is used but has no driver.
Warning: Wire main.\TXD1 is used but has no driver.
Warning: Wire main.\FSS is used but has no driver.
Warning: Wire main.\sys1.uart2.rxd is used but has no driver.
Warning: Wire main.\sys1.uart1.rxd is used but has no driver.
found and reported 5 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 81 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$procmux$823:
      Old ports: A=30'000000000000000000000000000000, B=30'111111111111111111111111111111, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0]
      New connections: $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [29:1] = { $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] $techmap\sys1.$0$memwr$\irqvect$system.v:542$417_EN[29:0]$559 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$procmux$1074:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0]
      New connections: $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [31:1] = { $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] $techmap\sys1.cpu.$0$memwr$\regs$laRVa.v:48$32_EN[31:0]$42 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$799:
      Old ports: A=0, B=255, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0]
      New connections: $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [31:1] = { 24'000000000000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600 [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$805:
      Old ports: A=0, B=65280, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [31:9] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [7:0] } = { 16'0000000000000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$811:
      Old ports: A=0, B=16711680, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [31:17] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [15:0] } = { 8'00000000 $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\sys1.ram0.$procmux$817:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609
      New ports: A=1'0, B=1'1, Y=$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24]
      New connections: { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [31:25] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [23:0] } = { $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] $techmap\sys1.ram0.$0$memwr$\ram_array$system.v:597$596_EN[31:0]$609 [24] 24'000000000000000000000000 }
  Optimizing cells in module \main.
Performed a total of 6 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \sys1.uart2.shtx = 9'111111111 to constant driver in module main.
Promoting init spec \sys1.uart1.shtx = 9'111111111 to constant driver in module main.
Promoted 2 init specs to constant drivers.

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 81 unused wires.

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 (sys1.cpu.regs).
Removed top 28 address bits (of 32) from memory init port main.$techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 (sys1.cpu.regs).
Removed top 21 address bits (of 32) from memory init port main.$techmap\sys1.ram0.$meminit$\ram_array$system.v:608$612 (sys1.ram0.ram_array).
Removed top 31 bits (of 32) from port B of cell main.$sub$main.v:103$620 ($sub).
Removed top 9 bits (of 32) from port Y of cell main.$sub$main.v:103$620 ($sub).
Removed top 10 bits (of 32) from mux cell main.$ternary$main.v:103$622 ($mux).
Removed top 29 bits (of 30) from FF cell main.$techmap\sys1.$procdff$1096 ($dff).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.$procmux$881_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$876_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$875_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$874_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$873_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$872_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$871_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$870_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$869_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell main.$techmap\sys1.$procmux$868_CMP0 ($eq).
Removed cell main.$techmap\sys1.$procmux$827 ($mux).
Removed cell main.$techmap\sys1.$procmux$825 ($mux).
Removed cell main.$techmap\sys1.$ternary$system.v:564$569 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.$add$system.v:361$449 ($add).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:261$429 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.$eq$system.v:259$425 ($eq).
Removed top 31 bits (of 32) from FF cell main.$techmap\sys1.cpu.$procdff$1138 ($dff).
Removed cell main.$techmap\sys1.cpu.$procmux$1078 ($mux).
Removed cell main.$techmap\sys1.cpu.$procmux$1076 ($mux).
Removed top 2 bits (of 32) from port Y of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 2 bits (of 32) from port B of cell main.$techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225 ($mux).
Removed top 2 bits (of 4) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202 ($mux).
Removed top 27 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:217$186 ($mux).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:212$185 ($eq).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161 ($mux).
Removed top 31 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158 ($mux).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$118 ($eq).
Removed top 1 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:126$116 ($eq).
Removed top 2 bits (of 12) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$101 ($eq).
Removed top 2 bits (of 3) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:100$99 ($eq).
Removed top 1 bits (of 2) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:99$97 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:89$74 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:88$72 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:84$64 ($eq).
Removed top 5 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:83$62 ($eq).
Removed top 2 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:82$60 ($eq).
Removed top 1 bits (of 7) from port B of cell main.$techmap\sys1.cpu.$eq$laRVa.v:81$58 ($eq).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55 ($mux).
Removed top 28 bits (of 32) from mux cell main.$techmap\sys1.cpu.$ternary$laRVa.v:76$53 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$gt$SPI.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 25 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:85$409 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:84$407 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:83$405 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:82$403 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:81$401 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:80$399 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:79$397 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:78$395 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:77$393 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:76$391 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:75$389 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:74$387 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:73$385 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:72$383 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:71$381 ($gt).
Removed top 27 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:70$379 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:69$377 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:68$375 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:67$373 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:66$371 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:65$369 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:64$367 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:63$365 ($gt).
Removed top 28 bits (of 32) from port B of cell main.$techmap\sys1.spi.$gt$SPI.v:62$363 ($gt).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 26 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 24 bits (of 32) from port Y of cell main.$techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart2.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart2.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart1.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart1.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:92$777 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
Removed top 1 bits (of 12) from port B of cell main.$techmap\sys1.uart0.$eq$uart.v:89$771 ($eq).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$add$uart.v:63$764 ($add).
Removed top 28 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$add$uart.v:63$764 ($add).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$759 ($mux).
Removed top 20 bits (of 32) from mux cell main.$techmap\sys1.uart0.$ternary$uart.v:42$758 ($mux).
Removed top 31 bits (of 32) from port B of cell main.$techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
Removed top 20 bits (of 32) from port Y of cell main.$techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
Removed top 7 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1093 ($dff).
Removed top 8 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1090 ($dff).
Removed top 16 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1087 ($dff).
Removed top 24 bits (of 32) from FF cell main.$techmap\sys1.ram0.$procdff$1084 ($dff).
Removed cell main.$techmap\sys1.ram0.$procmux$821 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$819 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$815 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$813 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$809 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$807 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$803 ($mux).
Removed cell main.$techmap\sys1.ram0.$procmux$801 ($mux).
Removed top 1 bits (of 23) from port Y of cell main.$sub$main.v:103$620 ($sub).
Removed top 7 bits (of 24) from FF cell main.$techmap\sys1.ram0.$procdff$1090 ($dff).
Removed top 7 bits (of 16) from FF cell main.$techmap\sys1.ram0.$procdff$1087 ($dff).
Removed top 7 bits (of 8) from FF cell main.$techmap\sys1.ram0.$procdff$1084 ($dff).
Removed top 10 bits (of 32) from wire main.$sub$main.v:103$620_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:180$158_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:181$161_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:250$202_Y.
Removed top 31 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:287$225_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:77$55_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.cpu.$ternary$laRVa.v:78$57_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_DATA[31:0]$599.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:594$593_EN[31:0]$600.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_DATA[31:0]$602.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:595$594_EN[31:0]$603.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_DATA[31:0]$605.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$0$memwr$\ram_array$system.v:596$595_EN[31:0]$606.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:594$593_EN.
Removed top 16 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:595$594_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:596$595_ADDR.
Removed top 8 bits (of 32) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:596$595_EN.
Removed top 7 bits (of 11) from wire main.$techmap\sys1.ram0.$memwr$\ram_array$system.v:597$596_ADDR.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spi.$sub$SPI.v:49$360_Y.
Removed top 24 bits (of 32) from wire main.$techmap\sys1.spiLoRA.$sub$SPI.v:31$351_Y.
Removed top 26 bits (of 32) from wire main.$techmap\sys1.spiLoRA.$sub$SPI.v:49$360_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart0.$add$uart.v:63$764_Y.
Removed top 2 bits (of 4) from wire main.$techmap\sys1.uart0.$procmux$1024_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart0.$sub$uart.v:42$756_Y.
Removed top 28 bits (of 32) from wire main.$techmap\sys1.uart1.$add$uart.v:63$764_Y.
Removed top 20 bits (of 32) from wire main.$techmap\sys1.uart1.$sub$uart.v:42$756_Y.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs1.
Removed top 1 bits (of 5) from wire main.sys1.cpu.rs2.
Removed top 9 bits (of 32) from wire main.sys1.rx_spi.
Removed top 9 bits (of 32) from wire main.sys1.spi.dout.
Removed top 9 bits (of 32) from wire main.sys1.spi.shreg.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 55 unused wires.

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module main that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\sys1.ram0.$memrd$\ram_array$system.v:601$611 ($memrd):
    Found 1 activation_patterns using ctrl signal \sys1.iramcs.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y.
    Found 1 candidates: $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34
    Analyzing resource sharing with $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
      Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
      Forbidden control signals for this pair of cells: { \sys1.ram0.wrlanes \sys1.uart0.wrtx \sys1.uart0.wrbaud \sys1.uart0.rd $techmap\sys1.uart0.$and$uart.v:42$755_Y \sys1.uart1.wrtx \sys1.uart1.wrbaud \sys1.uart1.rd $techmap\sys1.uart1.$and$uart.v:42$755_Y \sys1.uart2.wrtx \sys1.uart2.wrbaud \sys1.uart2.rd $techmap\sys1.uart2.$and$uart.v:42$755_Y \sys1.spi.wr $techmap\sys1.spi.$or$SPI.v:30$350_Y \sys1.spiLoRA.wr $techmap\sys1.spiLoRA.$or$SPI.v:30$350_Y \sys1.cpu.jump \sys1.cpu.aluIn2 [4:0] \sys1.cpu.aluAdder [1:0] $techmap\sys1.cpu.$xor$laRVa.v:131$131_Y $techmap\sys1.cpu.$and$laRVa.v:283$219_Y \sys1.iramcs \sys1.rd_timer \sys1.wr_timer \sys1.spi_wr_ctrl \sys1.spi_wr_ss \sys1.spiLoRA_wr_ctrl \sys1.spiLoRA_wr_ss $techmap\sys1.$eq$system.v:261$429_Y $techmap\sys1.$eq$system.v:265$435_Y $techmap\sys1.$and$system.v:309$441_Y $techmap\sys1.$and$system.v:532$555_Y $techmap\sys1.$and$system.v:542$561_Y $techmap\sys1.$procmux$866_CMP $techmap\sys1.$procmux$867_CMP $techmap\sys1.$procmux$868_CMP $techmap\sys1.$procmux$869_CMP $techmap\sys1.$procmux$870_CMP $techmap\sys1.$procmux$871_CMP $techmap\sys1.$procmux$872_CMP $techmap\sys1.$procmux$873_CMP $techmap\sys1.$procmux$874_CMP $techmap\sys1.$procmux$875_CMP $techmap\sys1.$procmux$880_CMP $techmap\sys1.$procmux$876_CMP $techmap\sys1.$procmux$877_CMP $techmap\sys1.$procmux$881_CMP }
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37: $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y = 1'1
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 2'11
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.oplui \sys1.cpu.opauipc $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'001
      Activation pattern for cell $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34: { \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y } = 3'111
      Size of SAT problem: 19 cells, 235 variables, 612 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$ne$laRVa.v:45$36_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y } = 7'0000110
  Analyzing resource sharing options for $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd):
    Found 3 activation_patterns using ctrl signal { \sys1.cpu.oplui \sys1.cpu.opauipc \sys1.cpu.csrrw_mepc \sys1.cpu.mmode $techmap\sys1.cpu.$ne$laRVa.v:44$33_Y $techmap\sys1.cpu.$or$laRVa.v:218$188_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\sys1.$memrd$\irqvect$system.v:565$577 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\sys1.cpu.$and$laRVa.v:296$233_Y.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module main:
  creating $macc model for $sub$main.v:103$620 ($sub).
  creating $macc model for $techmap\sys1.$add$system.v:361$449 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$130 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:217$187 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:287$226 ($add).
  creating $macc model for $techmap\sys1.cpu.$add$laRVa.v:288$227 ($add).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spi.$sub$SPI.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:31$351 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:49$360 ($sub).
  creating $macc model for $techmap\sys1.spiLoRA.$sub$SPI.v:88$411 ($sub).
  creating $macc model for $techmap\sys1.uart0.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart0.$sub$uart.v:92$775 ($sub).
  creating $macc model for $techmap\sys1.uart1.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart1.$sub$uart.v:92$775 ($sub).
  creating $macc model for $techmap\sys1.uart2.$add$uart.v:63$764 ($add).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:110$783 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:42$756 ($sub).
  creating $macc model for $techmap\sys1.uart2.$sub$uart.v:92$775 ($sub).
  merging $macc model for $techmap\sys1.cpu.$add$laRVa.v:130$129 into $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart2.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart1.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart1.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:42$756.
  creating $alu model for $macc $techmap\sys1.uart0.$sub$uart.v:110$783.
  creating $alu model for $macc $techmap\sys1.uart0.$add$uart.v:63$764.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:88$411.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:49$360.
  creating $alu model for $macc $techmap\sys1.spiLoRA.$sub$SPI.v:31$351.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:88$411.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:49$360.
  creating $alu model for $macc $techmap\sys1.spi.$sub$SPI.v:31$351.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:288$227.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:287$226.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:217$187.
  creating $alu model for $macc $techmap\sys1.cpu.$add$laRVa.v:130$130.
  creating $alu model for $macc $techmap\sys1.uart2.$sub$uart.v:92$775.
  creating $alu model for $macc $techmap\sys1.$add$system.v:361$449.
  creating $alu model for $macc $sub$main.v:103$620.
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spi.$gt$SPI.v:85$409 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:62$363 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:63$365 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:64$367 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:65$369 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:66$371 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:67$373 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:68$375 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:69$377 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:70$379 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:71$381 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:72$383 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:73$385 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:74$387 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:75$389 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:76$391 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:77$393 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:78$395 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:79$397 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:80$399 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:81$401 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:82$403 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:83$405 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:84$407 ($gt): new $alu
  creating $alu model for $techmap\sys1.spiLoRA.$gt$SPI.v:85$409 ($gt): new $alu
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:85$409: $auto$alumacc.cc:485:replace_alu$1219
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:84$407: $auto$alumacc.cc:485:replace_alu$1224
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:83$405: $auto$alumacc.cc:485:replace_alu$1229
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:82$403: $auto$alumacc.cc:485:replace_alu$1234
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:81$401: $auto$alumacc.cc:485:replace_alu$1239
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:80$399: $auto$alumacc.cc:485:replace_alu$1244
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:79$397: $auto$alumacc.cc:485:replace_alu$1249
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:78$395: $auto$alumacc.cc:485:replace_alu$1254
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:77$393: $auto$alumacc.cc:485:replace_alu$1259
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:76$391: $auto$alumacc.cc:485:replace_alu$1264
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:75$389: $auto$alumacc.cc:485:replace_alu$1269
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:74$387: $auto$alumacc.cc:485:replace_alu$1274
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:73$385: $auto$alumacc.cc:485:replace_alu$1279
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:72$383: $auto$alumacc.cc:485:replace_alu$1284
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:71$381: $auto$alumacc.cc:485:replace_alu$1289
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:70$379: $auto$alumacc.cc:485:replace_alu$1294
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:69$377: $auto$alumacc.cc:485:replace_alu$1299
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:68$375: $auto$alumacc.cc:485:replace_alu$1304
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:67$373: $auto$alumacc.cc:485:replace_alu$1309
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:66$371: $auto$alumacc.cc:485:replace_alu$1314
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:65$369: $auto$alumacc.cc:485:replace_alu$1319
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:64$367: $auto$alumacc.cc:485:replace_alu$1324
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:63$365: $auto$alumacc.cc:485:replace_alu$1329
  creating $alu cell for $techmap\sys1.spiLoRA.$gt$SPI.v:62$363: $auto$alumacc.cc:485:replace_alu$1334
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:85$409: $auto$alumacc.cc:485:replace_alu$1339
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:84$407: $auto$alumacc.cc:485:replace_alu$1344
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:83$405: $auto$alumacc.cc:485:replace_alu$1349
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:82$403: $auto$alumacc.cc:485:replace_alu$1354
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:81$401: $auto$alumacc.cc:485:replace_alu$1359
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:80$399: $auto$alumacc.cc:485:replace_alu$1364
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:79$397: $auto$alumacc.cc:485:replace_alu$1369
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:78$395: $auto$alumacc.cc:485:replace_alu$1374
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:77$393: $auto$alumacc.cc:485:replace_alu$1379
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:76$391: $auto$alumacc.cc:485:replace_alu$1384
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:75$389: $auto$alumacc.cc:485:replace_alu$1389
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:74$387: $auto$alumacc.cc:485:replace_alu$1394
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:73$385: $auto$alumacc.cc:485:replace_alu$1399
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:72$383: $auto$alumacc.cc:485:replace_alu$1404
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:71$381: $auto$alumacc.cc:485:replace_alu$1409
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:70$379: $auto$alumacc.cc:485:replace_alu$1414
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:69$377: $auto$alumacc.cc:485:replace_alu$1419
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:68$375: $auto$alumacc.cc:485:replace_alu$1424
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:67$373: $auto$alumacc.cc:485:replace_alu$1429
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:66$371: $auto$alumacc.cc:485:replace_alu$1434
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:65$369: $auto$alumacc.cc:485:replace_alu$1439
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:64$367: $auto$alumacc.cc:485:replace_alu$1444
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:63$365: $auto$alumacc.cc:485:replace_alu$1449
  creating $alu cell for $techmap\sys1.spi.$gt$SPI.v:62$363: $auto$alumacc.cc:485:replace_alu$1454
  creating $alu cell for $sub$main.v:103$620: $auto$alumacc.cc:485:replace_alu$1459
  creating $alu cell for $techmap\sys1.$add$system.v:361$449: $auto$alumacc.cc:485:replace_alu$1462
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1465
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:130$130: $auto$alumacc.cc:485:replace_alu$1468
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:217$187: $auto$alumacc.cc:485:replace_alu$1471
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:287$226: $auto$alumacc.cc:485:replace_alu$1474
  creating $alu cell for $techmap\sys1.cpu.$add$laRVa.v:288$227: $auto$alumacc.cc:485:replace_alu$1477
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:31$351: $auto$alumacc.cc:485:replace_alu$1480
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:49$360: $auto$alumacc.cc:485:replace_alu$1483
  creating $alu cell for $techmap\sys1.spi.$sub$SPI.v:88$411: $auto$alumacc.cc:485:replace_alu$1486
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:31$351: $auto$alumacc.cc:485:replace_alu$1489
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:49$360: $auto$alumacc.cc:485:replace_alu$1492
  creating $alu cell for $techmap\sys1.spiLoRA.$sub$SPI.v:88$411: $auto$alumacc.cc:485:replace_alu$1495
  creating $alu cell for $techmap\sys1.uart0.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1498
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1501
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1504
  creating $alu cell for $techmap\sys1.uart0.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1507
  creating $alu cell for $techmap\sys1.uart1.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1510
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1513
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1516
  creating $alu cell for $techmap\sys1.uart1.$sub$uart.v:92$775: $auto$alumacc.cc:485:replace_alu$1519
  creating $alu cell for $techmap\sys1.uart2.$add$uart.v:63$764: $auto$alumacc.cc:485:replace_alu$1522
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:110$783: $auto$alumacc.cc:485:replace_alu$1525
  creating $alu cell for $techmap\sys1.uart2.$sub$uart.v:42$756: $auto$alumacc.cc:485:replace_alu$1528
  created 72 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 1 unused cells and 52 unused wires.

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\sys1.$memwr$\irqvect$system.v:542$580' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:594$613' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:595$614' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:596$615' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.ram0.$memwr$\ram_array$system.v:597$616' in module `\main': merged $dff to cell.
Checking cell `$techmap\sys1.$memrd$\irqvect$system.v:565$577' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37' in module `\main': no (compatible) $dff found.
Checking cell `$techmap\sys1.ram0.$memrd$\ram_array$system.v:601$611' in module `\main': merged data $dff with rd enable to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 28 unused cells and 29 unused wires.

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory main.sys1.ram0.ram_array by address:
  New clock domain: negedge \clk
    Port 0 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:594$613) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:595$614) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:596$615) has addr \sys1.cpu.addr [10:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\sys1.ram0.$memwr$\ram_array$system.v:597$616) has addr \sys1.cpu.addr [10:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\sys1.cpu.regs' in module `\main':
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$253 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$254 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$255 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$256 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$257 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$258 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$259 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$260 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$261 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$262 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$263 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$264 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$265 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$266 ($meminit)
  $techmap\sys1.cpu.$meminit$\regs$laRVa.v:33$267 ($meminit)
  $techmap\sys1.cpu.$memwr$\regs$laRVa.v:48$268 ($memwr)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37 ($memrd)
  $techmap\sys1.cpu.$memrd$\regs$laRVa.v:44$34 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.irqvect' in module `\main':
  $techmap\sys1.$memwr$\irqvect$system.v:542$580 ($memwr)
  $techmap\sys1.$memrd$\irqvect$system.v:565$577 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\sys1.ram0.ram_array' in module `\main':
  $techmap\sys1.ram0.$meminit$\ram_array$system.v:608$612 ($meminit)
  $techmap\sys1.ram0.$memwr$\ram_array$system.v:597$616 ($memwr)
  $techmap\sys1.ram0.$memrd$\ram_array$system.v:601$611 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing main.sys1.cpu.regs:
  Properties: ports=3 bits=480 rports=2 wports=1 dbits=32 abits=4 words=15
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=241 dwaste=0 bwaste=3856 waste=3856 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=497 dwaste=0 bwaste=3976 waste=3976 efficiency=2
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1009 dwaste=0 bwaste=4036 waste=4036 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2033 dwaste=0 bwaste=4066 waste=4066 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.irqvect:
  Properties: ports=2 bits=240 rports=1 wports=1 dbits=30 abits=3 words=8
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=248 dwaste=2 bwaste=3984 waste=3984 efficiency=2
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=504 dwaste=2 bwaste=4048 waste=4048 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1016 dwaste=2 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2040 dwaste=0 bwaste=4080 waste=4080 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing main.sys1.ram0.ram_array:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
    Selected rule 2.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain !\clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !\clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: sys1.ram0.ram_array.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: sys1.ram0.ram_array.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: sys1.ram0.ram_array.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: sys1.ram0.ram_array.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: sys1.ram0.ram_array.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: sys1.ram0.ram_array.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: sys1.ram0.ram_array.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: sys1.ram0.ram_array.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: sys1.ram0.ram_array.8.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: sys1.ram0.ram_array.9.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: sys1.ram0.ram_array.10.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: sys1.ram0.ram_array.11.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: sys1.ram0.ram_array.12.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: sys1.ram0.ram_array.13.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: sys1.ram0.ram_array.14.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: sys1.ram0.ram_array.15.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod$f93e392529d19d1a533b14f327cb659af897c411\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c17e4683bd194574ef7bc6efa660704103ba583b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d8c3e1154af9f256185da26a6fa44fc46ae0ff02\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$29817ab3399f40fcc64bc5feb18bdba9ecd47535\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3a52d2e38d3682949224ba24f05d8bcaf4208394\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e4fe12898377c3a5a6328aa8005556b2a156b277\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b193f9a8600dca7167e18891d7186981b0090c8b\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$939dd271e6b4d5eeb04d8316f76316ea4c5d0784\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f8b3c1c8fd4307c3d0d027e09d9311023023feea\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43f41cf2e6026e5de4d750f691f62614cd841c05\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a45a42c7ec4b97e6b8cf18379c63804dc5e41b58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e466ed1f3e40805331d9f9ab1f2c582f676d791\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cf65bfad484cd60b4b9ff8b7b750b9cc0f5d51d0\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2652dfb00531fe8ad8b3544692822e2055035166\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cd0145e5d7af6ec938d7ebb9363da7c1f1d6c595\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bf1fbe0ee7ba5936e6ad74d9ca000a2b5f133a2a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$72a58c1a6bbf83800bdf55461ab6a7b8067416f4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3986fa2de5c1de88113ed9f18ff2ac123fdeac56\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a358555c9e5a42c956d1aab601aa10f35bc0e700\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$afad566358013dcdd84b2cde309ae2440d5c6fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$85c039c0c30864ff5cc51a514aa57eb82f3cfd7f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c752fe598bb735aa918fa31e1601b5a4438a57af\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a78ddff81909dcf21efdeee403af81a53e1f350b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84d5cde021e30e0167e77428e32366febef5ae68\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e9c63b6edb049ea4d44e01845c6e1135a1e009a7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a8585776b6d144ace6b944995738c5ff95068ab4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cc9046da25a765416877ff33bddc725a3ff9b43a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$323124fc0a193934e2f604f093350f4895399ee7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8777093fa24e3b12efe51945e644d73b08e9e82d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0597e4e00822ab36a55a6b6cf4bdc686bc4c5f81\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1c47367636431629f56d1b2f12c2e5a535d65dc6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64d175b95196cd4418d6d5dfbd4ceeec143b106c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 395 unused wires.

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \sys1.cpu.regs in module \main:
  created 15 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 30 $mux cells.
  write interface: 15 write mux blocks.
Mapping memory cell \sys1.irqvect in module \main:
  created 8 $dff cells and 0 static cells of width 30.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 64 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:564$570:
      Old ports: A=3'111, B=3'110, Y=$techmap\sys1.$ternary$system.v:564$570_Y
      New ports: A=1'1, B=1'0, Y=$techmap\sys1.$ternary$system.v:564$570_Y [0]
      New connections: $techmap\sys1.$ternary$system.v:564$570_Y [2:1] = 2'11
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:121$109:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:20] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y
      New ports: A=12'000000000000, B=\sys1.cpu.IR [31:20], Y=$techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:121$109_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:122$111:
      Old ports: A=0, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y
      New ports: A=12'000000000000, B={ \sys1.cpu.IR [31:25] \sys1.cpu.IR [11:7] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [31:12] = { $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] $techmap\sys1.cpu.$ternary$laRVa.v:122$111_Y [11] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:123$114:
      Old ports: A=0, B={ \sys1.cpu.IR [31:12] 12'000000000000 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y
      New ports: A=20'00000000000000000000, B=\sys1.cpu.IR [31:12], Y=$techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [31:12]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:123$114_Y [11:0] = 12'000000000000
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:249$201:
      Old ports: A=4'0100, B=4'1000, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y
      New ports: A=2'01, B=2'10, Y=$techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [3:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:249$201_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:253$204:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:264$215:
      Old ports: A=0, B={ \sys1.cpu.PC 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PC, Y=$techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:264$215_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:265$217:
      Old ports: A=0, B={ \sys1.cpu.PCreg[0] 2'00 }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y
      New ports: A=30'000000000000000000000000000000, B=\sys1.cpu.PCreg[0], Y=$techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [31:2]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:265$217_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:283$220:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y
      New ports: A=11'00000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [7] \sys1.cpu.IR [30:25] \sys1.cpu.IR [11:9] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [29:11] = { $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] $techmap\sys1.cpu.$ternary$laRVa.v:283$220_Y [10] }
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:284$221:
      Old ports: A=30'000000000000000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y
      New ports: A=19'0000000000000000000, B={ \sys1.cpu.IR [31] \sys1.cpu.IR [19:12] \sys1.cpu.IR [20] \sys1.cpu.IR [30:22] }, Y=$techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18:0]
      New connections: $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [29:19] = { $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] $techmap\sys1.cpu.$ternary$laRVa.v:284$221_Y [18] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:564$571:
      Old ports: A=$techmap\sys1.$ternary$system.v:564$570_Y, B=3'101, Y=$techmap\sys1.$ternary$system.v:564$571_Y
      New ports: A={ 1'1 $techmap\sys1.$ternary$system.v:564$570_Y [0] }, B=2'01, Y=$techmap\sys1.$ternary$system.v:564$571_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:564$571_Y [2] = 1'1
    Consolidated identical input bits for $mux cell $techmap\sys1.cpu.$ternary$laRVa.v:254$205:
      Old ports: A=4'1111, B=$techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y, Y=$techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y
      New ports: A=2'11, B={ $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:253$204_Y [0] }, Y={ $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
      New connections: { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [3] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [1] } = { $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [2] $techmap\sys1.cpu.$ternary$laRVa.v:254$205_Y [0] }
  Optimizing cells in module \main.
    Consolidated identical input bits for $mux cell $techmap\sys1.$ternary$system.v:564$572:
      Old ports: A=$techmap\sys1.$ternary$system.v:564$571_Y, B=3'100, Y=$techmap\sys1.$ternary$system.v:564$572_Y
      New ports: A=$techmap\sys1.$ternary$system.v:564$571_Y [1:0], B=2'00, Y=$techmap\sys1.$ternary$system.v:564$572_Y [1:0]
      New connections: $techmap\sys1.$ternary$system.v:564$572_Y [2] = 1'1
  Optimizing cells in module \main.
Performed a total of 13 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 1 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 156 unused wires.

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 3 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 0 unused cells and 10 unused wires.

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \main..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \main.
Performed a total of 0 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.29.23. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=4:B_SIGNED=0:B_WIDTH=4:Y_WIDTH=4:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=13 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod$constmap:435871ccfaaa68ec92802bdcb13436347a619db3$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:f73fd5ba4618feeb57a105b7870e98bc61f18d66$paramod$350e5b3c77f745285d3c3768fb71530b920a3cff\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.

2.32. Executing ICE40_OPT pass (performing simple optimizations).

2.32.1. Running ICE40 specific optimizations.

2.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 951 cells.

2.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$8827 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 850 unused cells and 1444 unused wires.

2.32.6. Rerunning OPT passes. (Removed registers in this run.)

2.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1224.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1229.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1234.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1244.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1249.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1254.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1264.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1269.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1274.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1284.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1289.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1294.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1304.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1309.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1314.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1319.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1324.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1329.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1334.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1344.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1349.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1354.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1359.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1364.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1369.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1374.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1379.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1384.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1389.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1394.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1399.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1404.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1409.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1414.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1419.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1424.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1429.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1434.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1439.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1444.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1449.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1454.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1459.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1462.slice[0].carry: CO=\sys1.tcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1465.slice[0].carry: CO=\sys1.uart2.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1480.slice[0].carry: CO=\sys1.spi.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1483.slice[0].carry: CO=\sys1.spi.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1486.slice[0].carry: CO=\sys1.spi_ctrl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1486.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1486.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1489.slice[0].carry: CO=\sys1.spiLoRA.divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1492.slice[0].carry: CO=\sys1.spiLoRA.bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1495.slice[0].carry: CO=\sys1.spiLoRA_ctrl [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1495.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1495.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1498.slice[0].carry: CO=\sys1.uart0.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1501.slice[0].carry: CO=\sys1.uart0.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1504.slice[0].carry: CO=\sys1.uart0.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1507.slice[0].carry: CO=\sys1.uart0.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1510.slice[0].carry: CO=\sys1.uart1.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1513.slice[0].carry: CO=\sys1.uart1.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1516.slice[0].carry: CO=\sys1.uart1.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1519.slice[0].carry: CO=\sys1.uart1.divrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1522.slice[0].carry: CO=\sys1.uart2.cntbit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1525.slice[0].carry: CO=\sys1.uart2.cbrx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1528.slice[0].carry: CO=\sys1.uart2.divtx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1658.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry: CO=\sys1.cpu.rs2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:196:handle_cell$1705.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry: CO=\sys1.cpu.rs1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$techmap$auto$memory_map.cc:285:handle_cell$2032.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry: CO=\sys1.cpu.rd [0]

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 44 cells.

2.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$8828 ($_DFF_P_) from module main.
Replaced 1 DFF cells.

2.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 6 unused cells and 3 unused wires.

2.32.12. Rerunning OPT passes. (Removed registers in this run.)

2.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1229.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1249.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1269.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1289.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1309.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1319.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1329.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1349.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1359.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1369.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1379.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1389.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1399.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1409.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1419.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1429.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1439.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1449.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [1]

2.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 20 cells.

2.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 6 unused cells and 8 unused wires.

2.32.18. Rerunning OPT passes. (Removed registers in this run.)

2.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1239.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1279.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1319.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1359.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1379.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1399.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1419.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1439.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [2]

2.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 8 cells.

2.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 0 unused wires.

2.32.24. Rerunning OPT passes. (Removed registers in this run.)

2.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1259.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1379.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1419.slice[3].carry: CO=1'1

2.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 2 cells.

2.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 0 unused wires.

2.32.30. Rerunning OPT passes. (Removed registers in this run.)

2.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1299.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1419.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [4]

2.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 4 unused cells and 4 unused wires.

2.32.36. Rerunning OPT passes. (Removed registers in this run.)

2.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1219.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1219.BB [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) main.$auto$alumacc.cc:485:replace_alu$1339.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$1339.BB [5]

2.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 2 unused cells and 6 unused wires.

2.32.42. Rerunning OPT passes. (Removed registers in this run.)

2.32.43. Running ICE40 specific optimizations.

2.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.32.48. Finished OPT passes. (There is nothing left to do.)

2.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module main:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2299 to $_DFFE_PP_ for $0\cnt[21:0] [0] -> \cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2300 to $_DFFE_PP_ for $0\cnt[21:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2301 to $_DFFE_PP_ for $0\cnt[21:0] [2] -> \cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2302 to $_DFFE_PP_ for $0\cnt[21:0] [3] -> \cnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2303 to $_DFFE_PP_ for $0\cnt[21:0] [4] -> \cnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2304 to $_DFFE_PP_ for $0\cnt[21:0] [5] -> \cnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2305 to $_DFFE_PP_ for $0\cnt[21:0] [6] -> \cnt [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2306 to $_DFFE_PP_ for $0\cnt[21:0] [7] -> \cnt [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2307 to $_DFFE_PP_ for $0\cnt[21:0] [8] -> \cnt [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2308 to $_DFFE_PP_ for $0\cnt[21:0] [9] -> \cnt [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2309 to $_DFFE_PP_ for $0\cnt[21:0] [10] -> \cnt [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2310 to $_DFFE_PP_ for $0\cnt[21:0] [11] -> \cnt [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2311 to $_DFFE_PP_ for $0\cnt[21:0] [12] -> \cnt [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2312 to $_DFFE_PP_ for $0\cnt[21:0] [13] -> \cnt [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2313 to $_DFFE_PP_ for $0\cnt[21:0] [14] -> \cnt [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2314 to $_DFFE_PP_ for $0\cnt[21:0] [15] -> \cnt [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2315 to $_DFFE_PP_ for $0\cnt[21:0] [16] -> \cnt [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2316 to $_DFFE_PP_ for $0\cnt[21:0] [17] -> \cnt [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2317 to $_DFFE_PP_ for $0\cnt[21:0] [18] -> \cnt [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2318 to $_DFFE_PP_ for $0\cnt[21:0] [19] -> \cnt [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2319 to $_DFFE_PP_ for $0\cnt[21:0] [20] -> \cnt [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2320 to $_DFFE_PP_ for $0\cnt[21:0] [21] -> \cnt [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2396 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [0] -> \sys1.irqvect[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2397 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [1] -> \sys1.irqvect[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2398 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [2] -> \sys1.irqvect[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2399 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [3] -> \sys1.irqvect[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2400 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [4] -> \sys1.irqvect[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2401 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [5] -> \sys1.irqvect[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2402 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [6] -> \sys1.irqvect[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2403 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [7] -> \sys1.irqvect[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2404 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [8] -> \sys1.irqvect[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2405 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [9] -> \sys1.irqvect[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2406 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [10] -> \sys1.irqvect[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2407 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [11] -> \sys1.irqvect[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2408 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [12] -> \sys1.irqvect[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2409 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [13] -> \sys1.irqvect[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2410 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [14] -> \sys1.irqvect[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2411 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [15] -> \sys1.irqvect[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2412 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [16] -> \sys1.irqvect[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2413 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [17] -> \sys1.irqvect[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2414 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [18] -> \sys1.irqvect[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2415 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [19] -> \sys1.irqvect[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2416 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [20] -> \sys1.irqvect[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2417 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [21] -> \sys1.irqvect[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2418 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [22] -> \sys1.irqvect[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2419 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [23] -> \sys1.irqvect[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2420 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [24] -> \sys1.irqvect[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2421 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [25] -> \sys1.irqvect[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2422 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [26] -> \sys1.irqvect[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2423 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [27] -> \sys1.irqvect[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2424 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [28] -> \sys1.irqvect[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2425 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[0][0][0]$y$2102 [29] -> \sys1.irqvect[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2493 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [0] -> \sys1.cpu.regs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2494 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [1] -> \sys1.cpu.regs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2495 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [2] -> \sys1.cpu.regs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2496 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [3] -> \sys1.cpu.regs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2497 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [4] -> \sys1.cpu.regs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2498 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [5] -> \sys1.cpu.regs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2499 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [6] -> \sys1.cpu.regs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2500 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [7] -> \sys1.cpu.regs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2501 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [8] -> \sys1.cpu.regs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2502 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [9] -> \sys1.cpu.regs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2503 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [10] -> \sys1.cpu.regs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2504 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [11] -> \sys1.cpu.regs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2505 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [12] -> \sys1.cpu.regs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2506 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [13] -> \sys1.cpu.regs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2507 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [14] -> \sys1.cpu.regs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2508 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [15] -> \sys1.cpu.regs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2509 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [16] -> \sys1.cpu.regs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2510 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [17] -> \sys1.cpu.regs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2511 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [18] -> \sys1.cpu.regs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2512 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [19] -> \sys1.cpu.regs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2513 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [20] -> \sys1.cpu.regs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2514 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [21] -> \sys1.cpu.regs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2515 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [22] -> \sys1.cpu.regs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2516 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [23] -> \sys1.cpu.regs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2517 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [24] -> \sys1.cpu.regs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2518 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [25] -> \sys1.cpu.regs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2519 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [26] -> \sys1.cpu.regs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2520 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [27] -> \sys1.cpu.regs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2521 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [28] -> \sys1.cpu.regs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2522 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [29] -> \sys1.cpu.regs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2523 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [30] -> \sys1.cpu.regs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2524 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[1][0][0]$y$1791 [31] -> \sys1.cpu.regs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2555 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [0] -> \sys1.cpu.regs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2556 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [1] -> \sys1.cpu.regs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2557 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [2] -> \sys1.cpu.regs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2558 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [3] -> \sys1.cpu.regs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2559 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [4] -> \sys1.cpu.regs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2560 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [5] -> \sys1.cpu.regs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2561 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [6] -> \sys1.cpu.regs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2562 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [7] -> \sys1.cpu.regs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2563 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [8] -> \sys1.cpu.regs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2564 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [9] -> \sys1.cpu.regs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2565 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [10] -> \sys1.cpu.regs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2566 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [11] -> \sys1.cpu.regs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2567 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [12] -> \sys1.cpu.regs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2568 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [13] -> \sys1.cpu.regs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2569 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [14] -> \sys1.cpu.regs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2570 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [15] -> \sys1.cpu.regs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2571 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [16] -> \sys1.cpu.regs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2572 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [17] -> \sys1.cpu.regs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2573 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [18] -> \sys1.cpu.regs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2574 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [19] -> \sys1.cpu.regs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2575 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [20] -> \sys1.cpu.regs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2576 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [21] -> \sys1.cpu.regs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2577 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [22] -> \sys1.cpu.regs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2578 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [23] -> \sys1.cpu.regs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2579 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [24] -> \sys1.cpu.regs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2580 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [25] -> \sys1.cpu.regs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2581 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [26] -> \sys1.cpu.regs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2582 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [27] -> \sys1.cpu.regs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2583 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [28] -> \sys1.cpu.regs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2584 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [29] -> \sys1.cpu.regs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2585 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [30] -> \sys1.cpu.regs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2586 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[2][0][0]$y$1811 [31] -> \sys1.cpu.regs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2587 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [0] -> \sys1.cpu.regs[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2588 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [1] -> \sys1.cpu.regs[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2589 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [2] -> \sys1.cpu.regs[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2590 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [3] -> \sys1.cpu.regs[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2591 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [4] -> \sys1.cpu.regs[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2592 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [5] -> \sys1.cpu.regs[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2593 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [6] -> \sys1.cpu.regs[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2594 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [7] -> \sys1.cpu.regs[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2595 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [8] -> \sys1.cpu.regs[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2596 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [9] -> \sys1.cpu.regs[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2597 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [10] -> \sys1.cpu.regs[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2598 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [11] -> \sys1.cpu.regs[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2599 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [12] -> \sys1.cpu.regs[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2600 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [13] -> \sys1.cpu.regs[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2601 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [14] -> \sys1.cpu.regs[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2602 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [15] -> \sys1.cpu.regs[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2603 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [16] -> \sys1.cpu.regs[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2604 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [17] -> \sys1.cpu.regs[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2605 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [18] -> \sys1.cpu.regs[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2606 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [19] -> \sys1.cpu.regs[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2607 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [20] -> \sys1.cpu.regs[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2608 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [21] -> \sys1.cpu.regs[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2609 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [22] -> \sys1.cpu.regs[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2610 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [23] -> \sys1.cpu.regs[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2611 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [24] -> \sys1.cpu.regs[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2612 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [25] -> \sys1.cpu.regs[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2613 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [26] -> \sys1.cpu.regs[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2614 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [27] -> \sys1.cpu.regs[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2615 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [28] -> \sys1.cpu.regs[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2616 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [29] -> \sys1.cpu.regs[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2617 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [30] -> \sys1.cpu.regs[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2618 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[4][0][0]$y$1851 [31] -> \sys1.cpu.regs[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2619 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [0] -> \sys1.GPOUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2620 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [1] -> \sys1.GPOUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2621 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [2] -> \sys1.GPOUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2622 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [3] -> \sys1.GPOUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2623 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [4] -> \sys1.GPOUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2624 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [5] -> \sys1.GPOUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2625 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [6] -> \sys1.GPOUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2626 to $_DFFE_PP_ for $techmap\sys1.$0\GPOUT[7:0] [7] -> \sys1.GPOUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2627 to $_DFFE_PP_ for $techmap\sys1.$0\TMF1[0:0] -> \sys1.TMF1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2628 to $_DFFE_PP_ for $techmap\sys1.$0\TMF0[0:0] -> \sys1.TMF0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2629 to $_DFFE_PP_ for $techmap\sys1.$0\TMF[0:0] -> \sys1.TMF.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2630 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [0] -> \sys1.TMR [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2631 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [1] -> \sys1.TMR [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2632 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [2] -> \sys1.TMR [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2633 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [3] -> \sys1.TMR [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2634 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [4] -> \sys1.TMR [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2635 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [5] -> \sys1.TMR [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2636 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [6] -> \sys1.TMR [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2637 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [7] -> \sys1.TMR [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2638 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [8] -> \sys1.TMR [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2639 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [9] -> \sys1.TMR [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2640 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [10] -> \sys1.TMR [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2641 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [11] -> \sys1.TMR [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2642 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [12] -> \sys1.TMR [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2643 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [13] -> \sys1.TMR [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2644 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [14] -> \sys1.TMR [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2645 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [15] -> \sys1.TMR [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2646 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [16] -> \sys1.TMR [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2647 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [17] -> \sys1.TMR [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2648 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [18] -> \sys1.TMR [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2649 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [19] -> \sys1.TMR [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2650 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [20] -> \sys1.TMR [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2651 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [21] -> \sys1.TMR [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2652 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [22] -> \sys1.TMR [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2653 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [23] -> \sys1.TMR [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2654 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [24] -> \sys1.TMR [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2655 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [25] -> \sys1.TMR [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2656 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [26] -> \sys1.TMR [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2657 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [27] -> \sys1.TMR [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2658 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [28] -> \sys1.TMR [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2659 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [29] -> \sys1.TMR [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2660 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [30] -> \sys1.TMR [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2661 to $_DFFE_PP_ for $techmap\sys1.$0\TMR[31:0] [31] -> \sys1.TMR [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2694 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [0] -> \sys1.spi_ss [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2695 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ss[1:0] [1] -> \sys1.spi_ss [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2696 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [0] -> \sys1.spi_ctrl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2697 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [1] -> \sys1.spi_ctrl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2698 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [2] -> \sys1.spi_ctrl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2699 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [3] -> \sys1.spi_ctrl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2700 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [4] -> \sys1.spi_ctrl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2701 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [5] -> \sys1.spi_ctrl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2702 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [6] -> \sys1.spi_ctrl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2703 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [7] -> \sys1.spi_ctrl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2704 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [8] -> \sys1.spi_ctrl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2705 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [9] -> \sys1.spi_ctrl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2706 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [10] -> \sys1.spi_ctrl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2707 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [11] -> \sys1.spi_ctrl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2708 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [12] -> \sys1.spi_ctrl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2709 to $_DFFE_PP_ for $techmap\sys1.$0\spi_ctrl[13:0] [13] -> \sys1.spi_ctrl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2710 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ss[0:0] -> \sys1.spiLoRA_ss.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2711 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [0] -> \sys1.spiLoRA_ctrl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2712 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [1] -> \sys1.spiLoRA_ctrl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2713 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [2] -> \sys1.spiLoRA_ctrl [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2714 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [3] -> \sys1.spiLoRA_ctrl [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2715 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [4] -> \sys1.spiLoRA_ctrl [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2716 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [5] -> \sys1.spiLoRA_ctrl [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2717 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [6] -> \sys1.spiLoRA_ctrl [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2718 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [7] -> \sys1.spiLoRA_ctrl [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2719 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [8] -> \sys1.spiLoRA_ctrl [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2720 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [9] -> \sys1.spiLoRA_ctrl [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2721 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [10] -> \sys1.spiLoRA_ctrl [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2722 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [11] -> \sys1.spiLoRA_ctrl [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2723 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [12] -> \sys1.spiLoRA_ctrl [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2724 to $_DFFE_PP_ for $techmap\sys1.$0\spiLoRA_ctrl[13:0] [13] -> \sys1.spiLoRA_ctrl [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3202 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [0] -> \sys1.cpu.regs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3203 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [1] -> \sys1.cpu.regs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3204 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [2] -> \sys1.cpu.regs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3205 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [3] -> \sys1.cpu.regs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3206 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [4] -> \sys1.cpu.regs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3207 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [5] -> \sys1.cpu.regs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3208 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [6] -> \sys1.cpu.regs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3209 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [7] -> \sys1.cpu.regs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3210 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [8] -> \sys1.cpu.regs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3211 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [9] -> \sys1.cpu.regs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3212 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [10] -> \sys1.cpu.regs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3213 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [11] -> \sys1.cpu.regs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3214 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [12] -> \sys1.cpu.regs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3215 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [13] -> \sys1.cpu.regs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3216 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [14] -> \sys1.cpu.regs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3217 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [15] -> \sys1.cpu.regs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3218 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [16] -> \sys1.cpu.regs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3219 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [17] -> \sys1.cpu.regs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3220 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [18] -> \sys1.cpu.regs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3221 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [19] -> \sys1.cpu.regs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3222 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [20] -> \sys1.cpu.regs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3223 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [21] -> \sys1.cpu.regs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3224 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [22] -> \sys1.cpu.regs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3225 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [23] -> \sys1.cpu.regs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [24] -> \sys1.cpu.regs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3227 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [25] -> \sys1.cpu.regs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3228 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [26] -> \sys1.cpu.regs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3229 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [27] -> \sys1.cpu.regs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3230 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [28] -> \sys1.cpu.regs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3231 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [29] -> \sys1.cpu.regs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3232 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [30] -> \sys1.cpu.regs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3233 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[0][0][0]$y$1771 [31] -> \sys1.cpu.regs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3285 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [0] -> \sys1.irqvect[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3286 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [1] -> \sys1.irqvect[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3287 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [2] -> \sys1.irqvect[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3288 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [3] -> \sys1.irqvect[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3289 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [4] -> \sys1.irqvect[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3290 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [5] -> \sys1.irqvect[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3291 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [6] -> \sys1.irqvect[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3292 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [7] -> \sys1.irqvect[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3293 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [8] -> \sys1.irqvect[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3294 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [9] -> \sys1.irqvect[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3295 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [10] -> \sys1.irqvect[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3296 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [11] -> \sys1.irqvect[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3297 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [12] -> \sys1.irqvect[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3298 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [13] -> \sys1.irqvect[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3299 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [14] -> \sys1.irqvect[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3300 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [15] -> \sys1.irqvect[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3301 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [16] -> \sys1.irqvect[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3302 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [17] -> \sys1.irqvect[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3303 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [18] -> \sys1.irqvect[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3304 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [19] -> \sys1.irqvect[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3305 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [20] -> \sys1.irqvect[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3306 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [21] -> \sys1.irqvect[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3307 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [22] -> \sys1.irqvect[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3308 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [23] -> \sys1.irqvect[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3309 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [24] -> \sys1.irqvect[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3310 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [25] -> \sys1.irqvect[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3311 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [26] -> \sys1.irqvect[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3312 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [27] -> \sys1.irqvect[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3313 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [28] -> \sys1.irqvect[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3314 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[5][0][0]$y$2142 [29] -> \sys1.irqvect[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3583 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [0] -> \sys1.cpu.regs[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3584 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [1] -> \sys1.cpu.regs[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3585 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [2] -> \sys1.cpu.regs[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3586 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [3] -> \sys1.cpu.regs[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3587 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [4] -> \sys1.cpu.regs[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3588 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [5] -> \sys1.cpu.regs[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3589 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [6] -> \sys1.cpu.regs[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3590 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [7] -> \sys1.cpu.regs[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3591 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [8] -> \sys1.cpu.regs[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3592 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [9] -> \sys1.cpu.regs[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3593 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [10] -> \sys1.cpu.regs[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3594 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [11] -> \sys1.cpu.regs[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3595 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [12] -> \sys1.cpu.regs[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3596 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [13] -> \sys1.cpu.regs[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3597 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [14] -> \sys1.cpu.regs[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3598 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [15] -> \sys1.cpu.regs[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3599 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [16] -> \sys1.cpu.regs[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3600 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [17] -> \sys1.cpu.regs[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3601 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [18] -> \sys1.cpu.regs[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3602 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [19] -> \sys1.cpu.regs[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3603 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [20] -> \sys1.cpu.regs[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3604 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [21] -> \sys1.cpu.regs[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3605 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [22] -> \sys1.cpu.regs[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3606 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [23] -> \sys1.cpu.regs[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3607 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [24] -> \sys1.cpu.regs[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3608 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [25] -> \sys1.cpu.regs[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3609 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [26] -> \sys1.cpu.regs[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3610 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [27] -> \sys1.cpu.regs[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3611 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [28] -> \sys1.cpu.regs[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3612 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [29] -> \sys1.cpu.regs[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3613 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [30] -> \sys1.cpu.regs[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3614 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[5][0][0]$y$1871 [31] -> \sys1.cpu.regs[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3616 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [0] -> \sys1.cpu.regs[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3617 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [1] -> \sys1.cpu.regs[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3618 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [2] -> \sys1.cpu.regs[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3619 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [3] -> \sys1.cpu.regs[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3620 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [4] -> \sys1.cpu.regs[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3621 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [5] -> \sys1.cpu.regs[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3622 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [6] -> \sys1.cpu.regs[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3623 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [7] -> \sys1.cpu.regs[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3624 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [8] -> \sys1.cpu.regs[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3625 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [9] -> \sys1.cpu.regs[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3626 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [10] -> \sys1.cpu.regs[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3627 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [11] -> \sys1.cpu.regs[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3628 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [12] -> \sys1.cpu.regs[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3629 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [13] -> \sys1.cpu.regs[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3630 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [14] -> \sys1.cpu.regs[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3631 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [15] -> \sys1.cpu.regs[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3632 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [16] -> \sys1.cpu.regs[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3633 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [17] -> \sys1.cpu.regs[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3634 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [18] -> \sys1.cpu.regs[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3635 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [19] -> \sys1.cpu.regs[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3636 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [20] -> \sys1.cpu.regs[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3637 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [21] -> \sys1.cpu.regs[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3638 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [22] -> \sys1.cpu.regs[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3639 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [23] -> \sys1.cpu.regs[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3640 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [24] -> \sys1.cpu.regs[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3641 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [25] -> \sys1.cpu.regs[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3642 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [26] -> \sys1.cpu.regs[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3643 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [27] -> \sys1.cpu.regs[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3644 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [28] -> \sys1.cpu.regs[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3645 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [29] -> \sys1.cpu.regs[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3646 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [30] -> \sys1.cpu.regs[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3647 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[8][0][0]$y$1931 [31] -> \sys1.cpu.regs[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3649 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [0] -> \sys1.cpu.regs[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3650 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [1] -> \sys1.cpu.regs[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3651 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [2] -> \sys1.cpu.regs[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3652 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [3] -> \sys1.cpu.regs[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3653 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [4] -> \sys1.cpu.regs[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3654 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [5] -> \sys1.cpu.regs[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3655 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [6] -> \sys1.cpu.regs[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3656 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [7] -> \sys1.cpu.regs[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3657 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [8] -> \sys1.cpu.regs[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3658 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [9] -> \sys1.cpu.regs[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3659 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [10] -> \sys1.cpu.regs[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3660 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [11] -> \sys1.cpu.regs[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3661 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [12] -> \sys1.cpu.regs[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3662 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [13] -> \sys1.cpu.regs[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3663 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [14] -> \sys1.cpu.regs[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3664 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [15] -> \sys1.cpu.regs[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3665 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [16] -> \sys1.cpu.regs[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3666 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [17] -> \sys1.cpu.regs[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3667 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [18] -> \sys1.cpu.regs[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3668 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [19] -> \sys1.cpu.regs[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3669 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [20] -> \sys1.cpu.regs[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3670 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [21] -> \sys1.cpu.regs[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3671 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [22] -> \sys1.cpu.regs[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3672 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [23] -> \sys1.cpu.regs[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3673 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [24] -> \sys1.cpu.regs[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3674 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [25] -> \sys1.cpu.regs[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3675 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [26] -> \sys1.cpu.regs[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3676 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [27] -> \sys1.cpu.regs[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3677 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [28] -> \sys1.cpu.regs[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3678 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [29] -> \sys1.cpu.regs[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3679 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [30] -> \sys1.cpu.regs[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3680 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[9][0][0]$y$1951 [31] -> \sys1.cpu.regs[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3681 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [0] -> \sys1.cpu.regs[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3682 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [1] -> \sys1.cpu.regs[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3683 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [2] -> \sys1.cpu.regs[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3684 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [3] -> \sys1.cpu.regs[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3685 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [4] -> \sys1.cpu.regs[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3686 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [5] -> \sys1.cpu.regs[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3687 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [6] -> \sys1.cpu.regs[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3688 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [7] -> \sys1.cpu.regs[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3689 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [8] -> \sys1.cpu.regs[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3690 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [9] -> \sys1.cpu.regs[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3691 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [10] -> \sys1.cpu.regs[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3692 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [11] -> \sys1.cpu.regs[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3693 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [12] -> \sys1.cpu.regs[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3694 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [13] -> \sys1.cpu.regs[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3695 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [14] -> \sys1.cpu.regs[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3696 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [15] -> \sys1.cpu.regs[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3697 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [16] -> \sys1.cpu.regs[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3698 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [17] -> \sys1.cpu.regs[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [18] -> \sys1.cpu.regs[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [19] -> \sys1.cpu.regs[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3701 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [20] -> \sys1.cpu.regs[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3702 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [21] -> \sys1.cpu.regs[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3703 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [22] -> \sys1.cpu.regs[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3704 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [23] -> \sys1.cpu.regs[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3705 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [24] -> \sys1.cpu.regs[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3706 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [25] -> \sys1.cpu.regs[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3707 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [26] -> \sys1.cpu.regs[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3708 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [27] -> \sys1.cpu.regs[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3709 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [28] -> \sys1.cpu.regs[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3710 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [29] -> \sys1.cpu.regs[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3711 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [30] -> \sys1.cpu.regs[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3712 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[7][0][0]$y$1911 [31] -> \sys1.cpu.regs[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3713 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [0] -> \sys1.cpu.regs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3714 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [1] -> \sys1.cpu.regs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3715 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [2] -> \sys1.cpu.regs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3716 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [3] -> \sys1.cpu.regs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3717 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [4] -> \sys1.cpu.regs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3718 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [5] -> \sys1.cpu.regs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3719 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [6] -> \sys1.cpu.regs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3720 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [7] -> \sys1.cpu.regs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3721 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [8] -> \sys1.cpu.regs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3722 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [9] -> \sys1.cpu.regs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3723 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [10] -> \sys1.cpu.regs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3724 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [11] -> \sys1.cpu.regs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3725 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [12] -> \sys1.cpu.regs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3726 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [13] -> \sys1.cpu.regs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3727 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [14] -> \sys1.cpu.regs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3728 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [15] -> \sys1.cpu.regs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3729 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [16] -> \sys1.cpu.regs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3730 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [17] -> \sys1.cpu.regs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3731 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [18] -> \sys1.cpu.regs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3732 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [19] -> \sys1.cpu.regs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3733 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [20] -> \sys1.cpu.regs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3734 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [21] -> \sys1.cpu.regs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3735 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [22] -> \sys1.cpu.regs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3736 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [23] -> \sys1.cpu.regs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3737 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [24] -> \sys1.cpu.regs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3738 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [25] -> \sys1.cpu.regs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3739 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [26] -> \sys1.cpu.regs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3740 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [27] -> \sys1.cpu.regs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3741 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [28] -> \sys1.cpu.regs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3742 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [29] -> \sys1.cpu.regs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3743 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [30] -> \sys1.cpu.regs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3744 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[3][0][0]$y$1831 [31] -> \sys1.cpu.regs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3745 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [0] -> \sys1.cpu.regs[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3746 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [1] -> \sys1.cpu.regs[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3747 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [2] -> \sys1.cpu.regs[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3748 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [3] -> \sys1.cpu.regs[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3749 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [4] -> \sys1.cpu.regs[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3750 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [5] -> \sys1.cpu.regs[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3751 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [6] -> \sys1.cpu.regs[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3752 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [7] -> \sys1.cpu.regs[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3753 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [8] -> \sys1.cpu.regs[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3754 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [9] -> \sys1.cpu.regs[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3755 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [10] -> \sys1.cpu.regs[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3756 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [11] -> \sys1.cpu.regs[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3757 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [12] -> \sys1.cpu.regs[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3758 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [13] -> \sys1.cpu.regs[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3759 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [14] -> \sys1.cpu.regs[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3760 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [15] -> \sys1.cpu.regs[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3761 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [16] -> \sys1.cpu.regs[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3762 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [17] -> \sys1.cpu.regs[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3763 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [18] -> \sys1.cpu.regs[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3764 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [19] -> \sys1.cpu.regs[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3765 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [20] -> \sys1.cpu.regs[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3766 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [21] -> \sys1.cpu.regs[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3767 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [22] -> \sys1.cpu.regs[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3768 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [23] -> \sys1.cpu.regs[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3769 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [24] -> \sys1.cpu.regs[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3770 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [25] -> \sys1.cpu.regs[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3771 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [26] -> \sys1.cpu.regs[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3772 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [27] -> \sys1.cpu.regs[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3773 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [28] -> \sys1.cpu.regs[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3774 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [29] -> \sys1.cpu.regs[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3775 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [30] -> \sys1.cpu.regs[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3776 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[12][0][0]$y$2011 [31] -> \sys1.cpu.regs[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3777 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [0] -> \sys1.cpu.regs[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3778 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [1] -> \sys1.cpu.regs[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3779 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [2] -> \sys1.cpu.regs[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3780 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [3] -> \sys1.cpu.regs[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3781 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [4] -> \sys1.cpu.regs[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3782 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [5] -> \sys1.cpu.regs[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3783 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [6] -> \sys1.cpu.regs[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3784 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [7] -> \sys1.cpu.regs[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3785 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [8] -> \sys1.cpu.regs[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3786 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [9] -> \sys1.cpu.regs[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3787 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [10] -> \sys1.cpu.regs[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3788 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [11] -> \sys1.cpu.regs[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3789 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [12] -> \sys1.cpu.regs[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3790 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [13] -> \sys1.cpu.regs[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3791 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [14] -> \sys1.cpu.regs[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3792 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [15] -> \sys1.cpu.regs[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3793 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [16] -> \sys1.cpu.regs[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3794 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [17] -> \sys1.cpu.regs[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3795 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [18] -> \sys1.cpu.regs[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3796 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [19] -> \sys1.cpu.regs[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3797 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [20] -> \sys1.cpu.regs[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3798 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [21] -> \sys1.cpu.regs[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3799 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [22] -> \sys1.cpu.regs[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3800 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [23] -> \sys1.cpu.regs[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3801 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [24] -> \sys1.cpu.regs[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3802 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [25] -> \sys1.cpu.regs[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3803 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [26] -> \sys1.cpu.regs[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3804 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [27] -> \sys1.cpu.regs[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3805 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [28] -> \sys1.cpu.regs[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3806 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [29] -> \sys1.cpu.regs[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3807 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [30] -> \sys1.cpu.regs[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3808 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[11][0][0]$y$1991 [31] -> \sys1.cpu.regs[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3809 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [0] -> \sys1.cpu.regs[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3810 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [1] -> \sys1.cpu.regs[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3811 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [2] -> \sys1.cpu.regs[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3812 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [3] -> \sys1.cpu.regs[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3813 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [4] -> \sys1.cpu.regs[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3814 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [5] -> \sys1.cpu.regs[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3815 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [6] -> \sys1.cpu.regs[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3816 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [7] -> \sys1.cpu.regs[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3817 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [8] -> \sys1.cpu.regs[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3818 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [9] -> \sys1.cpu.regs[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3819 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [10] -> \sys1.cpu.regs[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3820 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [11] -> \sys1.cpu.regs[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3821 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [12] -> \sys1.cpu.regs[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3822 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [13] -> \sys1.cpu.regs[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3823 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [14] -> \sys1.cpu.regs[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3824 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [15] -> \sys1.cpu.regs[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3825 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [16] -> \sys1.cpu.regs[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3826 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [17] -> \sys1.cpu.regs[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3827 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [18] -> \sys1.cpu.regs[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3828 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [19] -> \sys1.cpu.regs[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3829 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [20] -> \sys1.cpu.regs[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3830 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [21] -> \sys1.cpu.regs[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3831 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [22] -> \sys1.cpu.regs[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3832 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [23] -> \sys1.cpu.regs[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3833 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [24] -> \sys1.cpu.regs[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3834 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [25] -> \sys1.cpu.regs[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3835 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [26] -> \sys1.cpu.regs[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3836 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [27] -> \sys1.cpu.regs[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3837 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [28] -> \sys1.cpu.regs[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3838 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [29] -> \sys1.cpu.regs[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3839 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [30] -> \sys1.cpu.regs[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3840 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[13][0][0]$y$2031 [31] -> \sys1.cpu.regs[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4037 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [0] -> \sys1.cpu.regs[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4038 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [1] -> \sys1.cpu.regs[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4039 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [2] -> \sys1.cpu.regs[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4040 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [3] -> \sys1.cpu.regs[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4041 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [4] -> \sys1.cpu.regs[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4042 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [5] -> \sys1.cpu.regs[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4043 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [6] -> \sys1.cpu.regs[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4044 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [7] -> \sys1.cpu.regs[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4045 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [8] -> \sys1.cpu.regs[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4046 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [9] -> \sys1.cpu.regs[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4047 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [10] -> \sys1.cpu.regs[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4048 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [11] -> \sys1.cpu.regs[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4049 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [12] -> \sys1.cpu.regs[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4050 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [13] -> \sys1.cpu.regs[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4051 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [14] -> \sys1.cpu.regs[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4052 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [15] -> \sys1.cpu.regs[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4053 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [16] -> \sys1.cpu.regs[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4054 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [17] -> \sys1.cpu.regs[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4055 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [18] -> \sys1.cpu.regs[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4056 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [19] -> \sys1.cpu.regs[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4057 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [20] -> \sys1.cpu.regs[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4058 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [21] -> \sys1.cpu.regs[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4059 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [22] -> \sys1.cpu.regs[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4060 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [23] -> \sys1.cpu.regs[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4061 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [24] -> \sys1.cpu.regs[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4062 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [25] -> \sys1.cpu.regs[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4063 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [26] -> \sys1.cpu.regs[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4064 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [27] -> \sys1.cpu.regs[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4065 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [28] -> \sys1.cpu.regs[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4066 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [29] -> \sys1.cpu.regs[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4067 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [30] -> \sys1.cpu.regs[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4068 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[14][0][0]$y$2051 [31] -> \sys1.cpu.regs[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4070 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [0] -> \sys1.cpu.regs[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4071 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [1] -> \sys1.cpu.regs[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4072 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [2] -> \sys1.cpu.regs[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4073 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [3] -> \sys1.cpu.regs[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4074 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [4] -> \sys1.cpu.regs[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4075 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [5] -> \sys1.cpu.regs[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4076 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [6] -> \sys1.cpu.regs[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4077 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [7] -> \sys1.cpu.regs[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4078 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [8] -> \sys1.cpu.regs[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4079 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [9] -> \sys1.cpu.regs[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4080 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [10] -> \sys1.cpu.regs[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4081 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [11] -> \sys1.cpu.regs[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4082 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [12] -> \sys1.cpu.regs[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4083 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [13] -> \sys1.cpu.regs[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4084 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [14] -> \sys1.cpu.regs[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4085 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [15] -> \sys1.cpu.regs[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4086 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [16] -> \sys1.cpu.regs[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4087 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [17] -> \sys1.cpu.regs[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4088 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [18] -> \sys1.cpu.regs[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4089 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [19] -> \sys1.cpu.regs[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4090 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [20] -> \sys1.cpu.regs[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4091 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [21] -> \sys1.cpu.regs[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4092 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [22] -> \sys1.cpu.regs[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4093 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [23] -> \sys1.cpu.regs[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4094 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [24] -> \sys1.cpu.regs[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4095 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [25] -> \sys1.cpu.regs[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4096 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [26] -> \sys1.cpu.regs[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4097 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [27] -> \sys1.cpu.regs[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4098 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [28] -> \sys1.cpu.regs[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4099 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [29] -> \sys1.cpu.regs[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4100 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [30] -> \sys1.cpu.regs[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4101 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[10][0][0]$y$1971 [31] -> \sys1.cpu.regs[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7085 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [0] -> \sys1.irqvect[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7086 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [1] -> \sys1.irqvect[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7087 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [2] -> \sys1.irqvect[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7088 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [3] -> \sys1.irqvect[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7089 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [4] -> \sys1.irqvect[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7090 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [5] -> \sys1.irqvect[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7091 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [6] -> \sys1.irqvect[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7092 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [7] -> \sys1.irqvect[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7093 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [8] -> \sys1.irqvect[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7094 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [9] -> \sys1.irqvect[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7095 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [10] -> \sys1.irqvect[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7096 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [11] -> \sys1.irqvect[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7097 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [12] -> \sys1.irqvect[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7098 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [13] -> \sys1.irqvect[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7099 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [14] -> \sys1.irqvect[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7100 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [15] -> \sys1.irqvect[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7101 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [16] -> \sys1.irqvect[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7102 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [17] -> \sys1.irqvect[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7103 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [18] -> \sys1.irqvect[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7104 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [19] -> \sys1.irqvect[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7105 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [20] -> \sys1.irqvect[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7106 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [21] -> \sys1.irqvect[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7107 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [22] -> \sys1.irqvect[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7108 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [23] -> \sys1.irqvect[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7109 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [24] -> \sys1.irqvect[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7110 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [25] -> \sys1.irqvect[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7111 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [26] -> \sys1.irqvect[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7112 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [27] -> \sys1.irqvect[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7113 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [28] -> \sys1.irqvect[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7114 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[1][0][0]$y$2110 [29] -> \sys1.irqvect[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7180 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [0] -> \sys1.irqvect[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7181 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [1] -> \sys1.irqvect[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7182 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [2] -> \sys1.irqvect[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7183 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [3] -> \sys1.irqvect[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7184 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [4] -> \sys1.irqvect[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7185 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [5] -> \sys1.irqvect[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7186 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [6] -> \sys1.irqvect[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7187 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [7] -> \sys1.irqvect[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7188 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [8] -> \sys1.irqvect[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7189 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [9] -> \sys1.irqvect[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7190 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [10] -> \sys1.irqvect[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7191 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [11] -> \sys1.irqvect[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7192 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [12] -> \sys1.irqvect[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7193 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [13] -> \sys1.irqvect[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7194 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [14] -> \sys1.irqvect[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7195 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [15] -> \sys1.irqvect[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7196 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [16] -> \sys1.irqvect[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7197 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [17] -> \sys1.irqvect[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7198 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [18] -> \sys1.irqvect[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7199 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [19] -> \sys1.irqvect[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7200 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [20] -> \sys1.irqvect[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7201 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [21] -> \sys1.irqvect[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7202 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [22] -> \sys1.irqvect[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7203 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [23] -> \sys1.irqvect[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7204 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [24] -> \sys1.irqvect[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7205 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [25] -> \sys1.irqvect[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7206 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [26] -> \sys1.irqvect[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7207 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [27] -> \sys1.irqvect[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7208 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [28] -> \sys1.irqvect[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7209 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[6][0][0]$y$2150 [29] -> \sys1.irqvect[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7314 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\sck[0:0] -> \sys1.spiLoRA.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7315 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [0] -> \sys1.spiLoRA.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7316 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [1] -> \sys1.spiLoRA.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7317 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [2] -> \sys1.spiLoRA.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7318 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [3] -> \sys1.spiLoRA.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7319 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [4] -> \sys1.spiLoRA.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7320 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\bitcnt[5:0] [5] -> \sys1.spiLoRA.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7322 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [0] -> \sys1.spiLoRA.shreg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7323 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [1] -> \sys1.spiLoRA.shreg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7324 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [2] -> \sys1.spiLoRA.shreg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7325 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [3] -> \sys1.spiLoRA.shreg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7326 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [4] -> \sys1.spiLoRA.shreg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7327 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [5] -> \sys1.spiLoRA.shreg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7328 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [6] -> \sys1.spiLoRA.shreg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7329 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [7] -> \sys1.spiLoRA.shreg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7330 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [8] -> \sys1.spiLoRA.shreg [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7331 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [9] -> \sys1.spiLoRA.shreg [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7332 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [10] -> \sys1.spiLoRA.shreg [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7333 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [11] -> \sys1.spiLoRA.shreg [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7334 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [12] -> \sys1.spiLoRA.shreg [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7335 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [13] -> \sys1.spiLoRA.shreg [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7336 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [14] -> \sys1.spiLoRA.shreg [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7337 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [15] -> \sys1.spiLoRA.shreg [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7338 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [16] -> \sys1.spiLoRA.shreg [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7339 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [17] -> \sys1.spiLoRA.shreg [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7340 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [18] -> \sys1.spiLoRA.shreg [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7341 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [19] -> \sys1.spiLoRA.shreg [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7342 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [20] -> \sys1.spiLoRA.shreg [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7343 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [21] -> \sys1.spiLoRA.shreg [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7344 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [22] -> \sys1.spiLoRA.shreg [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7345 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [23] -> \sys1.spiLoRA.shreg [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7346 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [24] -> \sys1.spiLoRA.shreg [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7347 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [25] -> \sys1.spiLoRA.shreg [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7348 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [26] -> \sys1.spiLoRA.shreg [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7349 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [27] -> \sys1.spiLoRA.shreg [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7350 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [28] -> \sys1.spiLoRA.shreg [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7351 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [29] -> \sys1.spiLoRA.shreg [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7352 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [30] -> \sys1.spiLoRA.shreg [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7353 to $_DFFE_PP_ for $techmap\sys1.spiLoRA.$0\shreg[31:0] [31] -> \sys1.spiLoRA.shreg [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7703 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [0] -> \sys1.irqvect[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7704 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [1] -> \sys1.irqvect[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7705 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [2] -> \sys1.irqvect[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7706 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [3] -> \sys1.irqvect[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7707 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [4] -> \sys1.irqvect[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7708 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [5] -> \sys1.irqvect[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7709 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [6] -> \sys1.irqvect[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7710 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [7] -> \sys1.irqvect[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7711 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [8] -> \sys1.irqvect[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7712 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [9] -> \sys1.irqvect[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7713 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [10] -> \sys1.irqvect[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7714 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [11] -> \sys1.irqvect[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7715 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [12] -> \sys1.irqvect[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7716 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [13] -> \sys1.irqvect[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7717 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [14] -> \sys1.irqvect[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7718 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [15] -> \sys1.irqvect[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7719 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [16] -> \sys1.irqvect[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7720 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [17] -> \sys1.irqvect[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7721 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [18] -> \sys1.irqvect[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7722 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [19] -> \sys1.irqvect[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7723 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [20] -> \sys1.irqvect[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7724 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [21] -> \sys1.irqvect[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7725 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [22] -> \sys1.irqvect[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7726 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [23] -> \sys1.irqvect[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7727 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [24] -> \sys1.irqvect[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7728 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [25] -> \sys1.irqvect[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7729 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [26] -> \sys1.irqvect[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7730 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [27] -> \sys1.irqvect[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7731 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [28] -> \sys1.irqvect[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7732 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[2][0][0]$y$2120 [29] -> \sys1.irqvect[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7915 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [0] -> \sys1.irqvect[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7916 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [1] -> \sys1.irqvect[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7917 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [2] -> \sys1.irqvect[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7918 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [3] -> \sys1.irqvect[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7919 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [4] -> \sys1.irqvect[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7920 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [5] -> \sys1.irqvect[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7921 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [6] -> \sys1.irqvect[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7922 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [7] -> \sys1.irqvect[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7923 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [8] -> \sys1.irqvect[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7924 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [9] -> \sys1.irqvect[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7925 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [10] -> \sys1.irqvect[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7926 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [11] -> \sys1.irqvect[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7927 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [12] -> \sys1.irqvect[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7928 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [13] -> \sys1.irqvect[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7929 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [14] -> \sys1.irqvect[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7930 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [15] -> \sys1.irqvect[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7931 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [16] -> \sys1.irqvect[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7932 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [17] -> \sys1.irqvect[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7933 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [18] -> \sys1.irqvect[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7934 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [19] -> \sys1.irqvect[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7935 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [20] -> \sys1.irqvect[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7936 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [21] -> \sys1.irqvect[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7937 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [22] -> \sys1.irqvect[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7938 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [23] -> \sys1.irqvect[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7939 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [24] -> \sys1.irqvect[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7940 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [25] -> \sys1.irqvect[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7941 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [26] -> \sys1.irqvect[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7942 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [27] -> \sys1.irqvect[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7943 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [28] -> \sys1.irqvect[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7944 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[3][0][0]$y$2126 [29] -> \sys1.irqvect[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8054 to $_DFFE_PP_ for $techmap\sys1.spi.$0\sck[0:0] -> \sys1.spi.sck.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8055 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [0] -> \sys1.spi.bitcnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8056 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [1] -> \sys1.spi.bitcnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8057 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [2] -> \sys1.spi.bitcnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8058 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [3] -> \sys1.spi.bitcnt [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8059 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [4] -> \sys1.spi.bitcnt [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8060 to $_DFFE_PP_ for $techmap\sys1.spi.$0\bitcnt[5:0] [5] -> \sys1.spi.bitcnt [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8062 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [0] -> \sys1.rx_spi [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8063 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [1] -> \sys1.rx_spi [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8064 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [2] -> \sys1.rx_spi [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8065 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [3] -> \sys1.rx_spi [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8066 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [4] -> \sys1.rx_spi [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8067 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [5] -> \sys1.rx_spi [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8068 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [6] -> \sys1.rx_spi [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8069 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [7] -> \sys1.rx_spi [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8070 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [8] -> \sys1.rx_spi [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8071 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [9] -> \sys1.rx_spi [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8072 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [10] -> \sys1.rx_spi [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8073 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [11] -> \sys1.rx_spi [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8074 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [12] -> \sys1.rx_spi [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8075 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [13] -> \sys1.rx_spi [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8076 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [14] -> \sys1.rx_spi [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8077 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [15] -> \sys1.rx_spi [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8078 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [16] -> \sys1.rx_spi [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8079 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [17] -> \sys1.rx_spi [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8080 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [18] -> \sys1.rx_spi [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8081 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [19] -> \sys1.rx_spi [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8082 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [20] -> \sys1.rx_spi [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8083 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [21] -> \sys1.rx_spi [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8084 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [22] -> \sys1.rx_spi [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8085 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [23] -> $auto$wreduce.cc:460:run$1168 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8086 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [24] -> $auto$wreduce.cc:460:run$1168 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8087 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [25] -> $auto$wreduce.cc:460:run$1168 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8088 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [26] -> $auto$wreduce.cc:460:run$1168 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8089 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [27] -> $auto$wreduce.cc:460:run$1168 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8090 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [28] -> $auto$wreduce.cc:460:run$1168 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8091 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [29] -> $auto$wreduce.cc:460:run$1168 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8092 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [30] -> $auto$wreduce.cc:460:run$1168 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8093 to $_DFFE_PP_ for $techmap\sys1.spi.$0\shreg[31:0] [31] -> $auto$wreduce.cc:460:run$1168 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8234 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [0] -> \sys1.irqvect[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8235 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [1] -> \sys1.irqvect[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8236 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [2] -> \sys1.irqvect[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8237 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [3] -> \sys1.irqvect[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8238 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [4] -> \sys1.irqvect[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8239 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [5] -> \sys1.irqvect[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8240 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [6] -> \sys1.irqvect[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8241 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [7] -> \sys1.irqvect[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8242 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [8] -> \sys1.irqvect[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8243 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [9] -> \sys1.irqvect[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8244 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [10] -> \sys1.irqvect[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8245 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [11] -> \sys1.irqvect[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8246 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [12] -> \sys1.irqvect[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8247 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [13] -> \sys1.irqvect[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8248 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [14] -> \sys1.irqvect[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8249 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [15] -> \sys1.irqvect[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8250 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [16] -> \sys1.irqvect[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8251 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [17] -> \sys1.irqvect[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8252 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [18] -> \sys1.irqvect[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8253 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [19] -> \sys1.irqvect[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8254 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [20] -> \sys1.irqvect[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8255 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [21] -> \sys1.irqvect[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8256 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [22] -> \sys1.irqvect[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8257 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [23] -> \sys1.irqvect[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8258 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [24] -> \sys1.irqvect[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8259 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [25] -> \sys1.irqvect[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8260 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [26] -> \sys1.irqvect[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8261 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [27] -> \sys1.irqvect[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8262 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [28] -> \sys1.irqvect[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8263 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[4][0][0]$y$2136 [29] -> \sys1.irqvect[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8396 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [0] -> \sys1.cpu.regs[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8397 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [1] -> \sys1.cpu.regs[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8398 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [2] -> \sys1.cpu.regs[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8399 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [3] -> \sys1.cpu.regs[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8400 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [4] -> \sys1.cpu.regs[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8401 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [5] -> \sys1.cpu.regs[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8402 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [6] -> \sys1.cpu.regs[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8403 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [7] -> \sys1.cpu.regs[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8404 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [8] -> \sys1.cpu.regs[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8405 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [9] -> \sys1.cpu.regs[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8406 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [10] -> \sys1.cpu.regs[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8407 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [11] -> \sys1.cpu.regs[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8408 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [12] -> \sys1.cpu.regs[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8409 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [13] -> \sys1.cpu.regs[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8410 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [14] -> \sys1.cpu.regs[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8411 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [15] -> \sys1.cpu.regs[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8412 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [16] -> \sys1.cpu.regs[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8413 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [17] -> \sys1.cpu.regs[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8414 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [18] -> \sys1.cpu.regs[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8415 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [19] -> \sys1.cpu.regs[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8416 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [20] -> \sys1.cpu.regs[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8417 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [21] -> \sys1.cpu.regs[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8418 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [22] -> \sys1.cpu.regs[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8419 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [23] -> \sys1.cpu.regs[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8420 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [24] -> \sys1.cpu.regs[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8421 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [25] -> \sys1.cpu.regs[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8422 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [26] -> \sys1.cpu.regs[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8423 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [27] -> \sys1.cpu.regs[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8424 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [28] -> \sys1.cpu.regs[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8425 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [29] -> \sys1.cpu.regs[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8426 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [30] -> \sys1.cpu.regs[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8427 to $_DFFE_PP_ for $memory\sys1.cpu.regs$wrmux[6][0][0]$y$1891 [31] -> \sys1.cpu.regs[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8429 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [0] -> \sys1.uart2.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8430 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [1] -> \sys1.uart2.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8431 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [2] -> \sys1.uart2.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8432 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [3] -> \sys1.uart2.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8433 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [4] -> \sys1.uart2.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8434 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [5] -> \sys1.uart2.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8435 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [6] -> \sys1.uart2.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8436 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [7] -> \sys1.uart2.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8437 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [8] -> \sys1.uart2.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8438 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [9] -> \sys1.uart2.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8439 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [10] -> \sys1.uart2.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8440 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\divider[11:0] [11] -> \sys1.uart2.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8458 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\thre[0:0] -> \sys1.uart2.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8474 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [0] -> \sys1.uart2.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8475 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [1] -> \sys1.uart2.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8476 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [2] -> \sys1.uart2.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8477 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\cbrx[3:0] [3] -> \sys1.uart2.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8478 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\stopb[0:0] -> \sys1.uart2.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8479 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [0] -> \sys1.uart2.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8480 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [1] -> \sys1.uart2.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8481 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [2] -> \sys1.uart2.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8482 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [3] -> \sys1.uart2.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8483 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [4] -> \sys1.uart2.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8484 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [5] -> \sys1.uart2.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8485 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [6] -> \sys1.uart2.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8486 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\rbr[7:0] [7] -> \sys1.uart2.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8487 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [0] -> \sys1.uart2.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8488 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [1] -> \sys1.uart2.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8489 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [2] -> \sys1.uart2.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8490 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [3] -> \sys1.uart2.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8491 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [4] -> \sys1.uart2.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8492 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [5] -> \sys1.uart2.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8493 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [6] -> \sys1.uart2.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8494 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [7] -> \sys1.uart2.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8495 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\shrx[8:0] [8] -> \sys1.uart2.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8496 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\ove[0:0] -> \sys1.uart2.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8497 to $_DFFE_PP_ for $techmap\sys1.uart2.$0\dv[0:0] -> \sys1.uart2.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8797 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [0] -> \sys1.uart1.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8798 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [1] -> \sys1.uart1.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8799 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [2] -> \sys1.uart1.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8800 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [3] -> \sys1.uart1.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8801 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [4] -> \sys1.uart1.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8802 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [5] -> \sys1.uart1.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8803 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [6] -> \sys1.uart1.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8804 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [7] -> \sys1.uart1.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8805 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [8] -> \sys1.uart1.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8806 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [9] -> \sys1.uart1.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8807 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [10] -> \sys1.uart1.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8808 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\divider[11:0] [11] -> \sys1.uart1.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8826 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\thre[0:0] -> \sys1.uart1.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8842 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [0] -> \sys1.uart1.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8843 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [1] -> \sys1.uart1.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8844 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [2] -> \sys1.uart1.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8845 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\cbrx[3:0] [3] -> \sys1.uart1.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8846 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\stopb[0:0] -> \sys1.uart1.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8847 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [0] -> \sys1.uart1.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8848 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [1] -> \sys1.uart1.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8849 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [2] -> \sys1.uart1.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8850 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [3] -> \sys1.uart1.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8851 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [4] -> \sys1.uart1.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8852 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [5] -> \sys1.uart1.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8853 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [6] -> \sys1.uart1.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8854 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\rbr[7:0] [7] -> \sys1.uart1.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8855 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [0] -> \sys1.uart1.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8856 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [1] -> \sys1.uart1.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8857 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [2] -> \sys1.uart1.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8858 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [3] -> \sys1.uart1.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8859 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [4] -> \sys1.uart1.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8860 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [5] -> \sys1.uart1.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8861 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [6] -> \sys1.uart1.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8862 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [7] -> \sys1.uart1.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8863 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\shrx[8:0] [8] -> \sys1.uart1.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8864 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\ove[0:0] -> \sys1.uart1.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8865 to $_DFFE_PP_ for $techmap\sys1.uart1.$0\dv[0:0] -> \sys1.uart1.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9066 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [0] -> \sys1.uart0.divider [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9067 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [1] -> \sys1.uart0.divider [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9068 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [2] -> \sys1.uart0.divider [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9069 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [3] -> \sys1.uart0.divider [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9070 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [4] -> \sys1.uart0.divider [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9071 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [5] -> \sys1.uart0.divider [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9072 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [6] -> \sys1.uart0.divider [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9073 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [7] -> \sys1.uart0.divider [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9074 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [8] -> \sys1.uart0.divider [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9075 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [9] -> \sys1.uart0.divider [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9076 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [10] -> \sys1.uart0.divider [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9077 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\divider[11:0] [11] -> \sys1.uart0.divider [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9104 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [0] -> \sys1.uart0.thr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9105 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [1] -> \sys1.uart0.thr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9106 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [2] -> \sys1.uart0.thr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9107 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [3] -> \sys1.uart0.thr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9108 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [4] -> \sys1.uart0.thr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9109 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [5] -> \sys1.uart0.thr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9110 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [6] -> \sys1.uart0.thr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9111 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thr[7:0] [7] -> \sys1.uart0.thr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9112 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\thre[0:0] -> \sys1.uart0.thre.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9128 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [0] -> \sys1.uart0.cbrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9129 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [1] -> \sys1.uart0.cbrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9130 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [2] -> \sys1.uart0.cbrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9131 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\cbrx[3:0] [3] -> \sys1.uart0.cbrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9132 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\stopb[0:0] -> \sys1.uart0.stopb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9133 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [0] -> \sys1.uart0.rbr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9134 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [1] -> \sys1.uart0.rbr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9135 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [2] -> \sys1.uart0.rbr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9136 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [3] -> \sys1.uart0.rbr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9137 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [4] -> \sys1.uart0.rbr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9138 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [5] -> \sys1.uart0.rbr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9139 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [6] -> \sys1.uart0.rbr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9140 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\rbr[7:0] [7] -> \sys1.uart0.rbr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9141 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [0] -> \sys1.uart0.shrx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9142 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [1] -> \sys1.uart0.shrx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9143 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [2] -> \sys1.uart0.shrx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9144 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [3] -> \sys1.uart0.shrx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9145 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [4] -> \sys1.uart0.shrx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9146 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [5] -> \sys1.uart0.shrx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9147 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [6] -> \sys1.uart0.shrx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9148 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [7] -> \sys1.uart0.shrx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9149 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\shrx[8:0] [8] -> \sys1.uart0.shrx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9150 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\ove[0:0] -> \sys1.uart0.ove.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9151 to $_DFFE_PP_ for $techmap\sys1.uart0.$0\dv[0:0] -> \sys1.uart0.dv.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9463 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [0] -> \sys1.irqvect[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9464 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [1] -> \sys1.irqvect[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9465 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [2] -> \sys1.irqvect[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9466 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [3] -> \sys1.irqvect[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9467 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [4] -> \sys1.irqvect[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9468 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [5] -> \sys1.irqvect[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9469 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [6] -> \sys1.irqvect[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9470 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [7] -> \sys1.irqvect[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9471 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [8] -> \sys1.irqvect[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9472 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [9] -> \sys1.irqvect[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9473 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [10] -> \sys1.irqvect[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9474 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [11] -> \sys1.irqvect[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9475 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [12] -> \sys1.irqvect[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9476 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [13] -> \sys1.irqvect[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9477 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [14] -> \sys1.irqvect[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9478 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [15] -> \sys1.irqvect[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9479 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [16] -> \sys1.irqvect[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9480 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [17] -> \sys1.irqvect[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9481 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [18] -> \sys1.irqvect[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9482 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [19] -> \sys1.irqvect[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9483 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [20] -> \sys1.irqvect[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9484 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [21] -> \sys1.irqvect[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9485 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [22] -> \sys1.irqvect[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9486 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [23] -> \sys1.irqvect[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9487 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [24] -> \sys1.irqvect[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9488 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [25] -> \sys1.irqvect[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9489 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [26] -> \sys1.irqvect[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9490 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [27] -> \sys1.irqvect[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9491 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [28] -> \sys1.irqvect[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9492 to $_DFFE_PP_ for $memory\sys1.irqvect$wrmux[7][0][0]$y$2156 [29] -> \sys1.irqvect[7] [29].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2725 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [0] -> \sys1.irqen [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2726 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [1] -> \sys1.irqen [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2727 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [2] -> \sys1.irqen [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2728 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [3] -> \sys1.irqen [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2729 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [4] -> \sys1.irqen [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2730 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [5] -> \sys1.irqen [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2731 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [6] -> \sys1.irqen [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$2732 to $__DFFE_PP0 for $techmap\sys1.$0\irqen[7:0] [7] -> \sys1.irqen [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4715 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [0] -> \sys1.cpu.PCreg[0] [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4716 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [1] -> \sys1.cpu.PCreg[0] [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4717 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [2] -> \sys1.cpu.PCreg[0] [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4718 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [3] -> \sys1.cpu.PCreg[0] [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4719 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [4] -> \sys1.cpu.PCreg[0] [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4720 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [5] -> \sys1.cpu.PCreg[0] [5].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4721 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [6] -> \sys1.cpu.PCreg[0] [6].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4722 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [7] -> \sys1.cpu.PCreg[0] [7].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4723 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [8] -> \sys1.cpu.PCreg[0] [8].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4724 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [9] -> \sys1.cpu.PCreg[0] [9].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4725 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [10] -> \sys1.cpu.PCreg[0] [10].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4726 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [11] -> \sys1.cpu.PCreg[0] [11].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4727 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [12] -> \sys1.cpu.PCreg[0] [12].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4728 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [13] -> \sys1.cpu.PCreg[0] [13].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4729 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [14] -> \sys1.cpu.PCreg[0] [14].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4730 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [15] -> \sys1.cpu.PCreg[0] [15].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4731 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [16] -> \sys1.cpu.PCreg[0] [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4732 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [17] -> \sys1.cpu.PCreg[0] [17].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4733 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [18] -> \sys1.cpu.PCreg[0] [18].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4734 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [19] -> \sys1.cpu.PCreg[0] [19].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4735 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [20] -> \sys1.cpu.PCreg[0] [20].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4736 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [21] -> \sys1.cpu.PCreg[0] [21].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4737 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [22] -> \sys1.cpu.PCreg[0] [22].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4738 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [23] -> \sys1.cpu.PCreg[0] [23].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4739 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [24] -> \sys1.cpu.PCreg[0] [24].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4740 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [25] -> \sys1.cpu.PCreg[0] [25].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4741 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [26] -> \sys1.cpu.PCreg[0] [26].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4742 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [27] -> \sys1.cpu.PCreg[0] [27].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4743 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [28] -> \sys1.cpu.PCreg[0] [28].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4744 to $__DFFE_PP0 for $techmap\sys1.cpu.$0\PCreg[0][29:0] [29] -> \sys1.cpu.PCreg[0] [29].

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping main.$auto$alumacc.cc:485:replace_alu$1519.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1504.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1486.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1495.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1507.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1528.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1525.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1522.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1501.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1513.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1516.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1483.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1480.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1489.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1492.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1498.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1459.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1462.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1465.slice[0].carry ($lut).
Mapping main.$auto$alumacc.cc:485:replace_alu$1510.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1658.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:196:handle_cell$1705.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry ($lut).
Mapping main.$techmap$auto$memory_map.cc:285:handle_cell$2032.$auto$alumacc.cc:485:replace_alu$2245.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in main.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2300 (SB_DFFE): \cnt [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3584 (SB_DFFE): \sys1.cpu.regs[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3593 (SB_DFFE): \sys1.cpu.regs[5] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3595 (SB_DFFE): \sys1.cpu.regs[5] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3597 (SB_DFFE): \sys1.cpu.regs[5] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFFE): \sys1.cpu.regs[7] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3722 (SB_DFFE): \sys1.cpu.regs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3725 (SB_DFFE): \sys1.cpu.regs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3742 (SB_DFFE): \sys1.cpu.regs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE): \sys1.cpu.regs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE): \sys1.cpu.regs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE): \sys1.cpu.regs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2313 (SB_DFFE): \cnt [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2314 (SB_DFFE): \cnt [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4101 (SB_DFFE): \sys1.cpu.regs[10] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2316 (SB_DFFE): \cnt [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2317 (SB_DFFE): \cnt [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2318 (SB_DFFE): \cnt [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFFE): \cnt [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFFE): \sys1.cpu.regs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2299 (SB_DFFE): \cnt [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE): \sys1.cpu.regs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2319 (SB_DFFE): \cnt [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFFE): \sys1.cpu.regs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFFE): \sys1.cpu.regs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFFE): \sys1.cpu.regs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFFE): \sys1.cpu.regs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFFE): \sys1.cpu.regs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFFE): \sys1.cpu.regs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFFE): \sys1.cpu.regs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFFE): \sys1.cpu.regs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFFE): \sys1.cpu.regs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFFE): \sys1.cpu.regs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFFE): \sys1.cpu.regs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFFE): \sys1.cpu.regs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFFE): \sys1.cpu.regs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFFE): \sys1.cpu.regs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFFE): \sys1.cpu.regs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFFE): \sys1.cpu.regs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFFE): \sys1.cpu.regs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFFE): \sys1.cpu.regs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFFE): \sys1.cpu.regs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFFE): \sys1.cpu.regs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFFE): \sys1.cpu.regs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFFE): \sys1.cpu.regs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFFE): \sys1.cpu.regs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFFE): \sys1.cpu.regs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFFE): \sys1.cpu.regs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFFE): \sys1.cpu.regs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFFE): \sys1.cpu.regs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFFE): \sys1.cpu.regs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFFE): \sys1.cpu.regs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFFE): \sys1.cpu.regs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFFE): \sys1.cpu.regs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFFE): \sys1.cpu.regs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFFE): \sys1.cpu.regs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFFE): \sys1.cpu.regs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFFE): \sys1.cpu.regs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFFE): \sys1.cpu.regs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFFE): \sys1.cpu.regs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFFE): \sys1.cpu.regs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFFE): \sys1.cpu.regs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFFE): \sys1.cpu.regs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFFE): \sys1.cpu.regs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFFE): \sys1.cpu.regs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFFE): \sys1.cpu.regs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFFE): \sys1.cpu.regs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFFE): \sys1.cpu.regs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFFE): \sys1.cpu.regs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFFE): \sys1.cpu.regs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFFE): \sys1.cpu.regs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFFE): \sys1.cpu.regs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFFE): \sys1.cpu.regs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFFE): \sys1.cpu.regs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFFE): \sys1.cpu.regs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFFE): \sys1.cpu.regs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFFE): \sys1.cpu.regs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFFE): \sys1.cpu.regs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFFE): \sys1.cpu.regs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFFE): \sys1.cpu.regs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFFE): \sys1.cpu.regs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFFE): \sys1.cpu.regs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFFE): \sys1.cpu.regs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFFE): \sys1.cpu.regs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFFE): \sys1.cpu.regs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFFE): \sys1.cpu.regs[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFFE): \sys1.cpu.regs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFFE): \sys1.cpu.regs[4] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFFE): \sys1.cpu.regs[4] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFFE): \sys1.cpu.regs[4] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFFE): \sys1.cpu.regs[4] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFFE): \sys1.cpu.regs[4] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFFE): \sys1.cpu.regs[4] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFFE): \sys1.cpu.regs[4] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFFE): \sys1.cpu.regs[4] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFFE): \sys1.cpu.regs[4] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFFE): \sys1.cpu.regs[4] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFFE): \sys1.cpu.regs[4] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFFE): \sys1.cpu.regs[4] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFFE): \sys1.cpu.regs[4] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFFE): \sys1.cpu.regs[4] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFFE): \sys1.cpu.regs[4] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFFE): \sys1.cpu.regs[4] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFFE): \sys1.cpu.regs[4] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFFE): \sys1.cpu.regs[4] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFFE): \sys1.cpu.regs[4] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFFE): \sys1.cpu.regs[4] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFFE): \sys1.cpu.regs[4] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFFE): \sys1.cpu.regs[4] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFFE): \sys1.cpu.regs[4] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFFE): \sys1.cpu.regs[4] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFFE): \sys1.cpu.regs[4] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFFE): \sys1.cpu.regs[4] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFFE): \sys1.cpu.regs[4] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2616 (SB_DFFE): \sys1.cpu.regs[4] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2617 (SB_DFFE): \sys1.cpu.regs[4] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFFE): \sys1.cpu.regs[4] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFFE): \sys1.GPOUT [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFFE): \sys1.cpu.regs[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE): \sys1.GPOUT [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFFE): \sys1.GPOUT [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFFE): \sys1.GPOUT [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFFE): \sys1.GPOUT [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFFE): \sys1.GPOUT [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFFE): \sys1.GPOUT [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2631 (SB_DFFE): \sys1.TMR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE): \sys1.GPOUT [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFFE): \sys1.TMF1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFFE): \sys1.TMF0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFFE): \sys1.TMF = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2632 (SB_DFFE): \sys1.TMR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2633 (SB_DFFE): \sys1.TMR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2634 (SB_DFFE): \sys1.TMR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2635 (SB_DFFE): \sys1.TMR [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2636 (SB_DFFE): \sys1.TMR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2637 (SB_DFFE): \sys1.TMR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2638 (SB_DFFE): \sys1.TMR [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2639 (SB_DFFE): \sys1.TMR [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2640 (SB_DFFE): \sys1.TMR [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2641 (SB_DFFE): \sys1.TMR [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2642 (SB_DFFE): \sys1.TMR [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2643 (SB_DFFE): \sys1.TMR [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2644 (SB_DFFE): \sys1.TMR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2645 (SB_DFFE): \sys1.TMR [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2646 (SB_DFFE): \sys1.TMR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2647 (SB_DFFE): \sys1.TMR [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2648 (SB_DFFE): \sys1.TMR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2649 (SB_DFFE): \sys1.TMR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2650 (SB_DFFE): \sys1.TMR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2651 (SB_DFFE): \sys1.TMR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2652 (SB_DFFE): \sys1.TMR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2653 (SB_DFFE): \sys1.TMR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2654 (SB_DFFE): \sys1.TMR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2655 (SB_DFFE): \sys1.TMR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2656 (SB_DFFE): \sys1.TMR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2657 (SB_DFFE): \sys1.TMR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2658 (SB_DFFE): \sys1.TMR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2659 (SB_DFFE): \sys1.TMR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2660 (SB_DFFE): \sys1.TMR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2661 (SB_DFFE): \sys1.TMR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2663 (SB_DFF): \sys1.tcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFFE): \sys1.TMR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2664 (SB_DFF): \sys1.tcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2665 (SB_DFF): \sys1.tcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2666 (SB_DFF): \sys1.tcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2667 (SB_DFF): \sys1.tcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2668 (SB_DFF): \sys1.tcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2669 (SB_DFF): \sys1.tcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2670 (SB_DFF): \sys1.tcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2671 (SB_DFF): \sys1.tcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2672 (SB_DFF): \sys1.tcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2673 (SB_DFF): \sys1.tcount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2674 (SB_DFF): \sys1.tcount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2675 (SB_DFF): \sys1.tcount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2676 (SB_DFF): \sys1.tcount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2677 (SB_DFF): \sys1.tcount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2678 (SB_DFF): \sys1.tcount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2679 (SB_DFF): \sys1.tcount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2680 (SB_DFF): \sys1.tcount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2681 (SB_DFF): \sys1.tcount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2682 (SB_DFF): \sys1.tcount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2683 (SB_DFF): \sys1.tcount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2684 (SB_DFF): \sys1.tcount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2685 (SB_DFF): \sys1.tcount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2686 (SB_DFF): \sys1.tcount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2687 (SB_DFF): \sys1.tcount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2688 (SB_DFF): \sys1.tcount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2689 (SB_DFF): \sys1.tcount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2690 (SB_DFF): \sys1.tcount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2691 (SB_DFF): \sys1.tcount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2692 (SB_DFF): \sys1.tcount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2693 (SB_DFF): \sys1.tcount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2695 (SB_DFFE): \sys1.spi_ss [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2662 (SB_DFF): \sys1.tcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2697 (SB_DFFE): \sys1.spi_ctrl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2694 (SB_DFFE): \sys1.spi_ss [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2698 (SB_DFFE): \sys1.spi_ctrl [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2699 (SB_DFFE): \sys1.spi_ctrl [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2700 (SB_DFFE): \sys1.spi_ctrl [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2701 (SB_DFFE): \sys1.spi_ctrl [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2702 (SB_DFFE): \sys1.spi_ctrl [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2703 (SB_DFFE): \sys1.spi_ctrl [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2704 (SB_DFFE): \sys1.spi_ctrl [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2705 (SB_DFFE): \sys1.spi_ctrl [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2706 (SB_DFFE): \sys1.spi_ctrl [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2707 (SB_DFFE): \sys1.spi_ctrl [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2708 (SB_DFFE): \sys1.spi_ctrl [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2709 (SB_DFFE): \sys1.spi_ctrl [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2712 (SB_DFFE): \sys1.spiLoRA_ctrl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2696 (SB_DFFE): \sys1.spi_ctrl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2710 (SB_DFFE): \sys1.spiLoRA_ss = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2713 (SB_DFFE): \sys1.spiLoRA_ctrl [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2714 (SB_DFFE): \sys1.spiLoRA_ctrl [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2715 (SB_DFFE): \sys1.spiLoRA_ctrl [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2716 (SB_DFFE): \sys1.spiLoRA_ctrl [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFFE): \sys1.spiLoRA_ctrl [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2718 (SB_DFFE): \sys1.spiLoRA_ctrl [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2719 (SB_DFFE): \sys1.spiLoRA_ctrl [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2720 (SB_DFFE): \sys1.spiLoRA_ctrl [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2721 (SB_DFFE): \sys1.spiLoRA_ctrl [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2722 (SB_DFFE): \sys1.spiLoRA_ctrl [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2723 (SB_DFFE): \sys1.spiLoRA_ctrl [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2724 (SB_DFFE): \sys1.spiLoRA_ctrl [13] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2726 (SB_DFFER): \sys1.irqen [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2725 (SB_DFFER): \sys1.irqen [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE): \sys1.cpu.regs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE): \sys1.cpu.regs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE): \sys1.cpu.regs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE): \sys1.cpu.regs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE): \sys1.cpu.regs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE): \sys1.cpu.regs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE): \sys1.cpu.regs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE): \sys1.cpu.regs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE): \sys1.cpu.regs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE): \sys1.cpu.regs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2315 (SB_DFFE): \cnt [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFFE): \cnt [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2309 (SB_DFFE): \cnt [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2310 (SB_DFFE): \cnt [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE): \sys1.cpu.regs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE): \sys1.cpu.regs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE): \sys1.cpu.regs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE): \sys1.cpu.regs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE): \sys1.cpu.regs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE): \sys1.cpu.regs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE): \sys1.cpu.regs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE): \sys1.cpu.regs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE): \sys1.cpu.regs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE): \sys1.cpu.regs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3228 (SB_DFFE): \sys1.cpu.regs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3229 (SB_DFFE): \sys1.cpu.regs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3230 (SB_DFFE): \sys1.cpu.regs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3231 (SB_DFFE): \sys1.cpu.regs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3232 (SB_DFFE): \sys1.cpu.regs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3233 (SB_DFFE): \sys1.cpu.regs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE): \sys1.cpu.regs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2311 (SB_DFFE): \cnt [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2312 (SB_DFFE): \cnt [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3585 (SB_DFFE): \sys1.cpu.regs[5] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3586 (SB_DFFE): \sys1.cpu.regs[5] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3587 (SB_DFFE): \sys1.cpu.regs[5] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3588 (SB_DFFE): \sys1.cpu.regs[5] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3589 (SB_DFFE): \sys1.cpu.regs[5] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3590 (SB_DFFE): \sys1.cpu.regs[5] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3591 (SB_DFFE): \sys1.cpu.regs[5] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3592 (SB_DFFE): \sys1.cpu.regs[5] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2301 (SB_DFFE): \cnt [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3594 (SB_DFFE): \sys1.cpu.regs[5] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2302 (SB_DFFE): \cnt [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3596 (SB_DFFE): \sys1.cpu.regs[5] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFFE): \cnt [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3598 (SB_DFFE): \sys1.cpu.regs[5] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3599 (SB_DFFE): \sys1.cpu.regs[5] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3600 (SB_DFFE): \sys1.cpu.regs[5] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3601 (SB_DFFE): \sys1.cpu.regs[5] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3602 (SB_DFFE): \sys1.cpu.regs[5] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3603 (SB_DFFE): \sys1.cpu.regs[5] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3604 (SB_DFFE): \sys1.cpu.regs[5] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3605 (SB_DFFE): \sys1.cpu.regs[5] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3606 (SB_DFFE): \sys1.cpu.regs[5] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3607 (SB_DFFE): \sys1.cpu.regs[5] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3608 (SB_DFFE): \sys1.cpu.regs[5] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3609 (SB_DFFE): \sys1.cpu.regs[5] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3610 (SB_DFFE): \sys1.cpu.regs[5] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3611 (SB_DFFE): \sys1.cpu.regs[5] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3612 (SB_DFFE): \sys1.cpu.regs[5] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3613 (SB_DFFE): \sys1.cpu.regs[5] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3614 (SB_DFFE): \sys1.cpu.regs[5] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3617 (SB_DFFE): \sys1.cpu.regs[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3583 (SB_DFFE): \sys1.cpu.regs[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3618 (SB_DFFE): \sys1.cpu.regs[8] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3619 (SB_DFFE): \sys1.cpu.regs[8] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3620 (SB_DFFE): \sys1.cpu.regs[8] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3621 (SB_DFFE): \sys1.cpu.regs[8] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3622 (SB_DFFE): \sys1.cpu.regs[8] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3623 (SB_DFFE): \sys1.cpu.regs[8] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3624 (SB_DFFE): \sys1.cpu.regs[8] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3625 (SB_DFFE): \sys1.cpu.regs[8] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3626 (SB_DFFE): \sys1.cpu.regs[8] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3627 (SB_DFFE): \sys1.cpu.regs[8] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3628 (SB_DFFE): \sys1.cpu.regs[8] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3629 (SB_DFFE): \sys1.cpu.regs[8] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3630 (SB_DFFE): \sys1.cpu.regs[8] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3631 (SB_DFFE): \sys1.cpu.regs[8] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3632 (SB_DFFE): \sys1.cpu.regs[8] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3633 (SB_DFFE): \sys1.cpu.regs[8] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3634 (SB_DFFE): \sys1.cpu.regs[8] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3635 (SB_DFFE): \sys1.cpu.regs[8] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3636 (SB_DFFE): \sys1.cpu.regs[8] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3637 (SB_DFFE): \sys1.cpu.regs[8] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3638 (SB_DFFE): \sys1.cpu.regs[8] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3639 (SB_DFFE): \sys1.cpu.regs[8] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3640 (SB_DFFE): \sys1.cpu.regs[8] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3641 (SB_DFFE): \sys1.cpu.regs[8] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3642 (SB_DFFE): \sys1.cpu.regs[8] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3643 (SB_DFFE): \sys1.cpu.regs[8] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3644 (SB_DFFE): \sys1.cpu.regs[8] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3645 (SB_DFFE): \sys1.cpu.regs[8] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3646 (SB_DFFE): \sys1.cpu.regs[8] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3647 (SB_DFFE): \sys1.cpu.regs[8] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3650 (SB_DFFE): \sys1.cpu.regs[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3616 (SB_DFFE): \sys1.cpu.regs[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3651 (SB_DFFE): \sys1.cpu.regs[9] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3652 (SB_DFFE): \sys1.cpu.regs[9] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3653 (SB_DFFE): \sys1.cpu.regs[9] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3654 (SB_DFFE): \sys1.cpu.regs[9] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3655 (SB_DFFE): \sys1.cpu.regs[9] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3656 (SB_DFFE): \sys1.cpu.regs[9] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3657 (SB_DFFE): \sys1.cpu.regs[9] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3658 (SB_DFFE): \sys1.cpu.regs[9] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3659 (SB_DFFE): \sys1.cpu.regs[9] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3660 (SB_DFFE): \sys1.cpu.regs[9] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3661 (SB_DFFE): \sys1.cpu.regs[9] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3662 (SB_DFFE): \sys1.cpu.regs[9] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3663 (SB_DFFE): \sys1.cpu.regs[9] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3664 (SB_DFFE): \sys1.cpu.regs[9] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3665 (SB_DFFE): \sys1.cpu.regs[9] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3666 (SB_DFFE): \sys1.cpu.regs[9] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3667 (SB_DFFE): \sys1.cpu.regs[9] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3668 (SB_DFFE): \sys1.cpu.regs[9] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3669 (SB_DFFE): \sys1.cpu.regs[9] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3670 (SB_DFFE): \sys1.cpu.regs[9] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3671 (SB_DFFE): \sys1.cpu.regs[9] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3672 (SB_DFFE): \sys1.cpu.regs[9] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3673 (SB_DFFE): \sys1.cpu.regs[9] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3674 (SB_DFFE): \sys1.cpu.regs[9] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3675 (SB_DFFE): \sys1.cpu.regs[9] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3676 (SB_DFFE): \sys1.cpu.regs[9] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3677 (SB_DFFE): \sys1.cpu.regs[9] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3678 (SB_DFFE): \sys1.cpu.regs[9] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3679 (SB_DFFE): \sys1.cpu.regs[9] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3680 (SB_DFFE): \sys1.cpu.regs[9] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3682 (SB_DFFE): \sys1.cpu.regs[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3649 (SB_DFFE): \sys1.cpu.regs[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3683 (SB_DFFE): \sys1.cpu.regs[7] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3684 (SB_DFFE): \sys1.cpu.regs[7] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3685 (SB_DFFE): \sys1.cpu.regs[7] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3686 (SB_DFFE): \sys1.cpu.regs[7] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3687 (SB_DFFE): \sys1.cpu.regs[7] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3688 (SB_DFFE): \sys1.cpu.regs[7] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3689 (SB_DFFE): \sys1.cpu.regs[7] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3690 (SB_DFFE): \sys1.cpu.regs[7] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3691 (SB_DFFE): \sys1.cpu.regs[7] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3692 (SB_DFFE): \sys1.cpu.regs[7] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3693 (SB_DFFE): \sys1.cpu.regs[7] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3694 (SB_DFFE): \sys1.cpu.regs[7] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3695 (SB_DFFE): \sys1.cpu.regs[7] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3696 (SB_DFFE): \sys1.cpu.regs[7] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3697 (SB_DFFE): \sys1.cpu.regs[7] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3698 (SB_DFFE): \sys1.cpu.regs[7] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3699 (SB_DFFE): \sys1.cpu.regs[7] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3700 (SB_DFFE): \sys1.cpu.regs[7] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFFE): \sys1.cpu.regs[7] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3702 (SB_DFFE): \sys1.cpu.regs[7] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFFE): \sys1.cpu.regs[7] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFFE): \sys1.cpu.regs[7] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4038 (SB_DFFE): \sys1.cpu.regs[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4039 (SB_DFFE): \sys1.cpu.regs[14] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4040 (SB_DFFE): \sys1.cpu.regs[14] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFFE): \sys1.cpu.regs[7] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFFE): \sys1.cpu.regs[7] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFFE): \sys1.cpu.regs[7] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFFE): \sys1.cpu.regs[7] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2304 (SB_DFFE): \cnt [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4041 (SB_DFFE): \sys1.cpu.regs[14] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3681 (SB_DFFE): \sys1.cpu.regs[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4042 (SB_DFFE): \sys1.cpu.regs[14] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3716 (SB_DFFE): \sys1.cpu.regs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4043 (SB_DFFE): \sys1.cpu.regs[14] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4044 (SB_DFFE): \sys1.cpu.regs[14] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4045 (SB_DFFE): \sys1.cpu.regs[14] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4046 (SB_DFFE): \sys1.cpu.regs[14] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4047 (SB_DFFE): \sys1.cpu.regs[14] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2305 (SB_DFFE): \cnt [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4048 (SB_DFFE): \sys1.cpu.regs[14] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4049 (SB_DFFE): \sys1.cpu.regs[14] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2306 (SB_DFFE): \cnt [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4050 (SB_DFFE): \sys1.cpu.regs[14] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4051 (SB_DFFE): \sys1.cpu.regs[14] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4052 (SB_DFFE): \sys1.cpu.regs[14] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4053 (SB_DFFE): \sys1.cpu.regs[14] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4054 (SB_DFFE): \sys1.cpu.regs[14] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4055 (SB_DFFE): \sys1.cpu.regs[14] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4056 (SB_DFFE): \sys1.cpu.regs[14] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4057 (SB_DFFE): \sys1.cpu.regs[14] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4058 (SB_DFFE): \sys1.cpu.regs[14] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4059 (SB_DFFE): \sys1.cpu.regs[14] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4060 (SB_DFFE): \sys1.cpu.regs[14] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4061 (SB_DFFE): \sys1.cpu.regs[14] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4062 (SB_DFFE): \sys1.cpu.regs[14] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4063 (SB_DFFE): \sys1.cpu.regs[14] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4064 (SB_DFFE): \sys1.cpu.regs[14] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4065 (SB_DFFE): \sys1.cpu.regs[14] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2307 (SB_DFFE): \cnt [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4067 (SB_DFFE): \sys1.cpu.regs[14] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4068 (SB_DFFE): \sys1.cpu.regs[14] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3746 (SB_DFFE): \sys1.cpu.regs[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFFE): \sys1.cpu.regs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3747 (SB_DFFE): \sys1.cpu.regs[12] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3748 (SB_DFFE): \sys1.cpu.regs[12] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3749 (SB_DFFE): \sys1.cpu.regs[12] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4072 (SB_DFFE): \sys1.cpu.regs[10] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3751 (SB_DFFE): \sys1.cpu.regs[12] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3752 (SB_DFFE): \sys1.cpu.regs[12] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3753 (SB_DFFE): \sys1.cpu.regs[12] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3754 (SB_DFFE): \sys1.cpu.regs[12] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3755 (SB_DFFE): \sys1.cpu.regs[12] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3756 (SB_DFFE): \sys1.cpu.regs[12] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3757 (SB_DFFE): \sys1.cpu.regs[12] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3758 (SB_DFFE): \sys1.cpu.regs[12] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3759 (SB_DFFE): \sys1.cpu.regs[12] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3760 (SB_DFFE): \sys1.cpu.regs[12] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3761 (SB_DFFE): \sys1.cpu.regs[12] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3762 (SB_DFFE): \sys1.cpu.regs[12] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3763 (SB_DFFE): \sys1.cpu.regs[12] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3764 (SB_DFFE): \sys1.cpu.regs[12] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3765 (SB_DFFE): \sys1.cpu.regs[12] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3766 (SB_DFFE): \sys1.cpu.regs[12] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3767 (SB_DFFE): \sys1.cpu.regs[12] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3768 (SB_DFFE): \sys1.cpu.regs[12] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3769 (SB_DFFE): \sys1.cpu.regs[12] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3770 (SB_DFFE): \sys1.cpu.regs[12] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3771 (SB_DFFE): \sys1.cpu.regs[12] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3772 (SB_DFFE): \sys1.cpu.regs[12] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3773 (SB_DFFE): \sys1.cpu.regs[12] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3774 (SB_DFFE): \sys1.cpu.regs[12] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3775 (SB_DFFE): \sys1.cpu.regs[12] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3776 (SB_DFFE): \sys1.cpu.regs[12] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3778 (SB_DFFE): \sys1.cpu.regs[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3745 (SB_DFFE): \sys1.cpu.regs[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3779 (SB_DFFE): \sys1.cpu.regs[11] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3780 (SB_DFFE): \sys1.cpu.regs[11] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3781 (SB_DFFE): \sys1.cpu.regs[11] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3782 (SB_DFFE): \sys1.cpu.regs[11] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3783 (SB_DFFE): \sys1.cpu.regs[11] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3784 (SB_DFFE): \sys1.cpu.regs[11] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3785 (SB_DFFE): \sys1.cpu.regs[11] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3786 (SB_DFFE): \sys1.cpu.regs[11] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3787 (SB_DFFE): \sys1.cpu.regs[11] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3788 (SB_DFFE): \sys1.cpu.regs[11] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3789 (SB_DFFE): \sys1.cpu.regs[11] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3790 (SB_DFFE): \sys1.cpu.regs[11] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3791 (SB_DFFE): \sys1.cpu.regs[11] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3792 (SB_DFFE): \sys1.cpu.regs[11] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3793 (SB_DFFE): \sys1.cpu.regs[11] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3794 (SB_DFFE): \sys1.cpu.regs[11] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3795 (SB_DFFE): \sys1.cpu.regs[11] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3796 (SB_DFFE): \sys1.cpu.regs[11] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3797 (SB_DFFE): \sys1.cpu.regs[11] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3798 (SB_DFFE): \sys1.cpu.regs[11] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3799 (SB_DFFE): \sys1.cpu.regs[11] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3800 (SB_DFFE): \sys1.cpu.regs[11] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3801 (SB_DFFE): \sys1.cpu.regs[11] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3802 (SB_DFFE): \sys1.cpu.regs[11] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3803 (SB_DFFE): \sys1.cpu.regs[11] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3804 (SB_DFFE): \sys1.cpu.regs[11] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3805 (SB_DFFE): \sys1.cpu.regs[11] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3806 (SB_DFFE): \sys1.cpu.regs[11] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3807 (SB_DFFE): \sys1.cpu.regs[11] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3808 (SB_DFFE): \sys1.cpu.regs[11] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3810 (SB_DFFE): \sys1.cpu.regs[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3777 (SB_DFFE): \sys1.cpu.regs[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3811 (SB_DFFE): \sys1.cpu.regs[13] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3812 (SB_DFFE): \sys1.cpu.regs[13] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3813 (SB_DFFE): \sys1.cpu.regs[13] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3814 (SB_DFFE): \sys1.cpu.regs[13] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3815 (SB_DFFE): \sys1.cpu.regs[13] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3816 (SB_DFFE): \sys1.cpu.regs[13] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3817 (SB_DFFE): \sys1.cpu.regs[13] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3818 (SB_DFFE): \sys1.cpu.regs[13] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3819 (SB_DFFE): \sys1.cpu.regs[13] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3820 (SB_DFFE): \sys1.cpu.regs[13] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3821 (SB_DFFE): \sys1.cpu.regs[13] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3822 (SB_DFFE): \sys1.cpu.regs[13] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3823 (SB_DFFE): \sys1.cpu.regs[13] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3824 (SB_DFFE): \sys1.cpu.regs[13] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3825 (SB_DFFE): \sys1.cpu.regs[13] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3826 (SB_DFFE): \sys1.cpu.regs[13] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3827 (SB_DFFE): \sys1.cpu.regs[13] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3828 (SB_DFFE): \sys1.cpu.regs[13] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3829 (SB_DFFE): \sys1.cpu.regs[13] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3830 (SB_DFFE): \sys1.cpu.regs[13] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3831 (SB_DFFE): \sys1.cpu.regs[13] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3832 (SB_DFFE): \sys1.cpu.regs[13] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3833 (SB_DFFE): \sys1.cpu.regs[13] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3834 (SB_DFFE): \sys1.cpu.regs[13] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3835 (SB_DFFE): \sys1.cpu.regs[13] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3836 (SB_DFFE): \sys1.cpu.regs[13] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3837 (SB_DFFE): \sys1.cpu.regs[13] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3838 (SB_DFFE): \sys1.cpu.regs[13] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3839 (SB_DFFE): \sys1.cpu.regs[13] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3840 (SB_DFFE): \sys1.cpu.regs[13] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE): \sys1.cpu.regs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3809 (SB_DFFE): \sys1.cpu.regs[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFFE): \sys1.cpu.regs[7] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFFE): \sys1.cpu.regs[7] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFFE): \sys1.cpu.regs[7] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFFE): \sys1.cpu.regs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3715 (SB_DFFE): \sys1.cpu.regs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3717 (SB_DFFE): \sys1.cpu.regs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3718 (SB_DFFE): \sys1.cpu.regs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3719 (SB_DFFE): \sys1.cpu.regs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3720 (SB_DFFE): \sys1.cpu.regs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3721 (SB_DFFE): \sys1.cpu.regs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3723 (SB_DFFE): \sys1.cpu.regs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3724 (SB_DFFE): \sys1.cpu.regs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3726 (SB_DFFE): \sys1.cpu.regs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3727 (SB_DFFE): \sys1.cpu.regs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3728 (SB_DFFE): \sys1.cpu.regs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3729 (SB_DFFE): \sys1.cpu.regs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3730 (SB_DFFE): \sys1.cpu.regs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3731 (SB_DFFE): \sys1.cpu.regs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3732 (SB_DFFE): \sys1.cpu.regs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3733 (SB_DFFE): \sys1.cpu.regs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3734 (SB_DFFE): \sys1.cpu.regs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3735 (SB_DFFE): \sys1.cpu.regs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3736 (SB_DFFE): \sys1.cpu.regs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3737 (SB_DFFE): \sys1.cpu.regs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3738 (SB_DFFE): \sys1.cpu.regs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4073 (SB_DFFE): \sys1.cpu.regs[10] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4076 (SB_DFFE): \sys1.cpu.regs[10] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4066 (SB_DFFE): \sys1.cpu.regs[14] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3741 (SB_DFFE): \sys1.cpu.regs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3743 (SB_DFFE): \sys1.cpu.regs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4071 (SB_DFFE): \sys1.cpu.regs[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4037 (SB_DFFE): \sys1.cpu.regs[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3744 (SB_DFFE): \sys1.cpu.regs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3750 (SB_DFFE): \sys1.cpu.regs[12] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4074 (SB_DFFE): \sys1.cpu.regs[10] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4075 (SB_DFFE): \sys1.cpu.regs[10] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3739 (SB_DFFE): \sys1.cpu.regs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3740 (SB_DFFE): \sys1.cpu.regs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFFE): \sys1.cpu.regs[10] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4077 (SB_DFFE): \sys1.cpu.regs[10] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4100 (SB_DFFE): \sys1.cpu.regs[10] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4080 (SB_DFFE): \sys1.cpu.regs[10] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4081 (SB_DFFE): \sys1.cpu.regs[10] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4082 (SB_DFFE): \sys1.cpu.regs[10] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4083 (SB_DFFE): \sys1.cpu.regs[10] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4084 (SB_DFFE): \sys1.cpu.regs[10] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4085 (SB_DFFE): \sys1.cpu.regs[10] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4086 (SB_DFFE): \sys1.cpu.regs[10] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4087 (SB_DFFE): \sys1.cpu.regs[10] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4088 (SB_DFFE): \sys1.cpu.regs[10] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4089 (SB_DFFE): \sys1.cpu.regs[10] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4090 (SB_DFFE): \sys1.cpu.regs[10] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4091 (SB_DFFE): \sys1.cpu.regs[10] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4092 (SB_DFFE): \sys1.cpu.regs[10] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4093 (SB_DFFE): \sys1.cpu.regs[10] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4094 (SB_DFFE): \sys1.cpu.regs[10] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4095 (SB_DFFE): \sys1.cpu.regs[10] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4096 (SB_DFFE): \sys1.cpu.regs[10] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFFE): \sys1.cpu.regs[10] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4078 (SB_DFFE): \sys1.cpu.regs[10] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFFE): \sys1.cpu.regs[10] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4079 (SB_DFFE): \sys1.cpu.regs[10] [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4652 (SB_DFFR): \sys1.cpu.opvalid = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4776 (SB_DFFR): \sys1.cpu.q0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7307 (SB_DFF): \sys1.spiLoRA.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7308 (SB_DFF): \sys1.spiLoRA.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7309 (SB_DFF): \sys1.spiLoRA.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7310 (SB_DFF): \sys1.spiLoRA.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7311 (SB_DFF): \sys1.spiLoRA.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7312 (SB_DFF): \sys1.spiLoRA.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7306 (SB_DFF): \sys1.spiLoRA.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7314 (SB_DFFE): \sys1.spiLoRA.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7313 (SB_DFF): \sys1.spiLoRA.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7316 (SB_DFFE): \sys1.spiLoRA.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7317 (SB_DFFE): \sys1.spiLoRA.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7318 (SB_DFFE): \sys1.spiLoRA.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7319 (SB_DFFE): \sys1.spiLoRA.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7315 (SB_DFFE): \sys1.spiLoRA.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7321 (SB_DFF): \sys1.spiLoRA.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7320 (SB_DFFE): \sys1.spiLoRA.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8047 (SB_DFF): \sys1.spi.divcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8048 (SB_DFF): \sys1.spi.divcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8049 (SB_DFF): \sys1.spi.divcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8050 (SB_DFF): \sys1.spi.divcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8051 (SB_DFF): \sys1.spi.divcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8052 (SB_DFF): \sys1.spi.divcnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8046 (SB_DFF): \sys1.spi.divcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8054 (SB_DFFE): \sys1.spi.sck = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8053 (SB_DFF): \sys1.spi.divcnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8056 (SB_DFFE): \sys1.spi.bitcnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8057 (SB_DFFE): \sys1.spi.bitcnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8058 (SB_DFFE): \sys1.spi.bitcnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8059 (SB_DFFE): \sys1.spi.bitcnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8055 (SB_DFFE): \sys1.spi.bitcnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8061 (SB_DFF): \sys1.spi.sin = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8060 (SB_DFFE): \sys1.spi.bitcnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8397 (SB_DFFE): \sys1.cpu.regs[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8398 (SB_DFFE): \sys1.cpu.regs[6] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8399 (SB_DFFE): \sys1.cpu.regs[6] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8400 (SB_DFFE): \sys1.cpu.regs[6] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8401 (SB_DFFE): \sys1.cpu.regs[6] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8402 (SB_DFFE): \sys1.cpu.regs[6] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8403 (SB_DFFE): \sys1.cpu.regs[6] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8404 (SB_DFFE): \sys1.cpu.regs[6] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8405 (SB_DFFE): \sys1.cpu.regs[6] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8406 (SB_DFFE): \sys1.cpu.regs[6] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8407 (SB_DFFE): \sys1.cpu.regs[6] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8408 (SB_DFFE): \sys1.cpu.regs[6] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFFE): \sys1.cpu.regs[6] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFFE): \sys1.cpu.regs[6] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFFE): \sys1.cpu.regs[6] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFFE): \sys1.cpu.regs[6] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFFE): \sys1.cpu.regs[6] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFFE): \sys1.cpu.regs[6] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFFE): \sys1.cpu.regs[6] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFFE): \sys1.cpu.regs[6] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFFE): \sys1.cpu.regs[6] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFFE): \sys1.cpu.regs[6] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFFE): \sys1.cpu.regs[6] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFFE): \sys1.cpu.regs[6] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFFE): \sys1.cpu.regs[6] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFFE): \sys1.cpu.regs[6] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFFE): \sys1.cpu.regs[6] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFFE): \sys1.cpu.regs[6] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFFE): \sys1.cpu.regs[6] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFFE): \sys1.cpu.regs[6] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8396 (SB_DFFE): \sys1.cpu.regs[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFFE): \sys1.cpu.regs[6] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFFE): \sys1.uart2.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFFE): \sys1.uart2.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8432 (SB_DFFE): \sys1.uart2.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8433 (SB_DFFE): \sys1.uart2.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8434 (SB_DFFE): \sys1.uart2.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8435 (SB_DFFE): \sys1.uart2.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8436 (SB_DFFE): \sys1.uart2.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8437 (SB_DFFE): \sys1.uart2.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8438 (SB_DFFE): \sys1.uart2.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8439 (SB_DFFE): \sys1.uart2.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8429 (SB_DFFE): \sys1.uart2.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8440 (SB_DFFE): \sys1.uart2.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8442 (SB_DFF): \sys1.uart2.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8443 (SB_DFF): \sys1.uart2.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8444 (SB_DFF): \sys1.uart2.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8445 (SB_DFF): \sys1.uart2.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8446 (SB_DFF): \sys1.uart2.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8447 (SB_DFF): \sys1.uart2.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8448 (SB_DFF): \sys1.uart2.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8449 (SB_DFF): \sys1.uart2.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8450 (SB_DFF): \sys1.uart2.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8451 (SB_DFF): \sys1.uart2.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8441 (SB_DFF): \sys1.uart2.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8453 (SB_DFF): \sys1.uart2.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8452 (SB_DFF): \sys1.uart2.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8458 (SB_DFFE): \sys1.uart2.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8462 (SB_DFF): \sys1.uart2.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8463 (SB_DFF): \sys1.uart2.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8464 (SB_DFF): \sys1.uart2.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8465 (SB_DFF): \sys1.uart2.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8466 (SB_DFF): \sys1.uart2.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8467 (SB_DFF): \sys1.uart2.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8468 (SB_DFF): \sys1.uart2.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8469 (SB_DFF): \sys1.uart2.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8470 (SB_DFF): \sys1.uart2.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8471 (SB_DFF): \sys1.uart2.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8461 (SB_DFF): \sys1.uart2.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8472 (SB_DFF): \sys1.uart2.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8475 (SB_DFFE): \sys1.uart2.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8476 (SB_DFFE): \sys1.uart2.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8474 (SB_DFFE): \sys1.uart2.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8477 (SB_DFFE): \sys1.uart2.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8496 (SB_DFFE): \sys1.uart2.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8797 (SB_DFFE): \sys1.uart1.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8798 (SB_DFFE): \sys1.uart1.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8799 (SB_DFFE): \sys1.uart1.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8800 (SB_DFFE): \sys1.uart1.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8801 (SB_DFFE): \sys1.uart1.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8802 (SB_DFFE): \sys1.uart1.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8497 (SB_DFFE): \sys1.uart2.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8803 (SB_DFFE): \sys1.uart1.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8805 (SB_DFFE): \sys1.uart1.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8806 (SB_DFFE): \sys1.uart1.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8807 (SB_DFFE): \sys1.uart1.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8804 (SB_DFFE): \sys1.uart1.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8808 (SB_DFFE): \sys1.uart1.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8810 (SB_DFF): \sys1.uart1.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8811 (SB_DFF): \sys1.uart1.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8812 (SB_DFF): \sys1.uart1.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8813 (SB_DFF): \sys1.uart1.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8814 (SB_DFF): \sys1.uart1.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8815 (SB_DFF): \sys1.uart1.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8816 (SB_DFF): \sys1.uart1.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8817 (SB_DFF): \sys1.uart1.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8818 (SB_DFF): \sys1.uart1.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8819 (SB_DFF): \sys1.uart1.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8809 (SB_DFF): \sys1.uart1.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8821 (SB_DFF): \sys1.uart1.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8820 (SB_DFF): \sys1.uart1.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8826 (SB_DFFE): \sys1.uart1.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8830 (SB_DFF): \sys1.uart1.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8831 (SB_DFF): \sys1.uart1.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8832 (SB_DFF): \sys1.uart1.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8833 (SB_DFF): \sys1.uart1.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8834 (SB_DFF): \sys1.uart1.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8835 (SB_DFF): \sys1.uart1.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8836 (SB_DFF): \sys1.uart1.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8837 (SB_DFF): \sys1.uart1.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8838 (SB_DFF): \sys1.uart1.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8839 (SB_DFF): \sys1.uart1.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8829 (SB_DFF): \sys1.uart1.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8840 (SB_DFF): \sys1.uart1.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8843 (SB_DFFE): \sys1.uart1.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8844 (SB_DFFE): \sys1.uart1.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8842 (SB_DFFE): \sys1.uart1.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8845 (SB_DFFE): \sys1.uart1.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8864 (SB_DFFE): \sys1.uart1.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8865 (SB_DFFE): \sys1.uart1.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9067 (SB_DFFE): \sys1.uart0.divider [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9068 (SB_DFFE): \sys1.uart0.divider [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9069 (SB_DFFE): \sys1.uart0.divider [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9070 (SB_DFFE): \sys1.uart0.divider [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9071 (SB_DFFE): \sys1.uart0.divider [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9072 (SB_DFFE): \sys1.uart0.divider [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9073 (SB_DFFE): \sys1.uart0.divider [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9074 (SB_DFFE): \sys1.uart0.divider [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9075 (SB_DFFE): \sys1.uart0.divider [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9076 (SB_DFFE): \sys1.uart0.divider [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9066 (SB_DFFE): \sys1.uart0.divider [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9077 (SB_DFFE): \sys1.uart0.divider [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9079 (SB_DFF): \sys1.uart0.divtx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9080 (SB_DFF): \sys1.uart0.divtx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9081 (SB_DFF): \sys1.uart0.divtx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9082 (SB_DFF): \sys1.uart0.divtx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9083 (SB_DFF): \sys1.uart0.divtx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9084 (SB_DFF): \sys1.uart0.divtx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9085 (SB_DFF): \sys1.uart0.divtx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9086 (SB_DFF): \sys1.uart0.divtx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9087 (SB_DFF): \sys1.uart0.divtx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9088 (SB_DFF): \sys1.uart0.divtx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9078 (SB_DFF): \sys1.uart0.divtx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9090 (SB_DFF): \sys1.uart0.rdy = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9089 (SB_DFF): \sys1.uart0.divtx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9096 (SB_DFF): \sys1.uart0.shtx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9097 (SB_DFF): \sys1.uart0.shtx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9098 (SB_DFF): \sys1.uart0.shtx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9099 (SB_DFF): \sys1.uart0.shtx [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9100 (SB_DFF): \sys1.uart0.shtx [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9101 (SB_DFF): \sys1.uart0.shtx [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9102 (SB_DFF): \sys1.uart0.shtx [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9095 (SB_DFF): \sys1.uart0.shtx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9103 (SB_DFF): \sys1.uart0.shtx [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9112 (SB_DFFE): \sys1.uart0.thre = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9113 (SB_DFF): \sys1.uart0.rrxd [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9114 (SB_DFF): \sys1.uart0.rrxd [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9116 (SB_DFF): \sys1.uart0.divrx [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9117 (SB_DFF): \sys1.uart0.divrx [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9118 (SB_DFF): \sys1.uart0.divrx [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9119 (SB_DFF): \sys1.uart0.divrx [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9120 (SB_DFF): \sys1.uart0.divrx [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9121 (SB_DFF): \sys1.uart0.divrx [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9122 (SB_DFF): \sys1.uart0.divrx [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9123 (SB_DFF): \sys1.uart0.divrx [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9124 (SB_DFF): \sys1.uart0.divrx [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9125 (SB_DFF): \sys1.uart0.divrx [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9115 (SB_DFF): \sys1.uart0.divrx [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9126 (SB_DFF): \sys1.uart0.divrx [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9129 (SB_DFFE): \sys1.uart0.cbrx [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9130 (SB_DFFE): \sys1.uart0.cbrx [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9128 (SB_DFFE): \sys1.uart0.cbrx [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9131 (SB_DFFE): \sys1.uart0.cbrx [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9150 (SB_DFFE): \sys1.uart0.ove = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9151 (SB_DFFE): \sys1.uart0.dv = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2711 (SB_DFFE): \sys1.spiLoRA_ctrl [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2727 (SB_DFFER): \sys1.irqen [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2728 (SB_DFFER): \sys1.irqen [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2729 (SB_DFFER): \sys1.irqen [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2730 (SB_DFFER): \sys1.irqen [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2731 (SB_DFFER): \sys1.irqen [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$2732 (SB_DFFER): \sys1.irqen [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4070 (SB_DFFE): \sys1.cpu.regs[10] [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4775 (SB_DFFR): \sys1.cpu.mmode = 0

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in main.
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2397 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2396 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3083 (A=$techmap\sys1.$procmux$852_Y, B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3089 (A=$techmap\sys1.$procmux$839_Y [1], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3090 (A=$techmap\sys1.$procmux$839_Y [2], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3091 (A=$techmap\sys1.$procmux$839_Y [3], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3092 (A=$techmap\sys1.$procmux$839_Y [4], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2666 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3093 (A=$techmap\sys1.$procmux$839_Y [5], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2667 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3094 (A=$techmap\sys1.$procmux$839_Y [6], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2668 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3095 (A=$techmap\sys1.$procmux$839_Y [7], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2669 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3096 (A=$techmap\sys1.$procmux$839_Y [8], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2670 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3097 (A=$techmap\sys1.$procmux$839_Y [9], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2671 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3098 (A=$techmap\sys1.$procmux$839_Y [10], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2672 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3099 (A=$techmap\sys1.$procmux$839_Y [11], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2673 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3100 (A=$techmap\sys1.$procmux$839_Y [12], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3101 (A=$techmap\sys1.$procmux$839_Y [13], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3102 (A=$techmap\sys1.$procmux$839_Y [14], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3103 (A=$techmap\sys1.$procmux$839_Y [15], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2677 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3104 (A=$techmap\sys1.$procmux$839_Y [16], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2678 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3105 (A=$techmap\sys1.$procmux$839_Y [17], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2679 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3106 (A=$techmap\sys1.$procmux$839_Y [18], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2680 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3107 (A=$techmap\sys1.$procmux$839_Y [19], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2681 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3108 (A=$techmap\sys1.$procmux$839_Y [20], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3109 (A=$techmap\sys1.$procmux$839_Y [21], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3110 (A=$techmap\sys1.$procmux$839_Y [22], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3111 (A=$techmap\sys1.$procmux$839_Y [23], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3112 (A=$techmap\sys1.$procmux$839_Y [24], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3113 (A=$techmap\sys1.$procmux$839_Y [25], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3114 (A=$techmap\sys1.$procmux$839_Y [26], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3115 (A=$techmap\sys1.$procmux$839_Y [27], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3116 (A=$techmap\sys1.$procmux$839_Y [28], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3117 (A=$techmap\sys1.$procmux$839_Y [29], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3118 (A=$techmap\sys1.$procmux$839_Y [30], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3119 (A=$techmap\sys1.$procmux$839_Y [31], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2693 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3088 (A=$techmap\sys1.$procmux$839_Y [0], B=1'0, S=\sys1.wr_timer) into $auto$simplemap.cc:420:simplemap_dff$2662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3289 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3290 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7085 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7362 (A=$techmap\sys1.spiLoRA.$not$SPI.v:38$354_Y, B=1'0, S=\sys1.spiLoRA.wr) into $auto$simplemap.cc:420:simplemap_dff$7314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7916 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7918 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7919 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7920 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$7915 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8102 (A=$techmap\sys1.spi.$not$SPI.v:38$354_Y, B=1'0, S=\sys1.spi.wr) into $auto$simplemap.cc:420:simplemap_dff$8054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8432 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8433 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8434 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8435 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8436 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8652 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8442 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8653 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8654 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8444 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8655 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8445 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8656 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8446 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8657 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8447 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8658 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8448 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8659 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8449 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8660 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8450 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8661 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8451 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8651 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8441 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8662 (A=$techmap\sys1.uart2.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart2.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8452 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8530 (A=\sys1.uart2.dv, B=1'0, S=\sys1.uart2.rd) into $auto$simplemap.cc:420:simplemap_dff$8496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8797 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8798 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8799 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8800 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8801 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8802 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8803 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$8804 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9017 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9018 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9019 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9020 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9021 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9022 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8815 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9023 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8816 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9024 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8817 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9025 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8818 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9026 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8819 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9016 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9027 (A=$techmap\sys1.uart1.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart1.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$8820 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8898 (A=\sys1.uart1.dv, B=1'0, S=\sys1.uart1.rd) into $auto$simplemap.cc:420:simplemap_dff$8864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9069 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9070 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9338 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [1], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9079 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9339 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [2], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9340 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [3], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9081 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9341 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [4], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9082 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9342 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [5], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9083 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9343 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [6], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9084 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9344 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [7], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9085 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9345 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [8], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9086 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9346 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [9], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9087 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9347 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [10], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9088 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9337 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [0], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9078 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9348 (A=$techmap\sys1.uart0.$ternary$uart.v:42$758_Y [11], B=1'0, S=$techmap\sys1.uart0.$and$uart.v:42$755_Y) into $auto$simplemap.cc:420:simplemap_dff$9089 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [1], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [2], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9219 (A=\sys1.uart0.dv, B=1'0, S=\sys1.uart0.rd) into $auto$simplemap.cc:420:simplemap_dff$9150 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [3], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [4], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6790 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [5], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6791 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [6], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6792 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [7], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$9468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=1'0, B=$techmap\sys1.cpu.$memrd$\regs$laRVa.v:45$37_DATA [0], S=$techmap\sys1.cpu.$ne$laRVa.v:45$36_Y) into $auto$simplemap.cc:420:simplemap_dff$2711 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 261 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..
Removed 76 unused cells and 7543 unused wires.

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.12. Rerunning OPT passes. (Removed registers in this run.)

2.40.13. Running ICE40 specific optimizations.

2.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module main.

2.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\main'.
Removed a total of 0 cells.

2.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \main..

2.40.18. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing ABC pass (technology mapping using ABC).

2.42.1. Extracting gate netlist of module `\main' to `<abc-temp-dir>/input.blif'..
Extracted 4362 gates and 6003 wires to a netlist network with 1639 inputs and 739 outputs.

2.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1224.
ABC: Participating nodes from both networks       =    2597.
ABC: Participating nodes from the first network   =    1235. (  45.96 % of nodes)
ABC: Participating nodes from the second network  =    1362. (  50.69 % of nodes)
ABC: Node pairs (any polarity)                    =    1234. (  45.92 % of names can be moved)
ABC: Node pairs (same polarity)                   =     884. (  32.90 % of names can be moved)
ABC: Total runtime =     0.22 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2686
ABC RESULTS:        internal signals:     3625
ABC RESULTS:           input signals:     1639
ABC RESULTS:          output signals:      739
Removing temp directory.

2.43. Executing ICE40_WRAPCARRY pass (wrap carries).

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 241 unused cells and 2807 unused wires.

2.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2970
  1-LUT               94
  2-LUT              303
  3-LUT             1237
  4-LUT             1336
  with \SB_CARRY     257

Eliminating LUTs.
Number of LUTs:     2970
  1-LUT               94
  2-LUT              303
  3-LUT             1237
  4-LUT             1336
  with \SB_CARRY     257

Combining LUTs.
Number of LUTs:     2891
  1-LUT               63
  2-LUT              252
  3-LUT             1198
  4-LUT             1378
  with \SB_CARRY     257

Eliminated 0 LUTs.
Combined 79 LUTs.

2.46. Executing TECHMAP pass (map to technology primitives).

2.46.1. Executing Verilog-2005 frontend: C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v
Parsing Verilog input from `C:\Users\ANDRSM~1\Desktop\CARPET~1\tools\TOOLCH~3\bin\../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101010010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001010010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100010000100 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 5835 unused wires.

2.47. Executing AUTONAME pass.
Renamed 66853 objects in module main (100 iterations).

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \main

2.48.2. Analyzing design hierarchy..
Top module:  \main
Removed 0 unused modules.

2.49. Printing statistics.

=== main ===

   Number of wires:               2983
   Number of wire bits:           6180
   Number of public wires:        2983
   Number of public wire bits:    6180
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4672
     SB_CARRY                      467
     SB_DFF                        145
     SB_DFFE                       896
     SB_DFFER                       38
     SB_DFFESR                     117
     SB_DFFR                        33
     SB_DFFSR                       68
     SB_LUT4                      2891
     SB_PLL40_CORE                   1
     SB_RAM40_4KNRNW                16

2.50. Executing CHECK pass (checking for obvious problems).
checking module main..
found and reported 0 problems.

-- Writing to `main.json' using backend `json' --

3. Executing JSON backend.

Warnings: 12 unique messages, 27 total
End of script. Logfile hash: 38c58029ca
Yosys 0.9+932 (git sha1 UNKNOWN, x86_64-w64-mingw32-g++ 7.3-posix -O3 -DNDEBUG)
Time spent: 1% 28x opt_expr (0 sec), 1% 27x opt_clean (0 sec), ...
